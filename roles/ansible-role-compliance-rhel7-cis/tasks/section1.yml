- name: "EVIDENCE | 1.1.1.1 | BEFORE | Ensure cramfs is disabled"
  block:
  - name: Initialize facts for 1.1.1.1
    set_fact:
      mode_rhel7cis_rule_1_1_1_1: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_1_1|bool) else 'check_only'}}"
      cis_noncompliant_1_1_1_1_status: Unknown
  - name: "EVIDENCE | 1.1.1.1 | BEFORE | Ensure mounting of cramfs filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install cramfs(\\s|$)"
      line: "install cramfs /bin/true"
      create: yes
    check_mode: yes
    register: eb_rhel7cis_rule_1_1_1_1a
  - name: "EVIDENCE | 1.1.1.1 | BEFORE | Ensure cramfs module is removed"
    shell: lsmod | grep cramfs; true
    changed_when: False
    register: eb_rhel7cis_rule_1_1_1_1b
  when:
      - (rhel7cis_rule_1_1_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_1|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "SCORED | 1.1.1.1 | PATCH | Ensure cramfs is disabled"
  block:
  - name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install cramfs(\\s|$)"
      line: "install cramfs /bin/true"
      create: yes
    register: rhel7cis_rule_1_1_1_1a_out
  - name: Display Output | 1.1.1.1 | Check Compliant
    block:
    - name: Display Output | 1.1.1.1 | When Not Compliant
      debug:
        msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.1 | mounting of cramfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_1a_out.changed}}"
      when:
        rhel7cis_rule_1_1_1_1a_out.changed
    - name: Display Output | 1.1.1.1 | When Compliant
      debug:
        msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.1 | mounting of cramfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_1a_out.changed}}"
      when:
        not rhel7cis_rule_1_1_1_1a_out.changed
  - name: "SCORED | 1.1.1.1 | PATCH | Ensure cramfs module is removed"
    modprobe:
      name: cramfs
      state: absent
    register: rhel7cis_rule_1_1_1_1b_out
  - name: Display Output | 1.1.1.1 | Check Compliant
    block:
      - name: Display Output | 1.1.1.1 | When Not Compliant
        debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.1 | mounting of cramfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_1b_out.changed}}"
        when:
          rhel7cis_rule_1_1_1_1b_out.changed
      - name: Display Output | 1.1.1.1 | When Compliant
        debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.1 | mounting of cramfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_1b_out.changed}}"
        when:
          not rhel7cis_rule_1_1_1_1b_out.changed
  when:
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_1|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "EVIDENCE | 1.1.1.1 | AFTER | Ensure cramfs is disabled"
  block:
  - name: "EVIDENCE | 1.1.1.1 | AFTER | Ensure mounting of cramfs filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install cramfs(\\s|$)"
      line: "install cramfs /bin/true"
      create: yes
    check_mode: yes
    register: ea_rhel7cis_rule_1_1_1_1a
  - name: "EVIDENCE | 1.1.1.1 | AFTER | Ensure cramfs module is removed"
    shell: lsmod | grep cramfs; true
    changed_when: False
    register: ea_rhel7cis_rule_1_1_1_1b
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_1_1_status: Compliant
    when: not ea_rhel7cis_rule_1_1_1_1a.changed and ea_rhel7cis_rule_1_1_1_1b.stdout == ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_1_1_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.1"] }}'
    when: ea_rhel7cis_rule_1_1_1_1a.changed or ea_rhel7cis_rule_1_1_1_1b.stdout != ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.1.1","description":"Ensure cramfs is disabled","before":eb_rhel7cis_rule_1_1_1_1a.msg+" - "+eb_rhel7cis_rule_1_1_1_1b.stdout,"after":ea_rhel7cis_rule_1_1_1_1a.msg+" - "+ea_rhel7cis_rule_1_1_1_1b.stdout,"mode":mode_rhel7cis_rule_1_1_1_1,"status":cis_noncompliant_1_1_1_1_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_1_1a.msg is defined
    - eb_rhel7cis_rule_1_1_1_1b.stdout is defined
    - ea_rhel7cis_rule_1_1_1_1a.msg is defined
    - ea_rhel7cis_rule_1_1_1_1b.stdout is defined
  when:
    - (rhel7cis_rule_1_1_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_1|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs
#*********************************************************************************
- name: "EVIDENCE | 1.1.1.2 | BEFORE | Ensure freevxfs is disabled"
  block:
  - name: Initialize facts for 1.1.1.2
    set_fact:
      mode_rhel7cis_rule_1_1_1_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_1_2|bool) else 'check_only'}}"
      cis_noncompliant_1_1_1_2_status: Unknown
  - name: "EVIDENCE | 1.1.1.2 | BEFORE | Ensure mounting of freevxfs filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install freevxfs(\\s|$)"
      line: "install freevxfs /bin/true"
      create: yes
    check_mode: yes
    register: eb_rhel7cis_rule_1_1_1_2a
  - name: "EVIDENCE | 1.1.1.2 | BEFORE | Ensure freevxfs module is removed"
    shell: lsmod | grep freevxfs; true
    changed_when: False
    register: eb_rhel7cis_rule_1_1_1_2b
  when:
      - (rhel7cis_rule_1_1_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_2|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "SCORED | 1.1.1.2 | PATCH | Ensure freevxfs is disabled"
  block:
  - name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install freevxfs(\\s|$)"
      line: "install freevxfs /bin/true"
      create: yes
    register: rhel7cis_rule_1_1_1_2a_out
  - name: Display Output | 1.1.1.2 | Check Compliant
    block:
    - name: Display Output | 1.1.1.2 | When Not Compliant
      debug:
        msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.2 | mounting of freevxfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_2a_out.changed}}"
      when:
        rhel7cis_rule_1_1_1_2a_out.changed
    - name: Display Output | 1.1.1.2 | When Compliant
      debug:
        msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.2 | mounting of freevxfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_2a_out.changed}}"
      when:
        not rhel7cis_rule_1_1_1_2a_out.changed
  - name: "SCORED | 1.1.1.2 | PATCH | Ensure freevxfs module is removed"
    modprobe:
      name: freevxfs
      state: absent
    register: rhel7cis_rule_1_1_1_2b_out
  - name: Display Output | 1.1.1.2 | Check Compliant
    block:
      - name: Display Output | 1.1.1.2 | When Not Compliant
        debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.2 | mounting of freevxfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_2b_out.changed}}"
        when:
          rhel7cis_rule_1_1_1_2b_out.changed
      - name: Display Output | 1.1.1.2 | When Compliant
        debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.2 | mounting of freevxfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_2b_out.changed}}"
        when:
          not rhel7cis_rule_1_1_1_2b_out.changed
  when:
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_2|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "EVIDENCE | 1.1.1.2 | AFTER | Ensure freevxfs is disabled"
  block:
  - name: "EVIDENCE | 1.1.1.2 | AFTER | Ensure mounting of freevxfs filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install freevxfs(\\s|$)"
      line: "install freevxfs /bin/true"
      create: yes
    check_mode: yes
    register: ea_rhel7cis_rule_1_1_1_2a
  - name: "EVIDENCE | 1.1.1.2 | AFTER | Ensure freevxfs module is removed"
    shell: lsmod | grep freevxfs; true
    changed_when: False
    register: ea_rhel7cis_rule_1_1_1_2b
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_1_2_status: Compliant
    when: not ea_rhel7cis_rule_1_1_1_2a.changed and ea_rhel7cis_rule_1_1_1_2b.stdout == ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_1_2_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.2"] }}'
    when: ea_rhel7cis_rule_1_1_1_2a.changed or ea_rhel7cis_rule_1_1_1_2b.stdout != ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.1.2","description":"Ensure freevxfs is disabled","before":eb_rhel7cis_rule_1_1_1_2a.msg+" - "+eb_rhel7cis_rule_1_1_1_2b.stdout,"after":ea_rhel7cis_rule_1_1_1_2a.msg+" - "+ea_rhel7cis_rule_1_1_1_2b.stdout,"mode":mode_rhel7cis_rule_1_1_1_2,"status":cis_noncompliant_1_1_1_2_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_1_2a.msg is defined
    - eb_rhel7cis_rule_1_1_1_2b.stdout is defined
    - ea_rhel7cis_rule_1_1_1_2a.msg is defined
    - ea_rhel7cis_rule_1_1_1_2b.stdout is defined
  when:
    - (rhel7cis_rule_1_1_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_2|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.2
    - freevxfs
#*********************************************************************************
- name: "EVIDENCE | 1.1.1.3 | BEFORE | Ensure jffs2 is disabled"
  block:
  - name: Initialize facts for 1.1.1.3
    set_fact:
      mode_rhel7cis_rule_1_1_1_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_1_3|bool) else 'check_only'}}"
      cis_noncompliant_1_1_1_3_status: Unknown
  - name: "EVIDENCE | 1.1.1.3 | BEFORE | Ensure mounting of jffs2 filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install jffs2(\\s|$)"
      line: "install jffs2 /bin/true"
      create: yes
    check_mode: yes
    register: eb_rhel7cis_rule_1_1_1_3a
  - name: "EVIDENCE | 1.1.1.3 | BEFORE | Ensure jffs2 module is removed"
    shell: lsmod | grep jffs2; true
    changed_when: False
    register: eb_rhel7cis_rule_1_1_1_3b
  when:
      - (rhel7cis_rule_1_1_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_3|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "SCORED | 1.1.1.3 | PATCH | Ensure jffs2 is disabled"
  block:
  - name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install jffs2(\\s|$)"
      line: "install jffs2 /bin/true"
      create: yes
    register: rhel7cis_rule_1_1_1_3a_out
  - name: Display Output | 1.1.1.3 | Check Compliant
    block:
    - name: Display Output | 1.1.1.3 | When Not Compliant
      debug:
        msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.3 | mounting of jffs2 filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_3a_out.changed}}"
      when:
        rhel7cis_rule_1_1_1_3a_out.changed
    - name: Display Output | 1.1.1.3 | When Compliant
      debug:
        msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.3 | mounting of jffs2 filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_3a_out.changed}}"
      when:
        not rhel7cis_rule_1_1_1_3a_out.changed
  - name: "SCORED | 1.1.1.3 | PATCH | Ensure jffs2 module is removed"
    modprobe:
      name: jffs2
      state: absent
    register: rhel7cis_rule_1_1_1_3b_out
  - name: Display Output | 1.1.1.3 | Check Compliant
    block:
      - name: Display Output | 1.1.1.3 | When Not Compliant
        debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.3 | mounting of jffs2 filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_3b_out.changed}}"
        when:
          rhel7cis_rule_1_1_1_3b_out.changed
      - name: Display Output | 1.1.1.3 | When Compliant
        debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.3 | mounting of jffs2 filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_3b_out.changed}}"
        when:
          not rhel7cis_rule_1_1_1_3b_out.changed
  when:
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_3|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "EVIDENCE | 1.1.1.3 | AFTER | Ensure jffs2 is disabled"
  block:
  - name: "EVIDENCE | 1.1.1.3 | AFTER | Ensure mounting of jffs2 filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install jffs2(\\s|$)"
      line: "install jffs2 /bin/true"
      create: yes
    check_mode: yes
    register: ea_rhel7cis_rule_1_1_1_3a
  - name: "EVIDENCE | 1.1.1.3 | AFTER | Ensure jffs2 module is removed"
    shell: lsmod | grep jffs2; true
    changed_when: False
    register: ea_rhel7cis_rule_1_1_1_3b
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_1_3_status: Compliant
    when: not ea_rhel7cis_rule_1_1_1_3a.changed and ea_rhel7cis_rule_1_1_1_3b.stdout == ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_1_3_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.3"] }}'
    when: ea_rhel7cis_rule_1_1_1_3a.changed or ea_rhel7cis_rule_1_1_1_3b.stdout != ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.1.3","description":"Ensure jffs2 is disabled","before":eb_rhel7cis_rule_1_1_1_3a.msg+" - "+eb_rhel7cis_rule_1_1_1_3b.stdout,"after":ea_rhel7cis_rule_1_1_1_3a.msg+" - "+ea_rhel7cis_rule_1_1_1_3b.stdout,"mode":mode_rhel7cis_rule_1_1_1_3,"status":cis_noncompliant_1_1_1_3_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_1_3a.msg is defined
    - eb_rhel7cis_rule_1_1_1_3b.stdout is defined
    - ea_rhel7cis_rule_1_1_1_3a.msg is defined
    - ea_rhel7cis_rule_1_1_1_3b.stdout is defined
  when:
    - (rhel7cis_rule_1_1_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_3|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.3
      - jffs2
#*********************************************************************************
- name: "EVIDENCE | 1.1.1.4 | BEFORE | Ensure mounting of hfs filesystems is disabled | Remove hfs module"
  block:
  - set_fact:
      cis_noncompliant_1_1_1_4_status: Unknown
  - shell: "errormessage=$( /sbin/modprobe -n -v hfs 2>&1); echo $errormessage; lsmod | grep hfs || true"
    register: eb_rhel7cis_rule_1_1_1_4
  - set_fact:
      mode_rhel7cis_rule_1_1_1_4: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_1_4|bool) else 'check_only' }}"
  when:
      - (rhel7cis_rule_1_1_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs
      - customcheck
  check_mode: no
  #check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool)) }}"

- name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install hfs(\\s|$)"
      line: "install hfs /bin/true"
      create: yes
  register:  rhel7cis_rule_1_1_1_4a_out
  when:
      - rhel7cis_rule_1_1_1_4|bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool)) }}"

- name: Display Output | 1.1.1.4 | Check Compliant
  block:
    - block:
        - name: Display Output | 1.1.1.4 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.4 | Ensure mounting of hfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_4a_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_1_1_1_4_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.4"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          rhel7cis_rule_1_1_1_4a_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool))
    - block:
        - name: Display Output | 1.1.1.4 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.4 | Ensure mounting of hfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_4a_out.changed}}"
        - set_fact:
            cis_noncompliant_1_1_1_4_status: Compliant
      when:
           not  rhel7cis_rule_1_1_1_4a_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool)
  when:
      - (rhel7cis_rule_1_1_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs
      - customcheck

- name: "SCORED | 1.1.1.4 | PATCH | Remove hfs module"
  modprobe:
    name: hfs
    state: absent
  register:  rhel7cis_rule_1_1_1_4b_out
  when:
      - rhel7cis_rule_1_1_1_4|bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool)) }}"

- name: Display Output | 1.1.1.4 | Check Compliant
  block:
    - block:
        - name: Display Output | 1.1.1.4 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.4 | Remove hfs module|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_4b_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_1_1_1_4_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.4"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          rhel7cis_rule_1_1_1_4b_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool))
    - block:
        - name: Display Output | 1.1.1.4 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.4 | Remove hfs module|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_4b_out.changed}}"
        - set_fact:
            cis_noncompliant_1_1_1_4_status: Compliant
      when:
           not  rhel7cis_rule_1_1_1_4b_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool)
  when:
      - (rhel7cis_rule_1_1_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs
      - customcheck

- name: "EVIDENCE | 1.1.1.4 | AFTER | Ensure mounting of hfs filesystems is disabled | Remove hfs module"
  block:
  - shell: "errormessage=$( /sbin/modprobe -n -v hfs 2>&1); echo $errormessage; lsmod | grep hfs || true"
    register: ea_rhel7cis_rule_1_1_1_4
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.1.4","description":"Ensure mounting of hfs filesystems is disabled | Remove hfs module","before":eb_rhel7cis_rule_1_1_1_4.stdout,"after":ea_rhel7cis_rule_1_1_1_4.stdout,"mode":mode_rhel7cis_rule_1_1_1_4,"status":cis_noncompliant_1_1_1_4_status}] }}'
    when: eb_rhel7cis_rule_1_1_1_4.stdout is defined and ea_rhel7cis_rule_1_1_1_4.stdout is defined
  when:
      - (rhel7cis_rule_1_1_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_4|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs
      - customcheck
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 1.1.1.5 | BEFORE | Ensure mounting of hfsplus filesystems is disabled | Remove hfsplus module"
  block:
  - set_fact:
      cis_noncompliant_1_1_1_5_status: Unknown
  - shell: "errormessage=$( /sbin/modprobe -n -v hfsplus 2>&1); echo $errormessage; lsmod | grep hfsplus || true"
    register: eb_rhel7cis_rule_1_1_1_5
  - set_fact:
      mode_rhel7cis_rule_1_1_1_5: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_1_5|bool) else 'check_only' }}"
  when:
      - (rhel7cis_rule_1_1_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus
      - customcheck
  check_mode: no
  #check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool)) }}"

- name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install hfsplus(\\s|$)"
      line: "install hfsplus /bin/true"
      create: yes
  register:  rhel7cis_rule_1_1_1_5a_out
  when:
      - rhel7cis_rule_1_1_1_5|bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool)) }}"

- name: Display Output | 1.1.1.5 | Check Compliant
  block:
    - block:
        - name: Display Output | 1.1.1.5 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.5 | mounting of hfsplus filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_5a_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_1_1_1_5_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.5"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          rhel7cis_rule_1_1_1_5a_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool))
    - block:
        - name: Display Output | 1.1.1.5 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.5 | mounting of hfsplus filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_5a_out.changed}}"
        - set_fact:
            cis_noncompliant_1_1_1_5_status: Compliant
      when:
           not  rhel7cis_rule_1_1_1_5a_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool)
  when:
      - (rhel7cis_rule_1_1_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus
      - customcheck

- name: "SCORED | 1.1.1.5 | PATCH | Remove hfsplus module"
  modprobe:
    name: hfsplus
    state: absent
  register:  rhel7cis_rule_1_1_1_5b_out
  when:
      - rhel7cis_rule_1_1_1_5|bool
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool)) }}"

- name: Display Output | 1.1.1.5 | Check Compliant
  block:
    - block:
        - name: Display Output | 1.1.1.5 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.5 | Remove hfsplus module|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_5b_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_1_1_1_5_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.5"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          rhel7cis_rule_1_1_1_5b_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool))
    - block:
        - name: Display Output | 1.1.1.5 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.5 | Remove hfsplus module|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_5b_out.changed}}"
        - set_fact:
            cis_noncompliant_1_1_1_5_status: Compliant
      when:
           not  rhel7cis_rule_1_1_1_5b_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool)
  when:
      - (rhel7cis_rule_1_1_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus
      - customcheck

- name: "EVIDENCE | 1.1.1.5 | AFTER | Ensure mounting of hfsplus filesystems is disabled | Remove hfsplus module"
  block:
  - shell: "errormessage=$( /sbin/modprobe -n -v hfsplus 2>&1); echo $errormessage; lsmod | grep hfsplus || true"
    register: ea_rhel7cis_rule_1_1_1_5
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.1.5","description":"Ensure mounting of hfsplus filesystems is disabled | Remove hfsplus module","before":eb_rhel7cis_rule_1_1_1_5.stdout,"after":ea_rhel7cis_rule_1_1_1_5.stdout,"mode":mode_rhel7cis_rule_1_1_1_5,"status":cis_noncompliant_1_1_1_5_status}] }}'
    when: eb_rhel7cis_rule_1_1_1_5.stdout is defined and ea_rhel7cis_rule_1_1_1_5.stdout is defined
  when:
      - (rhel7cis_rule_1_1_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_5|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus
      - customcheck
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 1.1.1.6 | BEFORE | Ensure squashfs is disabled"
  block:
  - name: Initialize facts for 1.1.1.6
    set_fact:
      mode_rhel7cis_rule_1_1_1_6: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_1_6|bool) else 'check_only'}}"
      cis_noncompliant_1_1_1_6_status: Unknown
  - name: "EVIDENCE | 1.1.1.6 | BEFORE | Ensure mounting of squashfs filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install squashfs(\\s|$)"
      line: "install squashfs /bin/true"
      create: yes
    check_mode: yes
    register: eb_rhel7cis_rule_1_1_1_6a
  - name: "EVIDENCE | 1.1.1.6 | BEFORE | Ensure squashfs module is removed"
    shell: lsmod | grep squashfs; true
    changed_when: False
    register: eb_rhel7cis_rule_1_1_1_6b
  when:
      - (rhel7cis_rule_1_1_1_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_6|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.6
      - squashfs

- name: "SCORED | 1.1.1.6 | PATCH | Ensure squashfs is disabled"
  block:
  - name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install squashfs(\\s|$)"
      line: "install squashfs /bin/true"
      create: yes
    register: rhel7cis_rule_1_1_1_6a_out
  - name: Display Output | 1.1.1.6 | Check Compliant
    block:
    - name: Display Output | 1.1.1.6 | When Not Compliant
      debug:
        msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.6 | mounting of squashfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_6a_out.changed}}"
      when:
        rhel7cis_rule_1_1_1_6a_out.changed
    - name: Display Output | 1.1.1.6 | When Compliant
      debug:
        msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.6 | mounting of squashfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_6a_out.changed}}"
      when:
        not rhel7cis_rule_1_1_1_6a_out.changed
  - name: "SCORED | 1.1.1.6 | PATCH | Ensure squashfs module is removed"
    modprobe:
      name: squashfs
      state: absent
    register: rhel7cis_rule_1_1_1_6b_out
  - name: Display Output | 1.1.1.6 | Check Compliant
    block:
      - name: Display Output | 1.1.1.6 | When Not Compliant
        debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.6 | mounting of squashfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_6b_out.changed}}"
        when:
          rhel7cis_rule_1_1_1_6b_out.changed
      - name: Display Output | 1.1.1.6 | When Compliant
        debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.6 | mounting of squashfs filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_6b_out.changed}}"
        when:
          not rhel7cis_rule_1_1_1_6b_out.changed
  when:
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_6|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.6
      - squashfs

- name: "EVIDENCE | 1.1.1.6 | AFTER | Ensure squashfs is disabled"
  block:
  - name: "EVIDENCE | 1.1.1.6 | AFTER | Ensure mounting of squashfs filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install squashfs(\\s|$)"
      line: "install squashfs /bin/true"
      create: yes
    check_mode: yes
    register: ea_rhel7cis_rule_1_1_1_6a
  - name: "EVIDENCE | 1.1.1.6 | AFTER | Ensure squashfs module is removed"
    shell: lsmod | grep squashfs; true
    changed_when: False
    register: ea_rhel7cis_rule_1_1_1_6b
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_1_6_status: Compliant
    when: not ea_rhel7cis_rule_1_1_1_6a.changed and ea_rhel7cis_rule_1_1_1_6b.stdout == ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_1_6_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.6"] }}'
    when: ea_rhel7cis_rule_1_1_1_6a.changed or ea_rhel7cis_rule_1_1_1_6b.stdout != ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.1.6","description":"Ensure squashfs is disabled","before":eb_rhel7cis_rule_1_1_1_6a.msg+" - "+eb_rhel7cis_rule_1_1_1_6b.stdout,"after":ea_rhel7cis_rule_1_1_1_6a.msg+" - "+ea_rhel7cis_rule_1_1_1_6b.stdout,"mode":mode_rhel7cis_rule_1_1_1_6,"status":cis_noncompliant_1_1_1_6_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_1_6a.msg is defined
    - eb_rhel7cis_rule_1_1_1_6b.stdout is defined
    - ea_rhel7cis_rule_1_1_1_6a.msg is defined
    - ea_rhel7cis_rule_1_1_1_6b.stdout is defined
  when:
    - (rhel7cis_rule_1_1_1_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_6|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.6
      - squashfs
#*********************************************************************************
- name: "EVIDENCE | 1.1.1.7 | BEFORE | Ensure udf is disabled"
  block:
  - name: Initialize facts for 1.1.1.7
    set_fact:
      mode_rhel7cis_rule_1_1_1_7: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_1_7|bool) else 'check_only'}}"
      cis_noncompliant_1_1_1_7_status: Unknown
  - name: "EVIDENCE | 1.1.1.7 | BEFORE | Ensure mounting of udf filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install udf(\\s|$)"
      line: "install udf /bin/true"
      create: yes
    check_mode: yes
    register: eb_rhel7cis_rule_1_1_1_7a
  - name: "EVIDENCE | 1.1.1.7 | BEFORE | Ensure udf module is removed"
    shell: lsmod | grep udf; true
    changed_when: False
    register: eb_rhel7cis_rule_1_1_1_7b
  when:
    - (rhel7cis_rule_1_1_1_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_7|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.7
    - udf

- name: "SCORED | 1.1.1.7 | PATCH | Ensure udf is disabled"
  block:
  - name: "SCORED | 1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install udf(\\s|$)"
      line: "install udf /bin/true"
      create: yes
    register: rhel7cis_rule_1_1_1_7a_out
  - name: Display Output | 1.1.1.7 | Check Compliant
    block:
    - name: Display Output | 1.1.1.7 | When Not Compliant
      debug:
        msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.7 | mounting of udf filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_7a_out.changed}}"
      when:
        rhel7cis_rule_1_1_1_7a_out.changed
    - name: Display Output | 1.1.1.7 | When Compliant
      debug:
        msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.7 | mounting of udf filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_7a_out.changed}}"
      when:
        not rhel7cis_rule_1_1_1_7a_out.changed
  - name: "SCORED | 1.1.1.7 | PATCH | Ensure udf module is removed"
    modprobe:
      name: udf
      state: absent
    register: rhel7cis_rule_1_1_1_7b_out
  - name: Display Output | 1.1.1.7 | Check Compliant
    block:
      - name: Display Output | 1.1.1.7 | When Not Compliant
        debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.7 | mounting of udf filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_7b_out.changed}}"
        when:
          rhel7cis_rule_1_1_1_7b_out.changed
      - name: Display Output | 1.1.1.7 | When Compliant
        debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.7 | mounting of udf filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_7b_out.changed}}"
        when:
          not rhel7cis_rule_1_1_1_7b_out.changed
  when:
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_7|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.7
    - udf

- name: "EVIDENCE | 1.1.1.7 | AFTER | Ensure udf is disabled"
  block:
  - name: "EVIDENCE | 1.1.1.7 | AFTER | Ensure mounting of udf filesystems is disabled"
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install udf(\\s|$)"
      line: "install udf /bin/true"
      create: yes
    check_mode: yes
    register: ea_rhel7cis_rule_1_1_1_7a
  - name: "EVIDENCE | 1.1.1.7 | AFTER | Ensure udf module is removed"
    shell: lsmod | grep udf; true
    changed_when: False
    register: ea_rhel7cis_rule_1_1_1_7b
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_1_7_status: Compliant
    when: not ea_rhel7cis_rule_1_1_1_7a.changed and ea_rhel7cis_rule_1_1_1_7b.stdout == ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_1_7_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.7"] }}'
    when: ea_rhel7cis_rule_1_1_1_7a.changed or ea_rhel7cis_rule_1_1_1_7b.stdout != ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.1.7","description":"Ensure udf is disabled","before":eb_rhel7cis_rule_1_1_1_7a.msg+" - "+eb_rhel7cis_rule_1_1_1_7b.stdout,"after":ea_rhel7cis_rule_1_1_1_7a.msg+" - "+ea_rhel7cis_rule_1_1_1_7b.stdout,"mode":mode_rhel7cis_rule_1_1_1_7,"status":cis_noncompliant_1_1_1_7_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_1_7a.msg is defined
    - eb_rhel7cis_rule_1_1_1_7b.stdout is defined
    - ea_rhel7cis_rule_1_1_1_7a.msg is defined
    - ea_rhel7cis_rule_1_1_1_7b.stdout is defined
  when:
    - (rhel7cis_rule_1_1_1_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_7|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.1.7
    - udf
#*********************************************************************************
- name: "EVIDENCE | 1.1.1.8 | BEFORE | Ensure mounting of FAT filesystems is disabled | Remove FAT module"
  block:
  - set_fact:
      cis_noncompliant_1_1_1_8_status: Unknown
  - shell: modprobe -n -v vfat; lsmod | grep vfat || true
    register: eb_rhel7cis_rule_1_1_1_8
  - set_fact:
      mode_rhel7cis_rule_1_1_1_8: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_1_8|bool) else 'check_only' }}"
  when:
      - (rhel7cis_rule_1_1_1_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.1.8
      - vfat
      - customcheck
  check_mode: no
  #check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool)) }}"

- name: "SCORED | 1.1.1.8 | PATCH | Ensure mounting of FAT filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install vfat(\\s|$)"
      line: "install vfat /bin/true"
      create: yes
  register:  rhel7cis_rule_1_1_1_8a_out
  when:
      - rhel7cis_rule_1_1_1_8|bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.1.8
      - vfat
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool)) }}"

- name: Display Output | 1.1.1.8 | Check Compliant
  block:
    - block:
        - name: Display Output | 1.1.1.8 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.8 |  mounting of FAT filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_8a_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_1_1_1_8_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.8"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          rhel7cis_rule_1_1_1_8a_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool))
    - block:
        - name: Display Output | 1.1.1.8 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.8 |  mounting of FAT filesystems is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_8a_out.changed}}"
        - set_fact:
            cis_noncompliant_1_1_1_8_status: Compliant
      when:
           not  rhel7cis_rule_1_1_1_8a_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool)
  when:
      - (rhel7cis_rule_1_1_1_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.1.8
      - vfat
      - customcheck

- name: "SCORED | 1.1.1.8 | PATCH | Remove FAT module"
  modprobe:
    name: vfat
    state: absent
  register:  rhel7cis_rule_1_1_1_8b_out
  when:
      - rhel7cis_rule_1_1_1_8|bool
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.1.8
      - vfat
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool)) }}"

- name: Display Output | 1.1.1.8 | Check Compliant
  block:
    - block:
        - name: Display Output | 1.1.1.8 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 1.1.1.8 | Remove FAT module|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_8b_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_1_1_1_8_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.1.8"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          rhel7cis_rule_1_1_1_8b_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool))
    - block:
        - name: Display Output | 1.1.1.8 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.1.8 | Remove FAT module|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_1_8b_out.changed}}"
        - set_fact:
            cis_noncompliant_1_1_1_8_status: Compliant
      when:
           not  rhel7cis_rule_1_1_1_8b_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool)
  when:
      - (rhel7cis_rule_1_1_1_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.1.8
      - vfat
      - customcheck

- name: "EVIDENCE | 1.1.1.8 | AFTER | Ensure mounting of FAT filesystems is disabled | Remove FAT module"
  block:
  - shell: modprobe -n -v vfat; lsmod | grep vfat || true
    register: ea_rhel7cis_rule_1_1_1_8
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.1.8","description":"Ensure mounting of FAT filesystems is disabled | Remove FAT module","before":eb_rhel7cis_rule_1_1_1_8.stdout,"after":ea_rhel7cis_rule_1_1_1_8.stdout,"mode":mode_rhel7cis_rule_1_1_1_8,"status":cis_noncompliant_1_1_1_8_status}] }}'
    when: eb_rhel7cis_rule_1_1_1_8.stdout is defined and ea_rhel7cis_rule_1_1_1_8.stdout is defined
  when:
      - (rhel7cis_rule_1_1_1_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_1_8|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.1.8
      - vfat
      - customcheck
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 1.1.2 | BEFORE | Ensure separate partition exists for /tmp | enable and start/restart tmp.mount"
  block:
  - name: Initialize facts for 1.1.2
    set_fact:
      mode_rhel7cis_rule_1_1_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_2|bool) else 'check_only'}}"
      cis_noncompliant_1_1_2_status: Unknown
  - name: "EVIDENCE | 1.1.2 | BEFORE | Ensure separate partition exists for /tmp | enable and start/restart tmp.mount"
    shell: systemctl is-enabled tmp.mount; true
    register: eb_rhel7cis_rule_1_1_2
  when:
    - (rhel7cis_rule_1_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_2|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.2

- name: "SCORED | 1.1.2 | PATCH | Ensure separate partition exists for /tmp | enable and start/restart tmp.mount"
  systemd:
    name: tmp.mount
    daemon_reload: yes
    enabled: yes
    masked: no
    state: started
  register:  rhel7cis_rule_1_1_2_out
  when:
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_2|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.2

- name: Display Output | 1.1.2 | Check Compliant
  block:
    - name: Display Output | 1.1.2 | When NOT Compliant
      debug:
        msg="NOT_COMPLIANT|CIS_RESULT| 1.1.2 |separate partition exists for /tmp - enable and start/restart tmp.mount|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_2_out.changed}}"
      when:
        rhel7cis_rule_1_1_2_out.changed
    - name: Display Output | 1.1.2 | When Compliant
      debug:
        msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.2 |separate partition exists for /tmp - enable and start/restart tmp.mount|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_2_out.changed}}"
      when:
        not rhel7cis_rule_1_1_2_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_2|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.2
      - customcheck

- name: "EVIDENCE | 1.1.2 | AFTER | Ensure separate partition exists for /tmp | enable and start/restart tmp.mount"
  block:
  - name: "EVIDENCE | 1.1.2 | AFTER | Ensure separate partition exists for /tmp | enable and start/restart tmp.mount"
    shell: systemctl is-enabled tmp.mount; true
    register: ea_rhel7cis_rule_1_1_2
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_2_status: Compliant
    when: ea_rhel7cis_rule_1_1_2.stdout is defined and ea_rhel7cis_rule_1_1_2.stdout == "enabled"
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_2_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.2"] }}'
    when: ea_rhel7cis_rule_1_1_2.stdout is defined and ea_rhel7cis_rule_1_1_2.stdout != "enabled"
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.2","description":"Ensure separate partition exists for /tmp | enable and start/restart tmp.mount","before":eb_rhel7cis_rule_1_1_2.stdout,"after":ea_rhel7cis_rule_1_1_2.stdout,"mode":mode_rhel7cis_rule_1_1_2,"status":cis_noncompliant_1_1_2_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_2.stdout is defined
  when:
    - (rhel7cis_rule_1_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_2|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.2
#*********************************************************************************
- name: "EVIDENCE | 1.1.3 | BEFORE | Ensure nodev option set on /tmp partition\n
         EVIDENCE | 1.1.4 | BEFORE | Ensure nosuid option set on /tmp partition\n
         EVIDENCE | 1.1.5 | BEFORE | Ensure noexec option set on /tmp partition\n
         | drop custom tmp.mount"
  block:
  - name: Initialize facts
    set_fact:
      mode_rhel7cis_rule_1_1_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_3|bool) else 'check_only'}}"
      mode_rhel7cis_rule_1_1_4: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_4|bool) else 'check_only'}}"
      mode_rhel7cis_rule_1_1_5: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_5|bool) else 'check_only'}}"
      cis_noncompliant_1_1_3_status: Unknown
      cis_noncompliant_1_1_4_status: Unknown
      cis_noncompliant_1_1_5_status: Unknown
  - name: "EVIDENCE | 1.1.3 | BEFORE | Ensure nodev option set on /tmp partition\n
           EVIDENCE | 1.1.4 | BEFORE | Ensure nosuid option set on /tmp partition\n
           EVIDENCE | 1.1.5 | BEFORE | Ensure noexec option set on /tmp partition\n
           | drop custom tmp.mount"
    shell: ls /etc/systemd/system/tmp.mount 2>&1; true
    changed_when: False
    register: eb_rhel7cis_rule_1_1_3to5
  when:
    - (rhel7cis_rule_1_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_3|bool)
    - (rhel7cis_rule_1_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_4|bool)
    - (rhel7cis_rule_1_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_5|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.3
    - rule_1.1.4
    - rule_1.1.5

- name: "SCORED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition\n
         SCORED | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition\n
         SCORED | 1.1.5 | PATCH | Ensure noexec option set on /tmp partition\n
         | drop custom tmp.mount"
  copy:
      src: etc/systemd/system/tmp.mount
      dest: /etc/systemd/system/tmp.mount
      owner: root
      group: root
      mode: 0644
  register:  rhel7cis_rule_1_1_5_out
  notify: systemd restart tmp.mount
  when:
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_3|bool)
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_4|bool)
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_5|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.3
    - rule_1.1.4
    - rule_1.1.5

- name: Display Output | 1.1.3 / 1.1.4 / 1.1.5 | Check Compliant
  block:
    - name: Display Output | 1.1.3 / 1.1.4 / 1.1.5 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.3 / 1.1.4 / 1.1.5 |nodev nosuid noexec ooption on /tmp partition - drop custom tmp.mount|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_5_out.changed}}"
      when:
           rhel7cis_rule_1_1_5_out.changed
    - name: Display Output | 1.1.3 / 1.1.4 / 1.1.5 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.3 / 1.1.4 / 1.1.5 |nodev nosuid noexec ooption on /tmp partition - drop custom tmp.mount|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_5_out.changed}}"
      when:
          not rhel7cis_rule_1_1_5_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_3|bool)
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_4|bool)
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_5|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5
      - customcheck

- name: "EVIDENCE | 1.1.3 | AFTER | Ensure nodev option set on /tmp partition\n
         EVIDENCE | 1.1.4 | AFTER | Ensure nosuid option set on /tmp partition\n
         EVIDENCE | 1.1.5 | AFTER | Ensure noexec option set on /tmp partition\n
         | drop custom tmp.mount"
  block:
  - name: "EVIDENCE | 1.1.3 | AFTER | Ensure nodev option set on /tmp partition\n
           EVIDENCE | 1.1.4 | AFTER | Ensure nosuid option set on /tmp partition\n
           EVIDENCE | 1.1.5 | AFTER | Ensure noexec option set on /tmp partition\n
           | drop custom tmp.mount"
    shell: ls /etc/systemd/system/tmp.mount 2>&1; true
    changed_when: False
    register: ea_rhel7cis_rule_1_1_3to5

  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_3_status: Compliant
    when: ea_rhel7cis_rule_1_1_3to5.stdout is defined and ea_rhel7cis_rule_1_1_3to5.stdout == "/etc/systemd/system/tmp.mount"
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_3_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.3"] }}'
    when: ea_rhel7cis_rule_1_1_3to5.stdout is defined and ea_rhel7cis_rule_1_1_3to5.stdout != "/etc/systemd/system/tmp.mount"
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.3","description":"Ensure nodev option set on /tmp partition","before":eb_rhel7cis_rule_1_1_3to5.stdout,"after":ea_rhel7cis_rule_1_1_3to5.stdout,"mode":mode_rhel7cis_rule_1_1_3,"status":cis_noncompliant_1_1_3_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_3to5.stdout is defined

  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_4_status: Compliant
    when: ea_rhel7cis_rule_1_1_3to5.stdout is defined and ea_rhel7cis_rule_1_1_3to5.stdout == "/etc/systemd/system/tmp.mount"
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_4_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.4"] }}'
    when: ea_rhel7cis_rule_1_1_3to5.stdout is defined and ea_rhel7cis_rule_1_1_3to5.stdout != "/etc/systemd/system/tmp.mount"
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.4","description":"Ensure nosuid option set on /tmp partition","before":eb_rhel7cis_rule_1_1_3to5.stdout,"after":ea_rhel7cis_rule_1_1_3to5.stdout,"mode":mode_rhel7cis_rule_1_1_4,"status":cis_noncompliant_1_1_4_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_3to5.stdout is defined

  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_5_status: Compliant
    when: ea_rhel7cis_rule_1_1_3to5.stdout is defined and ea_rhel7cis_rule_1_1_3to5.stdout == "/etc/systemd/system/tmp.mount"
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_5_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.5"] }}'
    when: ea_rhel7cis_rule_1_1_3to5.stdout is defined and ea_rhel7cis_rule_1_1_3to5.stdout != "/etc/systemd/system/tmp.mount"
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.5","description":"Ensure noexec option set on /tmp partition","before":eb_rhel7cis_rule_1_1_3to5.stdout,"after":ea_rhel7cis_rule_1_1_3to5.stdout,"mode":mode_rhel7cis_rule_1_1_5,"status":cis_noncompliant_1_1_5_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_3to5.stdout is defined

  when:
    - (rhel7cis_rule_1_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_3|bool)
    - (rhel7cis_rule_1_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_4|bool)
    - (rhel7cis_rule_1_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_5|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.3
    - rule_1.1.4
    - rule_1.1.5
#*********************************************************************************
- name: "EVIDENCE | 1.1.6 | BEFORE | Ensure separate partition exists for /var"
  block:
  - name: Initialize facts for 1.1.6
    set_fact:
      mode_rhel7cis_rule_1_1_6: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_6|bool) else 'check_only'}}"
      cis_noncompliant_1_1_6_status: Unknown
  - name: "EVIDENCE | 1.1.6 | BEFORE | Ensure separate partition exists for /var"
    shell: mount | grep "on /var "; true
    register: eb_rhel7cis_rule_1_1_6
    changed_when: no
  when:
    - (rhel7cis_rule_1_1_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_6|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.6
    - skip_ansible_lint

- name: "SCORED | 1.1.6 | PATCH | Ensure separate partition exists for /var"
  shell: mount | grep "on /var "
  register: var_mounted
  changed_when: no # how does this work for task "Display Output | 1.1.6 | Check Compliant"?
  failed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_6|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.6
      - skip_ansible_lint

- name: Display Output | 1.1.6 | Check Compliant
  block:
    - name: Display Output | 1.1.6 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.6 |separate partition exists for /var|{{ansible_hostname}}|CHANGE_REQUIRED|{{var_mounted.changed}}"
      when:
          var_mounted.changed
    - name: Display Output | 1.1.6 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.6 |separate partition exists for /var|{{ansible_hostname}}|CHANGE_REQUIRED|{{var_mounted.changed}}"
      when:
          not var_mounted.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_6|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.6
      - skip_ansible_lint
      - customcheck

- name: "EVIDENCE | 1.1.6 | AFTER | Ensure separate partition exists for /var"
  block:
  - name: "EVIDENCE | 1.1.6 | AFTER | Ensure separate partition exists for /var"
    shell: mount | grep "on /var "; true
    register: ea_rhel7cis_rule_1_1_6
    changed_when: no
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_6_status: Compliant
    when: ea_rhel7cis_rule_1_1_6.stdout is defined and ea_rhel7cis_rule_1_1_6.stdout != ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_6_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.6"] }}'
    when: ea_rhel7cis_rule_1_1_6.stdout is defined and ea_rhel7cis_rule_1_1_6.stdout == ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.6","description":"Ensure separate partition exists for /var (Check only)","before":eb_rhel7cis_rule_1_1_6.stdout,"after":ea_rhel7cis_rule_1_1_6.stdout,"mode":mode_rhel7cis_rule_1_1_6,"status":cis_noncompliant_1_1_6_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_6.stdout is defined
  when:
    - (rhel7cis_rule_1_1_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_6|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.6
    - skip_ansible_lint
#*********************************************************************************
- name: "EVIDENCE | 1.1.7 | BEFORE | Ensure separate partition exists for /var/tmp"
  block:
  - name: Initialize facts for 1.1.7
    set_fact:
      mode_rhel7cis_rule_1_1_7: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_7|bool) else 'check_only'}}"
      cis_noncompliant_1_1_7_status: Unknown
  - name: "EVIDENCE | 1.1.7 | BEFORE | Ensure separate partition exists for /var/tmp"
    shell: mount | grep "on /var/tmp "; true
    register: eb_rhel7cis_rule_1_1_7
    changed_when: no
  when:
    - (rhel7cis_rule_1_1_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_7|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.7
    - skip_ansible_lint

- name: "SCORED | 1.1.7 | PATCH | Ensure separate partition exists for /var/tmp"
  shell: mount | grep "on /var/tmp "
  register: var_tmp_mounted
  changed_when: no # how can this work for task "Display Output | 1.1.7 | Check Compliant"?
  failed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_7|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.7
      - skip_ansible_lint
  check_mode: no

- name: Display Output | 1.1.7 | Check Compliant
  block:
    - name: Display Output | 1.1.7 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.7 |separate partition exists for /var/tmp|{{ansible_hostname}}|CHANGE_REQUIRED|{{var_tmp_mounted.changed}}"
      when:
          var_tmp_mounted.changed
    - name: Display Output | 1.1.7 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.7 |separate partition exists for /var/tmp|{{ansible_hostname}}|CHANGE_REQUIRED|{{var_tmp_mounted.changed}}"
      when:
          not var_tmp_mounted.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_7|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.7
      - skip_ansible_lint
      - customcheck

- name: "EVIDENCE | 1.1.7 | AFTER | Ensure separate partition exists for /var/tmp"
  block:
  - name: "EVIDENCE | 1.1.7 | AFTER | Ensure separate partition exists for /var/tmp"
    shell: mount | grep "on /var/tmp "; true
    register: ea_rhel7cis_rule_1_1_7
    changed_when: no
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_7_status: Compliant
    when: ea_rhel7cis_rule_1_1_7.stdout is defined and ea_rhel7cis_rule_1_1_7.stdout != ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_7_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.7"] }}'
    when: ea_rhel7cis_rule_1_1_7.stdout is defined and ea_rhel7cis_rule_1_1_7.stdout == ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.7","description":"Ensure separate partition exists for /var/tmp (Check only)","before":eb_rhel7cis_rule_1_1_7.stdout,"after":ea_rhel7cis_rule_1_1_7.stdout,"mode":mode_rhel7cis_rule_1_1_7,"status":cis_noncompliant_1_1_7_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_7.stdout is defined
  when:
    - (rhel7cis_rule_1_1_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_7|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.7
    - skip_ansible_lint
#*********************************************************************************
- name: "EVIDENCE | 1.1.8 | BEFORE | Ensure nodev option set on /var/tmp partition\n
         EVIDENCE | 1.1.9 | BEFORE | Ensure nosuid option set on /var/tmp partition\n
         EVIDENCE | 1.1.10 | BEFORE | Ensure noexec option set on /var/tmp partition"
  block:
  - name: Initialize facts
    set_fact:
      mode_rhel7cis_rule_1_1_8: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_8|bool) and rhel7cis_vartmp['enabled'] else 'check_only'}}"
      mode_rhel7cis_rule_1_1_9: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_9|bool) and rhel7cis_vartmp['enabled'] else 'check_only'}}"
      mode_rhel7cis_rule_1_1_10: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_10|bool) and rhel7cis_vartmp['enabled'] else 'check_only'}}"
      cis_noncompliant_1_1_8_status: Unknown
      cis_noncompliant_1_1_9_status: Unknown
      cis_noncompliant_1_1_10_status: Unknown
  - name: "EVIDENCE | 1.1.8 | BEFORE | Ensure nodev option set on /var/tmp partition\n
           EVIDENCE | 1.1.9 | BEFORE | Ensure nosuid option set on /var/tmp partition\n
           EVIDENCE | 1.1.10 | BEFORE | Ensure noexec option set on /var/tmp partition"
    shell: grep -E '\s/var/tmp\s' /etc/fstab 2>&1; true
    changed_when: no
    register: eb_rhel7cis_rule_1_1_8to10
  when:
    - (rhel7cis_rule_1_1_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_8|bool)
    - (rhel7cis_rule_1_1_9|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_9|bool)
    - (rhel7cis_rule_1_1_10|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_10|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.8
    - rule_1.1.9
    - rule_1.1.10

- name: "SCORED | 1.1.8 | PATCH | Ensure nodev option set on /var/tmp partition\n
         SCORED | 1.1.9 | PATCH | Ensure nosuid option set on /var/tmp partition\n
         SCORED | 1.1.10 | PATCH | Ensure noexec option set on /var/tmp partition"
  mount:
    name: /var/tmp
    src: "{{ rhel7cis_vartmp['source'] }}"
    state: present
    fstype: "{{ rhel7cis_vartmp['fstype'] }}"
    opts: "{{ rhel7cis_vartmp['opts'] }}"
  register: rhel7cis_rule_1_1_10_out
  when:
    - rhel7cis_vartmp['enabled']
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_8|bool)
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_9|bool)
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_10|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.8
    - rule_1.1.9
    - rule_1.1.10

- name: Display Output | 1.1.8 / 1.1.9 / 1.1.10 | Check Compliant
  block:
    - name: Display Output | 1.1.8 / 1.1.9 / 1.1.10 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.8 / 1.1.9 / 1.1.10 |nodev nosuid noexec ooption on /var/tmp partition - drop custom tmp.mount|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_10_out.changed}}"
      when:
           rhel7cis_rule_1_1_10_out.changed
    - name: Display Output | 1.1.8 / 1.1.9 / 1.1.10 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.8 / 1.1.9 / 1.1.10 |nodev nosuid noexec ooption on /var/tmp partition - drop custom tmp.mount|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_10_out.changed}}"
      when:
          not rhel7cis_rule_1_1_10_out.changed
  when:
      - rhel7cis_vartmp['enabled']
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_8|bool)
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_9|bool)
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_10|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.8
      - rule_1.1.9
      - rule_1.1.10
      - customcheck

- name: "EVIDENCE | 1.1.8 | AFTER | Ensure nodev option set on /var/tmp partition\n
         EVIDENCE | 1.1.9 | AFTER | Ensure nosuid option set on /var/tmp partition\n
         EVIDENCE | 1.1.10 | AFTER | Ensure noexec option set on /var/tmp partition"
  block:
  - name: "EVIDENCE | 1.1.8 | AFTER | Ensure nodev option set on /var/tmp partition\n
           EVIDENCE | 1.1.9 | AFTER | Ensure nosuid option set on /var/tmp partition\n
           EVIDENCE | 1.1.10 | AFTER | Ensure noexec option set on /var/tmp partition"
    mount:
      name: /var/tmp
      src: "{{ rhel7cis_vartmp['source'] }}"
      state: present
      fstype: "{{ rhel7cis_vartmp['fstype'] }}"
      opts: "{{ rhel7cis_vartmp['opts'] }}"
    check_mode: yes
    register: ca_rhel7cis_rule_1_1_8to10
  - shell: grep -E '\s/var/tmp\s' /etc/fstab 2>&1; true
    changed_when: no
    register: ea_rhel7cis_rule_1_1_8to10

  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_8_status: Compliant
    when: not ca_rhel7cis_rule_1_1_8to10.changed
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_8_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.8"] }}'
    when: ca_rhel7cis_rule_1_1_8to10.changed
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.8","description":"Ensure nodev option set on /var/tmp partition","before":eb_rhel7cis_rule_1_1_8to10.stdout,"after":ea_rhel7cis_rule_1_1_8to10.stdout,"mode":mode_rhel7cis_rule_1_1_8,"status":cis_noncompliant_1_1_8_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_8to10.stdout is defined

  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_9_status: Compliant
    when: not ca_rhel7cis_rule_1_1_8to10.changed
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_9_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.9"] }}'
    when: ca_rhel7cis_rule_1_1_8to10.changed
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.9","description":"Ensure nosuid option set on /var/tmp partition","before":eb_rhel7cis_rule_1_1_8to10.stdout,"after":ea_rhel7cis_rule_1_1_8to10.stdout,"mode":mode_rhel7cis_rule_1_1_9,"status":cis_noncompliant_1_1_9_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_8to10.stdout is defined

  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_10_status: Compliant
    when: not ca_rhel7cis_rule_1_1_8to10.changed
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_10_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.10"] }}'
    when: ca_rhel7cis_rule_1_1_8to10.changed
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.10","description":"Ensure noexec option set on /var/tmp partition","before":eb_rhel7cis_rule_1_1_8to10.stdout,"after":ea_rhel7cis_rule_1_1_8to10.stdout,"mode":mode_rhel7cis_rule_1_1_10,"status":cis_noncompliant_1_1_10_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_8to10.stdout is defined

  when:
    - (rhel7cis_rule_1_1_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_8|bool)
    - (rhel7cis_rule_1_1_9|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_9|bool)
    - (rhel7cis_rule_1_1_10|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_10|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.8
    - rule_1.1.9
    - rule_1.1.10
#*********************************************************************************
- name: "EVIDENCE | 1.1.11 | BEFORE | Ensure separate partition exists for /var/log"
  block:
  - name: Initialize facts for 1.1.11
    set_fact:
      mode_rhel7cis_rule_1_1_11: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_11|bool) else 'check_only'}}"
      cis_noncompliant_1_1_11_status: Unknown
  - name: "EVIDENCE | 1.1.11 | BEFORE | Ensure separate partition exists for /var/log"
    shell: mount | grep "on /var/log "; true
    register: eb_rhel7cis_rule_1_1_11
    changed_when: no
  when:
    - (rhel7cis_rule_1_1_11|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_11|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.11
    - skip_ansible_lint

- name: "SCORED | 1.1.11 | PATCH | Ensure separate partition exists for /var/log"
  shell: mount | grep "on /var/log "
  register: var_log_mounted
  changed_when: no # how does this work for task "Display Output | 1.1.11 | Check Compliant"?
  failed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_11|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.11
      - skip_ansible_lint

- name: Display Output | 1.1.11 | Check Compliant
  block:
    - name: Display Output | 1.1.11 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.11 |separate partition exists for /var/log|{{ansible_hostname}}|CHANGE_REQUIRED|{{var_log_mounted.changed}}"
      when:
          var_log_mounted.changed
    - name: Display Output | 1.1.11 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.11 |separate partition exists for /var/log|{{ansible_hostname}}|CHANGE_REQUIRED|{{var_log_mounted.changed}}"
      when:
          not var_log_mounted.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_11|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.11
      - skip_ansible_lint
      - customcheck

- name: "EVIDENCE | 1.1.11 | AFTER | Ensure separate partition exists for /var/log"
  block:
  - name: "EVIDENCE | 1.1.11 | AFTER | Ensure separate partition exists for /var/log"
    shell: mount | grep "on /var/log "; true
    register: ea_rhel7cis_rule_1_1_11
    changed_when: no
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_11_status: Compliant
    when: ea_rhel7cis_rule_1_1_11.stdout is defined and ea_rhel7cis_rule_1_1_11.stdout != ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_11_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.11"] }}'
    when: ea_rhel7cis_rule_1_1_11.stdout is defined and ea_rhel7cis_rule_1_1_11.stdout == ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.11","description":"Ensure separate partition exists for /var/log (Check only)","before":eb_rhel7cis_rule_1_1_11.stdout,"after":ea_rhel7cis_rule_1_1_11.stdout,"mode":mode_rhel7cis_rule_1_1_11,"status":cis_noncompliant_1_1_11_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_11.stdout is defined
  when:
    - (rhel7cis_rule_1_1_11|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_11|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.11
    - skip_ansible_lint
#*********************************************************************************
- name: "EVIDENCE | 1.1.12 | BEFORE | Ensure separate partition exists for /var/log/audit"
  block:
  - name: Initialize facts for 1.1.12
    set_fact:
      mode_rhel7cis_rule_1_1_12: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_12|bool) else 'check_only'}}"
      cis_noncompliant_1_1_12_status: Unknown
  - name: "EVIDENCE | 1.1.12 | BEFORE | Ensure separate partition exists for /var/log/audit"
    shell: mount | grep "on /var/log/audit "; true
    register: eb_rhel7cis_rule_1_1_12
    changed_when: no
  when:
    - (rhel7cis_rule_1_1_12|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_12|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.12
    - skip_ansible_lint

- name: "SCORED | 1.1.12 | PATCH | Ensure separate partition exists for /var/log/audit"
  shell: mount | grep "on /var/log/audit "
  register: var_log_audit_mounted
  changed_when: no
  failed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_12|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.12
      - skip_ansible_lint

- name: Display Output | 1.1.12 | Check Compliant
  block:
    - name: Display Output | 1.1.12 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.12 |separate partition exists for /var/log/audit|{{ansible_hostname}}|CHANGE_REQUIRED|{{var_log_audit_mounted.changed}}"
      when:
           var_log_audit_mounted.changed
    - name: Display Output | 1.1.12 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.12 |separate partition exists for /var/log/audit|{{ansible_hostname}}|CHANGE_REQUIRED|{{var_log_audit_mounted.changed}}"
      when:
          not var_log_audit_mounted.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_12|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.12
      - skip_ansible_lint
      - customcheck

- name: "EVIDENCE | 1.1.12 | AFTER | Ensure separate partition exists for /var/log/audit"
  block:
  - name: "EVIDENCE | 1.1.12 | AFTER | Ensure separate partition exists for /var/log/audit"
    shell: mount | grep "on /var/log/audit "; true
    register: ea_rhel7cis_rule_1_1_12
    changed_when: no
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_12_status: Compliant
    when: ea_rhel7cis_rule_1_1_12.stdout is defined and ea_rhel7cis_rule_1_1_12.stdout != ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_12_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.12"] }}'
    when: ea_rhel7cis_rule_1_1_12.stdout is defined and ea_rhel7cis_rule_1_1_12.stdout == ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.12","description":"Ensure separate partition exists for /var/log/audit (Check only)","before":eb_rhel7cis_rule_1_1_12.stdout,"after":ea_rhel7cis_rule_1_1_12.stdout,"mode":mode_rhel7cis_rule_1_1_12,"status":cis_noncompliant_1_1_12_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_12.stdout is defined
  when:
    - (rhel7cis_rule_1_1_12|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_12|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.12
    - skip_ansible_lint
#*********************************************************************************
- name: "EVIDENCE | 1.1.13 | BEFORE | Ensure separate partition exists for /home"
  block:
  - name: Initialize facts for 1.1.13
    set_fact:
      mode_rhel7cis_rule_1_1_13: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_13|bool) else 'check_only'}}"
      cis_noncompliant_1_1_13_status: Unknown
  - name: "EVIDENCE | 1.1.13 | BEFORE | Ensure separate partition exists for /home"
    shell: mount | grep "on /home"; true
    register: eb_rhel7cis_rule_1_1_13
    changed_when: no
  when:
    - (rhel7cis_rule_1_1_13|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_13|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.13
    - skip_ansible_lint

- name: "SCORED | 1.1.13 | PATCH | Ensure separate partition exists for /home"
  shell: mount | grep "on /home"
  register: home_mounted
  changed_when: no
  failed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_13|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.13
      - skip_ansible_lint

- name: Display Output | 1.1.13 | Check Compliant
  block:
    - name: Display Output | 1.1.13 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.13 |separate partition exists for /home|{{ansible_hostname}}|CHANGE_REQUIRED|{{home_mounted.changed}}"
      when:
          home_mounted.changed
    - name: Display Output | 1.1.13 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.13 |separate partition exists for /home|{{ansible_hostname}}|CHANGE_REQUIRED|{{home_mounted.changed}}"
      when:
          not home_mounted.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_13|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.1.13
      - skip_ansible_lint
      - customcheck

- name: "EVIDENCE | 1.1.13 | AFTER | Ensure separate partition exists for /home"
  block:
  - name: "EVIDENCE | 1.1.13 | AFTER | Ensure separate partition exists for /home"
    shell: mount | grep "on /home"; true
    register: ea_rhel7cis_rule_1_1_13
    changed_when: no
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_13_status: Compliant
    when: ea_rhel7cis_rule_1_1_13.stdout is defined and ea_rhel7cis_rule_1_1_13.stdout != ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_13_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.13"] }}'
    when: ea_rhel7cis_rule_1_1_13.stdout is defined and ea_rhel7cis_rule_1_1_13.stdout == ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.13","description":"Ensure separate partition exists for /home (Check only)","before":eb_rhel7cis_rule_1_1_13.stdout,"after":ea_rhel7cis_rule_1_1_13.stdout,"mode":mode_rhel7cis_rule_1_1_13,"status":cis_noncompliant_1_1_13_status}] }}'
    when:
    - ea_rhel7cis_rule_1_1_13.stdout is defined
  when:
    - (rhel7cis_rule_1_1_13|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_13|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.1.13
    - skip_ansible_lint
#*********************************************************************************
- name: "EVIDENCE | 1.1.14 | BEFORE | Ensure nodev option set on /home partition"
  block:
  - name: Initialize facts for 1.1.14
    set_fact:
      mode_rhel7cis_rule_1_1_14: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_14|bool) else 'check_only'}}"
      cis_noncompliant_1_1_14_status: Unknown
  - name: "EVIDENCE | 1.1.14 | BEFORE | Ensure nodev option set on /home partition"
    mount:
      name: "/home"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nodev"
    when: item.mount == "/home"
    with_items: "{{ ansible_mounts }}"
    check_mode: yes
    register: eb_rhel7cis_rule_1_1_14
  - shell: mount | grep -E '\s/home\s' | grep -v nodev 2>&1; true
    register: eb_rhel7cis_rule_1_1_14_return
    changed_when: no
  when:
    - (rhel7cis_rule_1_1_14|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_14|bool)
  tags:
    - level1
    - patch
    - rule_1.1.14

- name: "SCORED | 1.1.14 | PATCH | Ensure nodev option set on /home partition"
  mount:
    name: "/home"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "nodev"
  register:  rhel7cis_rule_1_1_14_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_14|bool)
      - item.mount == "/home"
  with_items: "{{ ansible_mounts }}"
  tags:
      - level1
      - patch
      - rule_1.1.14

- name: Display Output | 1.1.14 | Check Compliant
  block:
    - name: Display Output | 1.1.14 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.14 |nodev option set on /home|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_14_out.changed}}"
      when:
          rhel7cis_rule_1_1_14_out.changed
    - name: Display Output | 1.1.14 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.14 |nodev option set on /home|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_14_out.changed}}"
      when:
          not rhel7cis_rule_1_1_14_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_14|bool)
  tags:
      - level1
      - patch
      - rule_1.1.14
      - customcheck

- name: "EVIDENCE | 1.1.14 | AFTER | Ensure nodev option set on /home partition"
  block:
  - name: "EVIDENCE | 1.1.14 | AFTER | Ensure nodev option set on /home partition"
    mount:
      name: "/home"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nodev"
    when: item.mount == "/home"
    with_items: "{{ ansible_mounts }}"
    check_mode: yes
    register: ea_rhel7cis_rule_1_1_14
  - shell: mount | grep -E '\s/home\s' | grep -v nodev 2>&1; true
    register: ea_rhel7cis_rule_1_1_14_return
    changed_when: no
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_14_status: Compliant
    when: not ea_rhel7cis_rule_1_1_14.changed
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_14_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.14"] }}'
    when: ea_rhel7cis_rule_1_1_14.changed
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.14","description":"Ensure nodev option set on /home partition","before":eb_rhel7cis_rule_1_1_14_return.stdout,"after":ea_rhel7cis_rule_1_1_14_return.stdout,"mode":mode_rhel7cis_rule_1_1_14,"status":cis_noncompliant_1_1_14_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_14_return.stdout is defined and ea_rhel7cis_rule_1_1_14_return.stdout is defined
  when:
    - (rhel7cis_rule_1_1_14|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_14|bool)
  tags:
    - level1
    - patch
    - rule_1.1.14
#*********************************************************************************
- name: "EVIDENCE | 1.1.15 | BEFORE | Ensure nodev option set on /dev/shm partition\n
         EVIDENCE | 1.1.16 | BEFORE | Ensure nosuid option set on /dev/shm partition\n
         EVIDENCE | 1.1.17 | BEFORE | Ensure noexec option set on /dev/shm partition"
  block:
  - name: Initialize facts
    set_fact:
      mode_rhel7cis_rule_1_1_15: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_15|bool) else 'check_only'}}"
      mode_rhel7cis_rule_1_1_16: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_16|bool) else 'check_only'}}"
      mode_rhel7cis_rule_1_1_17: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_17|bool) else 'check_only'}}"
      cis_noncompliant_1_1_15_status: Unknown
      cis_noncompliant_1_1_16_status: Unknown
      cis_noncompliant_1_1_17_status: Unknown
  - name: "EVIDENCE | 1.1.15 | BEFORE | Ensure nodev option set on /dev/shm partition"
    shell: mount | grep -E '\s/dev/shm\s' | grep -v nodev 2>&1; true
    changed_when: no
    register: eb_rhel7cis_rule_1_1_15
  - name: "EVIDENCE | 1.1.16 | BEFORE | Ensure nosuid option set on /dev/shm partition"
    shell: mount | grep -E '\s/dev/shm\s' | grep -v nosuid 2>&1; true
    changed_when: no
    register: eb_rhel7cis_rule_1_1_16
  - name: "EVIDENCE | 1.1.17 | BEFORE | Ensure noexec option set on /dev/shm partition"
    shell: mount | grep -E '\s/dev/shm\s' | grep -v noexec 2>&1; true
    changed_when: no
    register: eb_rhel7cis_rule_1_1_17
  when:
    - (rhel7cis_rule_1_1_15|bool) or (rhel7cis_rule_1_1_16|bool) or (rhel7cis_rule_1_1_17|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_15|bool) or (fix_rhel7cis_rule_1_1_16|bool) or (fix_rhel7cis_rule_1_1_17|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.15
    - rule_1.1.16
    - rule_1.1.17

- name: "SCORED | 1.1.15 | PATCH | Ensure nodev option set on /dev/shm partition\n
         SCORED | 1.1.16 | PATCH | Ensure nosuid option set on /dev/shm partition\n
         SCORED | 1.1.17 | PATCH | Ensure noexec option set on /dev/shm partition"
  mount:
      name: /dev/shm
      src: tmpfs
      state: mounted
      fstype: tmpfs
      opts: "defaults,nodev,nosuid,noexec"
  register:  rhel7cis_rule_1_1_15_out
  when:
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_15|bool) or (fix_rhel7cis_rule_1_1_16|bool) or (fix_rhel7cis_rule_1_1_17|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.15
      - rule_1.1.16
      - rule_1.1.17

- name: Display Output | 1.1.15 / 1.1.16 / 1.1.17 | Check Compliant
  block:
    - name: Display Output | 1.1.15 / 1.1.16 / 1.1.17 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT|  1.1.15 / 1.1.16 / 1.1.17 |nodev option set on /home|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_15_out.changed}}"
      when:
          rhel7cis_rule_1_1_15_out.changed
    - name: Display Output | 1.1.15 / 1.1.16 / 1.1.17 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT|  1.1.15 / 1.1.16 / 1.1.17 |nodev option set on /home|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_15_out.changed}}"
      when:
          not rhel7cis_rule_1_1_15_out.changed
  when:
    - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_15|bool) or (fix_rhel7cis_rule_1_1_16|bool) or (fix_rhel7cis_rule_1_1_17|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.15
      - rule_1.1.16
      - rule_1.1.17
      - customcheck

- name: "EVIDENCE | 1.1.15 | AFTER | Ensure nodev option set on /dev/shm partition\n
         EVIDENCE | 1.1.16 | AFTER | Ensure nosuid option set on /dev/shm partition\n
         EVIDENCE | 1.1.17 | AFTER | Ensure noexec option set on /dev/shm partition"
  block:
  - name: "EVIDENCE | 1.1.15 | AFTER | Ensure nodev option set on /dev/shm partition"
    shell: mount | grep -E '\s/dev/shm\s' | grep nodev 2>&1; true
    changed_when: no
    register: ea_rhel7cis_rule_1_1_15
  - name: "EVIDENCE | 1.1.16 | AFTER | Ensure nosuid option set on /dev/shm partition"
    shell: mount | grep -E '\s/dev/shm\s' | grep nosuid 2>&1; true
    changed_when: no
    register: ea_rhel7cis_rule_1_1_16
  - name: "EVIDENCE | 1.1.17 | AFTER | Ensure noexec option set on /dev/shm partition"
    shell: mount | grep -E '\s/dev/shm\s' | grep noexec 2>&1; true
    changed_when: no
    register: ea_rhel7cis_rule_1_1_17

  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_15_status: Compliant
    when: ea_rhel7cis_rule_1_1_15.stdout is defined and ea_rhel7cis_rule_1_1_15.stdout != ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_15_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.15"] }}'
    when: ea_rhel7cis_rule_1_1_15.stdout is defined and ea_rhel7cis_rule_1_1_15.stdout == ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.15","description":"Ensure nodev option set on /dev/shm partition","before":eb_rhel7cis_rule_1_1_15.stdout,"after":ea_rhel7cis_rule_1_1_15.stdout,"mode":mode_rhel7cis_rule_1_1_15,"status":cis_noncompliant_1_1_15_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_15.stdout is defined and ea_rhel7cis_rule_1_1_15.stdout is defined

  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_16_status: Compliant
    when: ea_rhel7cis_rule_1_1_16.stdout is defined and ea_rhel7cis_rule_1_1_16.stdout != ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_16_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.16"] }}'
    when: ea_rhel7cis_rule_1_1_16.stdout is defined and ea_rhel7cis_rule_1_1_16.stdout == ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.16","description":"Ensure nosuid option set on /dev/shm partition","before":eb_rhel7cis_rule_1_1_16.stdout,"after":ea_rhel7cis_rule_1_1_16.stdout,"mode":mode_rhel7cis_rule_1_1_16,"status":cis_noncompliant_1_1_16_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_16.stdout is defined and ea_rhel7cis_rule_1_1_16.stdout is defined

  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_17_status: Compliant
    when: ea_rhel7cis_rule_1_1_17.stdout is defined and ea_rhel7cis_rule_1_1_17.stdout != ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_17_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.17"] }}'
    when: ea_rhel7cis_rule_1_1_17.stdout is defined and ea_rhel7cis_rule_1_1_17.stdout == ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.17","description":"Ensure noexec option set on /dev/shm partition","before":eb_rhel7cis_rule_1_1_17.stdout,"after":ea_rhel7cis_rule_1_1_17.stdout,"mode":mode_rhel7cis_rule_1_1_17,"status":cis_noncompliant_1_1_17_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_17.stdout is defined and ea_rhel7cis_rule_1_1_17.stdout is defined

  when:
    - (rhel7cis_rule_1_1_15|bool) or (rhel7cis_rule_1_1_16|bool) or (rhel7cis_rule_1_1_17|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_15|bool) or (fix_rhel7cis_rule_1_1_16|bool) or (fix_rhel7cis_rule_1_1_17|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.1.15
    - rule_1.1.16
    - rule_1.1.17
#*********************************************************************************
- name: "EVIDENCE | 1.1.18 | BEFORE | Ensure nodev option set on removable media partitions"
  block:
  - name: Initialize facts for 1.1.18
    set_fact:
      mode_rhel7cis_rule_1_1_18: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_18|bool) else 'check_only'}}"
      cis_noncompliant_1_1_18_status: Unknown
  when:
    - (rhel7cis_rule_1_1_18|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_18|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.18

- name: "NOTSCORED | 1.1.18 | PATCH | Ensure nodev option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_18|bool)
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.18

- name: Display Output | 1.1.18 | When Compliant
  debug:
      msg="MANUAL_CHECK_REQUIRED|CIS_RESULT|  1.1.18 |nodev option set on removable media partitions|{{ansible_hostname}}|NOT_AUTOMATED|SKIPPED"
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_18|bool)
  tags:
      - customcheck

- name: "EVIDENCE | 1.1.18 | AFTER | Ensure nodev option set on removable media partitions"
  block:
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_18_status: Manual
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.18","description":"Ensure nodev option set on removable media partitions (Manual)","before":"","after":"","mode":mode_rhel7cis_rule_1_1_18,"status":cis_noncompliant_1_1_18_status}] }}'
  when:
    - (rhel7cis_rule_1_1_18|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_18|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.18
#*********************************************************************************
- name: "EVIDENCE | 1.1.19 | BEFORE | Ensure nosuid option set on removable media partitions"
  block:
  - name: Initialize facts for 1.1.19
    set_fact:
      mode_rhel7cis_rule_1_1_19: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_19|bool) else 'check_only'}}"
      cis_noncompliant_1_1_19_status: Unknown
  when:
    - (rhel7cis_rule_1_1_19|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_19|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.19

- name: "NOTSCORED | 1.1.19 | PATCH | Ensure nosuid option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_19|bool)
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.19

- name: Display Output | 1.1.19 | When Compliant
  debug:
      msg="MANUAL_CHECK_REQUIRED|CIS_RESULT|  1.1.19 |nosuid option set on removable media partitions|{{ansible_hostname}}|NOT_AUTOMATED|SKIPPED"
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_19|bool)
  tags:
      - customcheck

- name: "EVIDENCE | 1.1.19 | AFTER | Ensure nosuid option set on removable media partitions"
  block:
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_19_status: Manual
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.19","description":"Ensure nosuid option set on removable media partitions (Manual)","before":"","after":"","mode":mode_rhel7cis_rule_1_1_19,"status":cis_noncompliant_1_1_19_status}] }}'
  when:
    - (rhel7cis_rule_1_1_19|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_19|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.19
#*********************************************************************************
- name: "EVIDENCE | 1.1.20 | BEFORE | Ensure noexec option set on removable media partitions"
  block:
  - name: Initialize facts for 1.1.20
    set_fact:
      mode_rhel7cis_rule_1_1_20: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_20|bool) else 'check_only'}}"
      cis_noncompliant_1_1_20_status: Unknown
  when:
    - (rhel7cis_rule_1_1_20|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_20|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.20

- name: "NOTSCORED | 1.1.20 | PATCH | Ensure noexec option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_20|bool)
  tags:
      - level1
      - notscored
      - patch
      - rule_1.1.20

- name: Display Output | 1.1.20 | When Compliant
  debug:
      msg="MANUAL_CHECK_REQUIRED|CIS_RESULT|  1.1.20 |noexec option set on removable media partitions|{{ansible_hostname}}|NOT_AUTOMATED|SKIPPED"
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_20|bool)
  tags:
      - customcheck

- name: "EVIDENCE | 1.1.20 | AFTER | Ensure noexec option set on removable media partitions"
  block:
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_20_status: Manual
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.20","description":"Ensure noexec option set on removable media partitions (Manual)","before":"","after":"","mode":mode_rhel7cis_rule_1_1_20,"status":cis_noncompliant_1_1_20_status}] }}'
  when:
    - (rhel7cis_rule_1_1_20|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_20|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.1.20
#*********************************************************************************
- name: "EVIDENCE | 1.1.21 | BEFORE | Ensure sticky bit is set on all world-writable directories"
  block:
  - name: Initialize facts for 1.1.21
    set_fact:
      mode_rhel7cis_rule_1_1_21: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_21|bool) else 'check_only'}}"
      cis_noncompliant_1_1_21_status: Unknown
  - name: "EVIDENCE | 1.1.21 | BEFORE | Ensure sticky bit is set on all world-writable directories"
    shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null
    check_mode: no
    changed_when: no
    ignore_errors: yes
    register: eb_rhel7cis_rule_1_1_21
  when:
    - (rhel7cis_rule_1_1_21|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_21|bool)
  tags:
    - level1
    - patch
    - rule_1.1.21

- name: "SCORED | 1.1.21 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: |
      df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  changed_when: no
  failed_when: no
  register:  rhel7cis_rule_1_1_21_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_21|bool)
  tags:
      - level1
      - patch
      - rule_1.1.21
      - customcheck
  check_mode: no

- name: Display Output | 1.1.21 | Check Compliant
  block:
    - name: Display Output | 1.1.21 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT|  1.1.21 |sticky bit is set on all world-writable directories|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_21_out.changed}}"
      when:
          rhel7cis_rule_1_1_21_out.changed
    - name: Display Output | 1.1.21 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT|  1.1.21 |sticky bit is set on all world-writable directories|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_1_21_out.changed}}"
      when:
          - not rhel7cis_rule_1_1_21_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_21|bool)
  tags:
      - level1
      - patch
      - rule_1.1.21
      - customcheck

- name: "EVIDENCE | 1.1.21 | AFTER | Ensure sticky bit is set on all world-writable directories"
  block:
  - name: "EVIDENCE | 1.1.21 | AFTER | Ensure sticky bit is set on all world-writable directories"
    shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null
    check_mode: no
    changed_when: no
    ignore_errors: yes
    register: ea_rhel7cis_rule_1_1_21
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_21_status: Compliant
    when: ea_rhel7cis_rule_1_1_21.stdout is defined and ea_rhel7cis_rule_1_1_21.stdout == ""
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_21_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.21"] }}'
    when: ea_rhel7cis_rule_1_1_21.stdout is defined and ea_rhel7cis_rule_1_1_21.stdout != ""
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.21","description":"Ensure sticky bit is set on all world-writable directories","before":eb_rhel7cis_rule_1_1_21.stdout,"after":ea_rhel7cis_rule_1_1_21.stdout,"mode":mode_rhel7cis_rule_1_1_21,"status":cis_noncompliant_1_1_21_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_21.stdout is defined and ea_rhel7cis_rule_1_1_21.stdout is defined
  when:
    - (rhel7cis_rule_1_1_21|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_21|bool)
  tags:
    - level1
    - patch
    - rule_1.1.21
#*********************************************************************************
- name: "EVIDENCE | 1.1.22 | BEFORE | Disable Automounting"
  block:
  - name: Initialize facts for 1.1.22
    set_fact:
      mode_rhel7cis_rule_1_1_22: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_1_22|bool) else 'check_only'}}"
      cis_noncompliant_1_1_22_status: Unknown
  - name: "EVIDENCE | 1.1.22 | BEFORE | Disable Automounting"
    shell: "systemctl is-enabled autofs 2>&1; true"
    check_mode: no
    changed_when: no
    register: eb_rhel7cis_rule_1_1_22
  when:
    - (rhel7cis_rule_1_1_22|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_22|bool)
  tags:
    - level1
    - patch
    - rule_1.1.22
    - skip_ansible_lint

- name: "SCORED | 1.1.22 | PATCH | Disable Automounting"
  service:
      name: autofs
      enabled: no
  when:
      - rhel7cis_allow_autofs == false and autofs_service_status.stdout == "loaded"
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_22|bool)
  tags:
      - level1
      - patch
      - rule_1.1.22

- name: Display Output | 1.1.22 | Check Compliant
  block:
    - name: Display Output | 1.1.22 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.1.22 |Disable Automounting|{{ansible_hostname}}|CHANGE_REQUIRED|False"
      when:
        - eb_rhel7cis_rule_1_1_22.stdout is defined and eb_rhel7cis_rule_1_1_22.stdout == "enabled"
    - name: Display Output | 1.1.22 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.1.22 |Disable Automounting|{{ansible_hostname}}|CHANGE_REQUIRED|False"
      when:
        - eb_rhel7cis_rule_1_1_22.stdout is defined and eb_rhel7cis_rule_1_1_22.stdout != "enabled"
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_1_22|bool)
  tags:
      - level1
      - patch
      - rule_1.1.22
      - customcheck

- name: "EVIDENCE | 1.1.22 | AFTER | Disable Automounting"
  block:
  - name: "EVIDENCE | 1.1.22 | AFTER | Disable Automounting"
    shell: "systemctl is-enabled autofs 2>&1; true"
    check_mode: no
    changed_when: no
    register: ea_rhel7cis_rule_1_1_22
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_1_22_status: Compliant
    when: ea_rhel7cis_rule_1_1_22.stdout is defined and ea_rhel7cis_rule_1_1_22.stdout != "enabled"
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_1_22_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.1.22"] }}'
    when: ea_rhel7cis_rule_1_1_22.stdout is defined and ea_rhel7cis_rule_1_1_22.stdout == "enabled"
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.1.22","description":"Disable Automounting","before":eb_rhel7cis_rule_1_1_22.stdout,"after":ea_rhel7cis_rule_1_1_22.stdout,"mode":mode_rhel7cis_rule_1_1_22,"status":cis_noncompliant_1_1_22_status}] }}'
    when:
    - eb_rhel7cis_rule_1_1_22.stdout is defined and ea_rhel7cis_rule_1_1_22.stdout is defined
  when:
    - (rhel7cis_rule_1_1_22|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_1_22|bool)
  tags:
    - level1
    - patch
    - rule_1.1.22
    - skip_ansible_lint
#*********************************************************************************
- name: "EVIDENCE | 1.2.1 | BEFORE | Ensure package manager repositories are configured"
  block:
  - name: Initialize facts for 1.2.1
    set_fact:
      mode_rhel7cis_rule_1_2_1: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_2_1|bool) else 'check_only'}}"
      cis_noncompliant_1_2_1_status: Unknown
  - name: "EVIDENCE | 1.2.1 | BEFORE | Ensure package manager repositories are configured"
    command: yum repolist
    become: yes
    failed_when: no
    changed_when: no
    check_mode: no
    register: eb_rhel7cis_rule_1_2_1
  when:
    - (rhel7cis_rule_1_2_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_2_1|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.1
    - skip_ansible_lint

- name: "NOTSCORED | 1.2.1 | PATCH | Ensure package manager repositories are configured"
  command: yum check-update
  register: yum_configured
  changed_when: no
  failed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_1|bool)
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.1
      - skip_ansible_lint

- name: Display Output | 1.2.1 | Check Compliant
  block:
    - name: Display Output | 1.2.1 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.2.1 |package manager repositories are configured -  check update|{{ansible_hostname}}|CHANGE_REQUIRED|{{yum_configured.changed}}"
      when:
          yum_configured.changed
    - name: Display Output | 1.2.1 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.2.1 |package manager repositories are configured -  check update|{{ansible_hostname}}|CHANGE_REQUIRED|{{yum_configured.changed}}"
      when:
          not yum_configured.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_1|bool)
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.1
      - skip_ansible_lint
      - customcheck

- name: "EVIDENCE | 1.2.1 | AFTER | Ensure package manager repositories are configured"
  block:
  - name: "EVIDENCE | 1.2.1 | AFTER | Ensure package manager repositories are configured"
    command: yum repolist
    become: yes
    failed_when: no
    changed_when: no
    check_mode: no
    register: ea_rhel7cis_rule_1_2_1
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_2_1_status: Compliant
    when: ea_rhel7cis_rule_1_2_1.rc is defined and ea_rhel7cis_rule_1_2_1.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_2_1_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.2.1"] }}'
    when: ea_rhel7cis_rule_1_2_1.rc is defined and ea_rhel7cis_rule_1_2_1.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.2.1","description":"Ensure package manager repositories are configured","before":eb_rhel7cis_rule_1_2_1.stdout_lines[-1],"after":ea_rhel7cis_rule_1_2_1.stdout_lines[-1],"mode":mode_rhel7cis_rule_1_2_1,"status":cis_noncompliant_1_2_1_status}] }}'
    when:
    - eb_rhel7cis_rule_1_2_1.stdout_lines is defined and ea_rhel7cis_rule_1_2_1.stdout_lines is defined
  when:
    - (rhel7cis_rule_1_2_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_2_1|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.1
    - skip_ansible_lint
#*********************************************************************************
- name: "EVIDENCE | 1.2.2 | BEFORE | Ensure gpgcheck is globally activated"
  block:
  - name: Initialize facts for 1.2.2
    set_fact:
      mode_rhel7cis_rule_1_2_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_2_2|bool) else 'check_only'}}"
      cis_noncompliant_1_2_2_status: Unknown
  - name: "EVIDENCE | 1.2.2 | BEFORE | Ensure gpgcheck is globally activated"
    shell: grep '^gpgcheck' /etc/yum.conf; grep '^gpgcheck' /etc/yum.repos.d/* | grep -v 'gpgcheck=1'
    failed_when: no
    changed_when: no
    check_mode: no
    register: eb_rhel7cis_rule_1_2_2
  when:
    - (rhel7cis_rule_1_2_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_2_2|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.2.2

- name: "SCORED | 1.2.2 | PATCH | Ensure gpgcheck is globally activated"
  replace:
      name: /etc/yum.conf
      regexp: "^gpgcheck=0"
      replace: "gpgcheck=1"
  register:  rhel7cis_rule_1_2_2_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_2|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2

- name: Display Output | 1.2.2 | Check Compliant
  block:
    - name: Display Output | 1.2.2 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.2.2 |gpgcheck is globally activated update - yum.cfg|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_2_2_out.changed}}"
      when:
          rhel7cis_rule_1_2_2_out.changed
    - name: Display Output | 1.2.2 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.2.2 |gpgcheck is globally activated update - yum.cfg|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_2_2_out.changed}}"
      when:
          not rhel7cis_rule_1_2_2_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_2|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2
      - customcheck

- name: "SCORED | 1.2.2 | PATCH | Ensure gpgcheck is globally activated"
  find:
      paths: /etc/yum.repos.d
      patterns: "*.repo"
  register: yum_repos
  changed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_2|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2

- name: Display Output | 1.2.2 | Check Compliant
  block:
    - name: Display Output | 1.2.2 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.2.2 |gpgcheck is globally activated - yum.repos.d|{{ansible_hostname}}|CHANGE_REQUIRED|{{yum_repos.changed}}"
      when:
          yum_repos.changed
    - name: Display Output | 1.2.2 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.2.2 |gpgcheck is globally activated - yum.repos.d|{{ansible_hostname}}|CHANGE_REQUIRED|{{yum_repos.changed}}"
      when:
          not yum_repos.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_2|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2
      - customcheck

- name: "SCORED | 1.2.2 | PATCH | Ensure gpgcheck is globally activated"
  replace:
      name: "{{ item.path }}"
      regexp: "^gpgcheck=0"
      replace: "gpgcheck=1"
  register:  rhel7cis_rule_1_2_2_out
  loop_control:
    label: "{{ item.path }}"
  with_items:
      - "{{ yum_repos.files }}"
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_2|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2

- name: Display Output | 1.2.2 | Check Compliant
  block:
    - name: Display Output | 1.2.2 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.2.2 |gpgcheck is globally activated - yum files|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_2_2_out.changed}}"
      when:
          rhel7cis_rule_1_2_2_out.changed
    - name: Display Output | 1.2.2 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.2.2 |gpgcheck is globally activated - yum files|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_2_2_out.changed}}"
      when:
          not rhel7cis_rule_1_2_2_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_2|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.2.2
      - customcheck

- name: "EVIDENCE | 1.2.2 | AFTER | Ensure gpgcheck is globally activated"
  block:
  - name: "EVIDENCE | 1.2.2 | AFTER | Ensure gpgcheck is globally activated"
    shell: grep '^gpgcheck' /etc/yum.conf; grep '^gpgcheck' /etc/yum.repos.d/* | grep -v 'gpgcheck=1'
    failed_when: no
    changed_when: no
    check_mode: no
    register: ea_rhel7cis_rule_1_2_2
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_2_2_status: Compliant
    when: ea_rhel7cis_rule_1_2_2.stdout is defined and ea_rhel7cis_rule_1_2_2.stdout == "gpgcheck=1"
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_2_2_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.2.2"] }}'
    when: ea_rhel7cis_rule_1_2_2.stdout is defined and ea_rhel7cis_rule_1_2_2.stdout != "gpgcheck=1"
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.2.2","description":"Ensure gpgcheck is globally activated","before":eb_rhel7cis_rule_1_2_2.stdout,"after":ea_rhel7cis_rule_1_2_2.stdout,"mode":mode_rhel7cis_rule_1_2_2,"status":cis_noncompliant_1_2_2_status}] }}'
    when:
    - eb_rhel7cis_rule_1_2_2.stdout is defined and ea_rhel7cis_rule_1_2_2.stdout is defined
  when:
    - (rhel7cis_rule_1_2_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_2_2|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.2.2
#*********************************************************************************
- name: "EVIDENCE | 1.2.3 | BEFORE | Ensure GPG keys are configured"
  block:
  - name: Initialize facts for 1.2.3
    set_fact:
      mode_rhel7cis_rule_1_2_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_2_3|bool) else 'check_only'}}"
      cis_noncompliant_1_2_3_status: Unknown
  - name: "EVIDENCE | 1.2.3 | BEFORE | Ensure GPG keys are configured"
    shell: rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n' | grep 'gpg-pubkey-'
    failed_when: no
    changed_when: no
    check_mode: no
    register: eb_rhel7cis_rule_1_2_3
  when:
    - (rhel7cis_rule_1_2_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_2_3|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.3

- name: "NOTSCORED | 1.2.3 | PATCH | Ensure GPG keys are configured"
  command: gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-{{ ansible_distribution|lower }}-release
  register:  rhel7cis_rule_1_2_3_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_3|bool)
      - ansible_distribution == "RedHat"
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.3

- name: Display Output | 1.2.3 | Check Compliant
  block:
    - name: Display Output | 1.2.3 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.2.3 |GPG keys are configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_2_3_out.changed}}"
      when:
           rhel7cis_rule_1_2_3_out.changed
    - name: Display Output | 1.2.3 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.2.3 |GPG keys are configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_2_3_out.changed}}"
      when:
           not  rhel7cis_rule_1_2_3_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_3|bool)
      - ansible_distribution == "RedHat"
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.3
      - customcheck

- name: "EVIDENCE | 1.2.3 | AFTER | Ensure GPG keys are configured"
  block:
  - name: "EVIDENCE | 1.2.3 | AFTER | Ensure GPG keys are configured"
    shell: rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n' | grep 'gpg-pubkey-'
    failed_when: no
    changed_when: no
    check_mode: no
    register: ea_rhel7cis_rule_1_2_3
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_2_3_status: Compliant
    when: ea_rhel7cis_rule_1_2_3.stdout_lines is defined and ea_rhel7cis_rule_1_2_3.stdout_lines|length > 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_2_3_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.2.3"] }}'
    when: ea_rhel7cis_rule_1_2_3.stdout_lines is undefined or ea_rhel7cis_rule_1_2_3.stdout_lines|length <= 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.2.3","description":"Ensure GPG keys are configured","before":eb_rhel7cis_rule_1_2_3.stdout,"after":ea_rhel7cis_rule_1_2_3.stdout,"mode":mode_rhel7cis_rule_1_2_3,"status":cis_noncompliant_1_2_3_status}] }}'
    when:
      - eb_rhel7cis_rule_1_2_3.stdout is defined and ea_rhel7cis_rule_1_2_3.stdout is defined
  when:
    - (rhel7cis_rule_1_2_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_2_3|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.3
#*********************************************************************************
- name: "EVIDENCE | 1.2.4 | BEFORE | Ensure Red Hat Network or Subscription Manager connection is configured"
  block:
  - name: Initialize facts for 1.2.4
    set_fact:
      mode_rhel7cis_rule_1_2_4: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_2_4|bool) else 'check_only'}}"
      cis_noncompliant_1_2_4_status: Unknown
  - name: "EVIDENCE | 1.2.4 | BEFORE | Ensure Red Hat Network or Subscription Manager connection is configured"
    shell: subscription-manager identity 2>&1
    failed_when: no
    changed_when: no
    check_mode: no
    register: eb_rhel7cis_rule_1_2_4
  when:
    - (rhel7cis_rule_1_2_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_2_4|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.4

- name: "NOTSCORED | 1.2.4 | PATCH | Ensure Red Hat Network or Subscription Manager connection is configured"
  command: subscription-manager identity
  changed_when: no
  failed_when: no
  register:  rhel7cis_rule_1_2_4_out
  when:
      - ansible_distribution == "RedHat"
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_4|bool)
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.4

- name: Display Output | 1.2.4 | Check Compliant
  block:
    - name: Display Output | 1.2.4 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.2.4 | Red Hat Network or Subscription Manager connection is configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_2_4_out.changed}}"
      when:
           rhel7cis_rule_1_2_4_out.changed
    - name: Display Output | 1.2.4 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.2.4 | Red Hat Network or Subscription Manager connection is configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_2_4_out.changed}}"
      when:
           not  rhel7cis_rule_1_2_4_out.changed
  when:
      - ansible_distribution == "RedHat"
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_4|bool)
  tags:
      - level1
      - notscored
      - patch
      - rule_1.2.4
      - customcheck

- name: "EVIDENCE | 1.2.4 | AFTER | Ensure Red Hat Network or Subscription Manager connection is configured"
  block:
  - name: "EVIDENCE | 1.2.4 | AFTER | Ensure Red Hat Network or Subscription Manager connection is configured"
    shell: subscription-manager identity 2>&1
    failed_when: no
    changed_when: no
    check_mode: no
    register: ea_rhel7cis_rule_1_2_4
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_2_4_status: Compliant
    when: ea_rhel7cis_rule_1_2_4.rc is defined and ea_rhel7cis_rule_1_2_4.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_2_4_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.2.4"] }}'
    when: ea_rhel7cis_rule_1_2_4.rc is undefined or ea_rhel7cis_rule_1_2_4.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.2.4","description":"Ensure Red Hat Network or Subscription Manager connection is configured","before":eb_rhel7cis_rule_1_2_4.stdout,"after":ea_rhel7cis_rule_1_2_4.stdout,"mode":mode_rhel7cis_rule_1_2_4,"status":cis_noncompliant_1_2_4_status}] }}'
    when:
      - eb_rhel7cis_rule_1_2_4.stdout is defined and ea_rhel7cis_rule_1_2_4.stdout is defined
  when:
    - (rhel7cis_rule_1_2_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_2_4|bool)
  tags:
    - level1
    - notscored
    - patch
    - rule_1.2.4
#*********************************************************************************
- name: "EVIDENCE | 1.2.5 | BEFORE | Disable the rhnsd Daemon"
  block:
  - name: Initialize facts for 1.2.5
    set_fact:
      mode_rhel7cis_rule_1_2_5: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_2_5|bool) else 'check_only'}}"
      cis_noncompliant_1_2_5_status: Unknown
  - name: "EVIDENCE | 1.2.5 | BEFORE | Disable the rhnsd Daemon"
    service:
      name: rhnsd
      state: stopped
      enabled: no
    check_mode: yes
    register: eb_rhel7cis_rule_1_2_5
  when:
    - (rhel7cis_rule_1_2_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_2_5|bool)
  tags:
    - level2
    - notscored
    - patch
    - rule_1.2.5

- name: "NOTSCORED | 1.2.5 | PATCH | Disable the rhnsd Daemon"
  service:
      name: rhnsd
      state: stopped
      enabled: no
  when:
      - ansible_distribution == "RedHat" and rhnsd_service_status.stdout == "loaded" and not rhel7cis_rhnsd_required
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_5|bool)
  tags:
      - level2
      - notscored
      - patch
      - rule_1.2.5

- name: Display Output | 1.2.5 | Check Compliant
  block:
    - name: Display Output | 1.2.5 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.2.5 |Disable the rhnsd Daemon|{{ansible_hostname}}|CHANGE_REQUIRED|False"
      when:
          - ansible_distribution == "RedHat" and rhnsd_service_status.stdout == "loaded" or rhel7cis_rhnsd_required
    - name: Display Output | 1.2.5 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.2.5 |Disable the rhnsd Daemon|{{ansible_hostname}}|CHANGE_REQUIRED|False"
      when:
          - ansible_distribution == "RedHat" and rhnsd_service_status.stdout != "loaded" and not rhel7cis_rhnsd_required
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_2_5|bool)
  tags:
      - level2
      - notscored
      - patch
      - rule_1.2.5
      - customcheck

- name: "EVIDENCE | 1.2.5 | AFTER | Disable the rhnsd Daemon"
  block:
  - name: "EVIDENCE | 1.2.5 | AFTER | Disable the rhnsd Daemon"
    service:
      name: rhnsd
      state: stopped
      enabled: no
    check_mode: yes
    register: ea_rhel7cis_rule_1_2_5
  - block:
    - name: Set status when compliant
      set_fact:
        cis_noncompliant_1_2_5_status: Compliant
      when: not ea_rhel7cis_rule_1_2_5.changed
    - name: Set status when not compliant
      set_fact:
        cis_noncompliant_1_2_5_status: NonCompliant
        cis_noncompliant_status: true
        cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.2.5"] }}'
      when: ea_rhel7cis_rule_1_2_5.changed
    - name: Update cis_evidence
      set_fact:
        cis_evidence: '{{ cis_evidence + [{"id":"1.2.5","description":"Disable the rhnsd Daemon","before":eb_rhel7cis_rule_1_2_5.status.ActiveState,"after":ea_rhel7cis_rule_1_2_5.status.ActiveState,"mode":mode_rhel7cis_rule_1_2_5,"status":cis_noncompliant_1_2_5_status}] }}'
    when:
      - eb_rhel7cis_rule_1_2_5.status is defined
      - ea_rhel7cis_rule_1_2_5.status is defined
  - block:
    - name: Set status when compliant
      set_fact:
        cis_noncompliant_1_2_5_status: Compliant
    - name: Update cis_evidence
      set_fact:
        cis_evidence: '{{ cis_evidence + [{"id":"1.2.5","description":"Disable the rhnsd Daemon","before":(eb_rhel7cis_rule_1_2_5.msg if eb_rhel7cis_rule_1_2_5.msg is defined else eb_rhel7cis_rule_1_2_5),"after":(ea_rhel7cis_rule_1_2_5.msg if ea_rhel7cis_rule_1_2_5.msg is defined else ea_rhel7cis_rule_1_2_5),"mode":mode_rhel7cis_rule_1_2_5,"status":cis_noncompliant_1_2_5_status}] }}'
    when:
      - ea_rhel7cis_rule_1_2_5.status is not defined
  when:
    - (rhel7cis_rule_1_2_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_2_5|bool)
  tags:
    - level2
    - notscored
    - patch
    - rule_1.2.5
#*********************************************************************************
- name: "EVIDENCE | 1.3.1 | BEFORE | Ensure AIDE is installed"
  block:
  - name: Initialize facts for 1.3.1
    set_fact:
      mode_rhel7cis_rule_1_3_1: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_3_1|bool) else 'check_only'}}"
      cis_noncompliant_1_3_1_status: Unknown
  - name: "EVIDENCE | 1.3.1 | BEFORE | Ensure AIDE is installed"
    shell: rpm -q aide | grep -v not
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_3_1
  when:
    - (rhel7cis_rule_1_3_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_3_1|bool)
  tags:
    - level1
    - scored
    - aide
    - patch
    - rule_1.3.1

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  yum:
      name: aide
      state: present
  register:  rhel7cis_rule_1_3_1a_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_3_1|bool)
      - not ansible_check_mode
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1

- name: "SCORED | 1.3.1 | PATCH | Verify AIDE is installed"
  shell: |
      rpm -q aide | grep -v not
  register:  rhel7cis_rule_1_3_1a_out
  changed_when: no
  failed_when: no
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_3_1|bool)
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1
      - customcheck
  check_mode: no

- name: Display Output | 1.3.1 | Check Compliant
  block:
    - name: Display Output | 1.3.1 | When Not Compliant
      debug:
        msg="NOT_COMPLIANT|CIS_RESULT| 1.3.1 |AIDE is installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_3_1a_out.stdout_lines}}"
      when: (rhel7cis_rule_1_3_1a_out.stdout | length == 0 ) or (rhel7cis_rule_1_3_1a_out.stderr | length > 0 )

    - name: Display Output | 1.3.1 | When Compliant
      debug:
        msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.3.1 |AIDE is installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_3_1a_out.stdout_lines}}"
      when: (rhel7cis_rule_1_3_1a_out.stdout | length > 0) and (rhel7cis_rule_1_3_1a_out.stderr | length == 0 )
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_3_1|bool)
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1
      - customcheck
  check_mode: no

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  command: /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
  args:
      creates: /var/lib/aide/aide.db.gz
  changed_when: no
  failed_when: no
  async: 45
  poll: 0
  register:  rhel7cis_rule_1_3_1b_out
  when:
      - rhel7cis_config_aide|bool
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_3_1|bool)
      - not ansible_check_mode
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1

- name: Display Output | 1.3.1 | Check Compliant
  block:
    - name: Display Output | 1.3.1 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.3.1 |AIDE is installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_3_1b_out.changed}}"
      when:
           rhel7cis_rule_1_3_1b_out.changed
    - name: Display Output | 1.3.1 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.3.1 |AIDE is installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_3_1b_out.changed}}"
      when:
           not  rhel7cis_rule_1_3_1b_out.changed
  when:
      - rhel7cis_config_aide|bool
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_3_1|bool)
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1
      - customcheck

- name: "EVIDENCE | 1.3.1 | AFTER | Ensure AIDE is installed"
  block:
  - name: "EVIDENCE | 1.3.1 | AFTER | Ensure AIDE is installed"
    shell: rpm -q aide | grep -v not
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_3_1
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_3_1_status: Compliant
    when: (ea_rhel7cis_rule_1_3_1.stdout | length > 0) and (ea_rhel7cis_rule_1_3_1.stderr | length == 0)
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_3_1_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.3.1"] }}'
    when: (ea_rhel7cis_rule_1_3_1.stdout | length == 0) or (ea_rhel7cis_rule_1_3_1.stderr | length > 0)
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.3.1","description":"Ensure AIDE is installed","before":eb_rhel7cis_rule_1_3_1.stdout,"after":ea_rhel7cis_rule_1_3_1.stdout,"mode":mode_rhel7cis_rule_1_3_1,"status":cis_noncompliant_1_3_1_status}] }}'
    when:
      - eb_rhel7cis_rule_1_3_1.stdout is defined
      - ea_rhel7cis_rule_1_3_1.stdout is defined
  when:
    - (rhel7cis_rule_1_3_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_3_1|bool)
  tags:
    - level1
    - scored
    - aide
    - patch
    - rule_1.3.1
#*********************************************************************************
- name: "EVIDENCE | 1.3.2 | BEFORE | Ensure filesystem integrity is regularly checked"
  block:
  - name: Initialize facts for 1.3.2
    set_fact:
      mode_rhel7cis_rule_1_3_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_3_2|bool) else 'check_only'}}"
      cis_noncompliant_1_3_2_status: Unknown
  - name: "EVIDENCE | 1.3.2 | BEFORE | Ensure filesystem integrity is regularly checked"
    shell: grep -r aide /etc/cron.* /etc/crontab
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_3_2
  when:
    - (rhel7cis_rule_1_3_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_3_2|bool)
  tags:
    - level1
    - scored
    - aide
    - file_integrity
    - patch
    - rule_1.3.2

- name: "SCORED | 1.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
      name: Run AIDE integrity check
      cron_file: "{{ rhel7cis_aide_cron['cron_file'] }}"
      user: "{{ rhel7cis_aide_cron['cron_user'] }}"
      minute: "{{ rhel7cis_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ rhel7cis_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ rhel7cis_aide_cron['aide_day'] | default('*') }}"
      month: "{{ rhel7cis_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ rhel7cis_aide_cron['aide_weekday'] | default('*') }}"
      job: "{{ rhel7cis_aide_cron['aide_job'] }}"
  register:  rhel7cis_rule_1_3_2_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_3_2|bool)
  tags:
      - level1
      - scored
      - aide
      - file_integrity
      - patch
      - rule_1.3.2

- name: Display Output | 1.3.2 | Check Compliant
  block:
    - name: Display Output | 1.3.2 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.3.2 |filesystem integrity is regularly checked|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_3_2_out.changed}}"
      when:
           rhel7cis_rule_1_3_2_out.changed
    - name: Display Output | 1.3.2 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.3.2 |filesystem integrity is regularly checked|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_3_2_out.changed}}"
      when:
           not  rhel7cis_rule_1_3_2_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_3_2|bool)
  tags:
      - level1
      - scored
      - aide
      - file_integrity
      - patch
      - rule_1.3.2
      - customcheck

- name: "EVIDENCE | 1.3.2 | AFTER | Ensure filesystem integrity is regularly checked"
  block:
  - name: "EVIDENCE | 1.3.2 | AFTER | Ensure filesystem integrity is regularly checked"
    cron:
      name: Run AIDE integrity check
      cron_file: "{{ rhel7cis_aide_cron['cron_file'] }}"
      user: "{{ rhel7cis_aide_cron['cron_user'] }}"
      minute: "{{ rhel7cis_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ rhel7cis_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ rhel7cis_aide_cron['aide_day'] | default('*') }}"
      month: "{{ rhel7cis_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ rhel7cis_aide_cron['aide_weekday'] | default('*') }}"
      job: "{{ rhel7cis_aide_cron['aide_job'] }}"
    check_mode: yes
    register: ea_rhel7cis_rule_1_3_2
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_3_2_status: Compliant
    when: not ea_rhel7cis_rule_1_3_2.changed
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_3_2_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.3.2"] }}'
    when: ea_rhel7cis_rule_1_3_2.changed
  - shell: grep -r aide /etc/cron.* /etc/crontab
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_3_2
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.3.2","description":"Ensure filesystem integrity is regularly checked","before":eb_rhel7cis_rule_1_3_2.stdout,"after":ea_rhel7cis_rule_1_3_2.stdout,"mode":mode_rhel7cis_rule_1_3_2,"status":cis_noncompliant_1_3_2_status}] }}'
  when:
    - (rhel7cis_rule_1_3_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_3_2|bool)
  tags:
    - level1
    - scored
    - aide
    - file_integrity
    - patch
    - rule_1.3.2
#*********************************************************************************
- name: "EVIDENCE | 1.4.1 | BEFORE | Ensure permissions on bootloader config are configured"
  block:
  - name: Initialize facts for 1.4.1
    set_fact:
      mode_rhel7cis_rule_1_4_1: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_4_1|bool) else 'check_only'}}"
      cis_noncompliant_1_4_1_status: Unknown
  - name: "EVIDENCE | 1.4.1 | BEFORE | Ensure permissions on bootloader config are configured"
    shell: stat -L -c "%a %u %g" /boot/grub2/grub.cfg | egrep "600 0 0"
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_4_1
  when:
    - (rhel7cis_rule_1_4_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_4_1|bool)
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.4.1

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  stat:
      path: /etc/grub2.cfg
  register: grub_cfg
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_1|bool)
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1

- name: Display Output | 1.4.1 | Check Compliant
  block:
    - name: Display Output | 1.4.1 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.4.1 | permissions on bootloader config are configured - check grub2.cfg|{{ansible_hostname}}|CHANGE_REQUIRED|{{grub_cfg.changed}}"
      when:
           grub_cfg.changed
    - name: Display Output | 1.4.1 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.4.1 | permissions on bootloader config are configured - check grub2.cfg|{{ansible_hostname}}|CHANGE_REQUIRED|{{grub_cfg.changed}}"
      when:
           not  grub_cfg.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_1|bool)
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1
      - customcheck

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  file:
      path: "{{ grub_cfg.stat.lnk_source }}"
      owner: root
      group: root
      mode: 0600
  register:  rhel7cis_rule_1_4_1_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_1|bool)
      - grub_cfg.stat.exists and grub_cfg.stat.islnk
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1

- name: Display Output | 1.4.1 | Check Compliant
  block:
    - name: Display Output | 1.4.1 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.4.1 | permissions on bootloader config are configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_4_1_out.changed}}"
      when:
           rhel7cis_rule_1_4_1_out.changed
    - name: Display Output | 1.4.1 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.4.1 | permissions on bootloader config are configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_4_1_out.changed}}"
      when:
           not  rhel7cis_rule_1_4_1_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_1|bool)
      - grub_cfg.stat.exists and grub_cfg.stat.islnk
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.1
      - customcheck

- name: "EVIDENCE | 1.4.1 | AFTER | Ensure permissions on bootloader config are configured"
  block:
  - name: "EVIDENCE | 1.4.1 | AFTER | Ensure permissions on bootloader config are configured"
    shell: stat -L -c "%a %u %g" /boot/grub2/grub.cfg | egrep "600 0 0"
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_4_1
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_4_1_status: Compliant
    when: ea_rhel7cis_rule_1_4_1.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_4_1_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.4.1"] }}'
    when: ea_rhel7cis_rule_1_4_1.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.4.1","description":"Ensure permissions on bootloader config are configured","before":eb_rhel7cis_rule_1_4_1.stdout,"after":ea_rhel7cis_rule_1_4_1.stdout,"mode":mode_rhel7cis_rule_1_4_1,"status":cis_noncompliant_1_4_1_status}] }}'
  when:
    - (rhel7cis_rule_1_4_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_4_1|bool)
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.4.1
#*********************************************************************************
- name: "EVIDENCE | 1.4.2 | BEFORE | Ensure bootloader password is set"
  block:
  - name: Initialize facts for 1.4.2
    set_fact:
      mode_rhel7cis_rule_1_4_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_4_2|bool) else 'check_only'}}"
      cis_noncompliant_1_4_2_status: Unknown
  - name: "EVIDENCE | 1.4.2 | BEFORE | Ensure bootloader password is set"
    shell: grep "^\s*GRUB2_PASSWORD" /boot/grub2/user.cfg
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_4_2
  when:
    - (rhel7cis_rule_1_4_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_4_2|bool)
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.4.2

- name: "SCORED | 1.4.2 | PATCH | Ensure bootloader password is set"
  grub_crypt:
      password: "{{ rhel7cis_bootloader_password }}"
  register: grub_pass
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_2|bool)
      - rhel7cis_set_boot_pass|bool
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.2

- name: Display Output | 1.4.2 | Check Compliant
  block:
    - name: Display Output | 1.4.2 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.4.2 |bootloader password is set|{{ansible_hostname}}|CHANGE_REQUIRED|{{grub_pass.changed}}"
      when:
           grub_pass.changed
    - name: Display Output | 1.4.2 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.4.2 |bootloader password is set|{{ansible_hostname}}|CHANGE_REQUIRED|{{grub_pass.changed}}"
      when:
           not  grub_pass.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_2|bool)
      - rhel7cis_set_boot_pass|bool
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.2
      - customcheck

- name: "SCORED | 1.4.2 | PATCH | Ensure bootloader password is set"
  copy:
      dest: /boot/grub2/user.cfg
      content: "GRUB2_PASSWORD={{ grub_pass.passhash }}"
  register:  rhel7cis_rule_1_4_2_out
  notify: generate new grub config
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_2|bool)
      - rhel7cis_set_boot_pass and grub_pass is defined and grub_pass.passhash is defined and grub_pass.passhash != ''
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.2

- name: Display Output | 1.4.2 | Check Compliant
  block:
    - name: Display Output | 1.4.2 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.4.2 | bootloader password is set|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_4_2_out.changed}}"
      when:
           rhel7cis_rule_1_4_2_out.changed
    - name: Display Output | 1.4.2 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.4.2 | bootloader password is set|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_4_2_out.changed}}"
      when:
           not  rhel7cis_rule_1_4_2_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_2|bool)
      - rhel7cis_set_boot_pass and grub_pass is defined and grub_pass.passhash is defined and grub_pass.passhash != ''
  tags:
      - level1
      - scored
      - grub
      - patch
      - rule_1.4.2
      - customcheck

- name: "EVIDENCE | 1.4.2 | AFTER | Ensure bootloader password is set"
  block:
  - name: "EVIDENCE | 1.4.2 | AFTER | Ensure bootloader password is set"
    shell: grep "^\s*GRUB2_PASSWORD" /boot/grub2/user.cfg
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_4_2
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_4_2_status: Compliant
    when: ea_rhel7cis_rule_1_4_2.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_4_2_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.4.2"] }}'
    when: ea_rhel7cis_rule_1_4_2.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.4.2","description":"Ensure bootloader password is set","before":eb_rhel7cis_rule_1_4_2.stdout,"after":ea_rhel7cis_rule_1_4_2.stdout,"mode":mode_rhel7cis_rule_1_4_2,"status":cis_noncompliant_1_4_2_status}] }}'
  when:
    - (rhel7cis_rule_1_4_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_4_2|bool)
  tags:
    - level1
    - scored
    - grub
    - patch
    - rule_1.4.2
#*********************************************************************************
- name: "EVIDENCE | 1.4.3 | BEFORE | Ensure authentication required for single user mode"
  block:
  - name: Initialize facts for 1.4.3
    set_fact:
      mode_rhel7cis_rule_1_4_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_4_3|bool) else 'check_only'}}"
      cis_noncompliant_1_4_3_status: Unknown
  - name: "EVIDENCE | 1.4.3 | BEFORE | Ensure authentication required for single user mode"
    shell: grep 'ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; /usr/bin/systemctl --fail --no-block default\"' /usr/lib/systemd/system/emergency.service
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_4_3_emergency
  - name: "EVIDENCE | 1.4.3 | BEFORE | Ensure authentication required for single user mode"
    shell: grep 'ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; /usr/bin/systemctl --fail --no-block default\"' /usr/lib/systemd/system/rescue.service
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_4_3_rescue
  when:
    - (rhel7cis_rule_1_4_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_4_3|bool)
  tags:
    - level1
    - patch
    - rule_1.4.3

- name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode"
  block:
      - name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode - Emergency"
        lineinfile:
          dest: /usr/lib/systemd/system/emergency.service
          regexp: '/sbin/sulogin'
          line: 'ExecStart=-/bin/sh -c "/usr/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"'
        register:  rhel7cis_rule_1_4_3a_out
        when:
          - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_3|bool)
          - ansible_distribution_major_version is version('7','==')
        tags:
          - level1
          - patch
          - rule_1.4.3

      - name: Display Output | 1.4.3 | Check Compliant
        block:
          - name: Display Output | 1.4.3 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 1.4.3 | authentication required for single user mode - Emergency|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_4_3a_out.changed}}"
            when:
                rhel7cis_rule_1_4_3a_out.changed
          - name: Display Output | 1.4.3 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.4.3 | authentication required for single user mode - Emergency|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_4_3a_out.changed}}"
            when:
                not  rhel7cis_rule_1_4_3a_out.changed
        when:
          - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_3|bool)
          - ansible_distribution_major_version is version('7','==')
        tags:
          - level1
          - patch
          - rule_1.4.3
          - customcheck

      - name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode - Rescue"
        lineinfile:
          dest: /usr/lib/systemd/system/rescue.service
          regexp: '/sbin/sulogin'
          line: 'ExecStart=-/bin/sh -c "/usr/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"'
        register:  rhel7cis_rule_1_4_3b_out
        when:
          - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_3|bool)
          - ansible_distribution_major_version is version('7','==')
        tags:
          - level1
          - patch
          - rule_1.4.3

      - name: Display Output | 1.4.3 | Check Compliant
        block:
          - name: Display Output | 1.4.3 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 1.4.3 | authentication required for single user mode - Rescue|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_4_3b_out.changed}}"
            when:
                rhel7cis_rule_1_4_3b_out.changed
          - name: Display Output | 1.4.3 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.4.3 | authentication required for single user mode - Rescue|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_4_3b_out.changed}}"
            when:
                not  rhel7cis_rule_1_4_3b_out.changed
        when:
          - (fix_mode|bool) or (fix_rhel7cis_rule_1_4_3|bool)
          - ansible_distribution_major_version is version('7','==')
        tags:
          - level1
          - patch
          - rule_1.4.3
          - customcheck

- name: "EVIDENCE | 1.4.3 | AFTER | Ensure authentication required for single user mode"
  block:
  - name: "EVIDENCE | 1.4.3 | AFTER | Ensure authentication required for single user mode"
    shell: grep 'ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; /usr/bin/systemctl --fail --no-block default\"' /usr/lib/systemd/system/emergency.service
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_4_3_emergency
  - name: "EVIDENCE | 1.4.3 | AFTER | Ensure authentication required for single user mode"
    shell: grep 'ExecStart=-/bin/sh -c \"/usr/sbin/sulogin; /usr/bin/systemctl --fail --no-block default\"' /usr/lib/systemd/system/rescue.service
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_4_3_rescue
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_4_3_status: Compliant
    when: ea_rhel7cis_rule_1_4_3_emergency.rc|int == 0 and ea_rhel7cis_rule_1_4_3_rescue.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_4_3_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.4.3"] }}'
    when: ea_rhel7cis_rule_1_4_3_emergency.rc|int != 0 or ea_rhel7cis_rule_1_4_3_rescue.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.4.3","description":"Ensure authentication required for single user mode","before":eb_rhel7cis_rule_1_4_3_emergency.stdout+eb_rhel7cis_rule_1_4_3_rescue.stdout,"after":ea_rhel7cis_rule_1_4_3_emergency.stdout+ea_rhel7cis_rule_1_4_3_rescue.stdout,"mode":mode_rhel7cis_rule_1_4_3,"status":cis_noncompliant_1_4_3_status}] }}'
  when:
    - (rhel7cis_rule_1_4_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_4_3|bool)
  tags:
    - level1
    - patch
    - rule_1.4.3
#*********************************************************************************
- name: "EVIDENCE | 1.5.1 | BEFORE | Ensure core dumps are restricted"
  block:
  - name: Initialize facts for 1.5.1
    set_fact:
      mode_rhel7cis_rule_1_5_1: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_5_1|bool) else 'check_only'}}"
      cis_noncompliant_1_5_1_status: Unknown
  - name: "EVIDENCE | 1.5.1 | BEFORE | Ensure core dumps are restricted"
    shell: grep -E "^\*\s*hard\s*core\s*" /etc/security/limits.conf /etc/security/limits.d/* | awk '{print $4}' | grep 0
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_5_1_limits
  - name: "EVIDENCE | 1.5.1 | BEFORE | Ensure core dumps are restricted"
    shell: sysctl fs.suid_dumpable | awk '{print $3}' | grep 0
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_5_1_fs
  when:
    - (rhel7cis_rule_1_5_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_5_1|bool)
  tags:
    - level1
    - scored
    - limits
    - patch
    - rule_1.5.1

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  lineinfile:
      state: present
      dest: /etc/security/limits.conf
      regexp: '^#?\\*.*core'
      line: '*                hard    core            0'
      insertbefore: '^# End of file'
  register:  rhel7cis_rule_1_5_1a_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_5_1|bool)
  tags:
      - level1
      - scored
      - limits
      - patch
      - rule_1.5.1

- name: Display Output | 1.5.1 | Check Compliant
  block:
    - name: Display Output | 1.5.1 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.5.1 | core dumps are restricted|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_1a_out.changed}}"
      when:
           rhel7cis_rule_1_5_1a_out.changed
    - name: Display Output | 1.5.1 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.5.1 | core dumps are restricted|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_1a_out.changed}}"
      when:
           not  rhel7cis_rule_1_5_1a_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_5_1|bool)
  tags:
      - level1
      - scored
      - limits
      - patch
      - rule_1.5.1
      - customcheck

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  sysctl:
      name: fs.suid_dumpable
      value: '0'
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  register:  rhel7cis_rule_1_5_1b_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_5_1|bool)
  tags:
      - level1
      - scored
      - sysctl
      - patch
      - rule_1.5.1

- name: Display Output | 1.5.1 | Check Compliant
  block:
    - name: Display Output | 1.5.1 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.5.1 | core dumps are restricted|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_1b_out.changed}}"
      when:
           rhel7cis_rule_1_5_1b_out.changed
    - name: Display Output | 1.5.1 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.5.1 | core dumps are restricted|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_1b_out.changed}}"
      when:
           not  rhel7cis_rule_1_5_1b_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_5_1|bool)
  tags:
      - level1
      - scored
      - sysctl
      - patch
      - rule_1.5.1
      - customcheck

- name: "EVIDENCE | 1.5.1 | AFTER | Ensure core dumps are restricted"
  block:
  - name: "EVIDENCE | 1.5.1 | AFTER | Ensure core dumps are restricted"
    shell: grep -E "^\*\s*hard\s*core\s*" /etc/security/limits.conf /etc/security/limits.d/* | awk '{print $4}' | grep 0
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_5_1_limits
  - name: "EVIDENCE | 1.5.1 | AFTER | Ensure core dumps are restricted"
    shell: sysctl fs.suid_dumpable | awk '{print $3}' | grep 0
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_5_1_fs
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_5_1_status: Compliant
    when: ea_rhel7cis_rule_1_5_1_limits.rc|int == 0 and ea_rhel7cis_rule_1_5_1_fs.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_5_1_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.5.1"] }}'
    when: ea_rhel7cis_rule_1_5_1_limits.rc|int != 0 or ea_rhel7cis_rule_1_5_1_fs.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.5.1","description":"Ensure core dumps are restricted","before":eb_rhel7cis_rule_1_5_1_limits.stdout+eb_rhel7cis_rule_1_5_1_fs.stdout,"after":ea_rhel7cis_rule_1_5_1_limits.stdout+ea_rhel7cis_rule_1_5_1_fs.stdout,"mode":mode_rhel7cis_rule_1_5_1,"status":cis_noncompliant_1_5_1_status}] }}'
  when:
    - (rhel7cis_rule_1_5_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_5_1|bool)
  tags:
    - level1
    - scored
    - limits
    - patch
    - rule_1.5.1
#*********************************************************************************
- name: "EVIDENCE | 1.5.2 | BEFORE | Ensure XD/NX support is enabled"
  block:
  - set_fact:
      cis_noncompliant_1_5_2_status: Unknown
  - shell: dmesg | grep NX || true
    register: eb_rhel7cis_rule_1_5_2
  - set_fact:
      mode_rhel7cis_rule_1_5_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_5_2|bool) else 'check_only'}}"
  when:
      - (rhel7cis_rule_1_5_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_5_2|bool)
  tags:
      - level1
      - patch
      - rule_1.5.2
      - customcheck
  check_mode: no
  #check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_5_2|bool)) }}"

- name: "NOTSCORED | 1.5.2 | PATCH | Ensure XD/NX support is enabled"
  shell: dmesg|grep -E "NX|XD" | grep " active";true
  changed_when: no
  register:  rhel7cis_rule_1_5_2_out
  when:
      - (rhel7cis_rule_1_5_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_5_2|bool)
  tags:
      - level1
      - patch
      - rule_1.5.2
  check_mode: no
  #check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_1_5_2|bool)) }}"

- name: Display Output | 1.5.2 | Check Compliant
  block:
    - block:
        - name: Display Output | 1.5.2 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 1.5.2 | XD/NX support is enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_2_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_1_5_2_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.5.2"] }}'
      when:
          rhel7cis_rule_1_5_2_out.stdout is not search("active")
    - block:
        - name: Display Output | 1.5.2 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.5.2 | XD/NX support is enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_2_out.changed}}"
        - set_fact:
            cis_noncompliant_1_5_2_status: Compliant
      when:
          rhel7cis_rule_1_5_2_out.stdout is search("active")
  when:
      - (rhel7cis_rule_1_5_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_5_2|bool)
  tags:
      - level1
      - patch
      - rule_1.5.2
      - customcheck

- name: "EVIDENCE | 1.5.2 | AFTER | Ensure XD/NX support is enabled"
  block:
  - shell: dmesg | grep NX || true
    register: ea_rhel7cis_rule_1_5_2
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.5.2","description":"Ensure XD/NX support is enabled","before":eb_rhel7cis_rule_1_5_2.stdout,"after":ea_rhel7cis_rule_1_5_2.stdout,"mode":mode_rhel7cis_rule_1_5_2,"status":cis_noncompliant_1_5_2_status}] }}'
    when: eb_rhel7cis_rule_1_5_2.stdout is defined and ea_rhel7cis_rule_1_5_2.stdout is defined
  when:
      - (rhel7cis_rule_1_5_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_5_2|bool)
  tags:
      - level1
      - patch
      - rule_1.5.2
      - customcheck
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 1.5.3 | BEFORE | Ensure address space layout randomization (ASLR) is enabled"
  block:
  - name: Initialize facts for 1.5.3
    set_fact:
      mode_rhel7cis_rule_1_5_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_5_3|bool) else 'check_only'}}"
      cis_noncompliant_1_5_3_status: Unknown
  - name: "EVIDENCE | 1.5.3 | BEFORE | Ensure address space layout randomization (ASLR) is enabled"
    shell: sysctl kernel.randomize_va_space | awk '{print $3}' | grep 2
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_5_3
  when:
    - (rhel7cis_rule_1_5_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_5_3|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.5.3

- name: "SCORED | 1.5.3 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  sysctl:
      name: kernel.randomize_va_space
      value: '2'
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  register:  rhel7cis_rule_1_5_3_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_5_3|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.3

- name: Display Output | 1.5.3 | Check Compliant
  block:
    - name: Display Output | 1.5.3 | When Not Compliant
      debug:
         msg="NOT_COMPLIANT|CIS_RESULT| 1.5.3 | address space layout randomization (ASLR) is enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_3_out.changed}}"
      when:
         rhel7cis_rule_1_5_3_out.changed
    - name: Display Output | 1.5.3 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.5.3 | address space layout randomization (ASLR) is enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_3_out.changed}}"
      when:
           not  rhel7cis_rule_1_5_3_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_5_3|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.3
      - customcheck

- name: "EVIDENCE | 1.5.3 | AFTER | Ensure address space layout randomization (ASLR) is enabled"
  block:
  - name: "EVIDENCE | 1.5.3 | AFTER | Ensure address space layout randomization (ASLR) is enabled"
    shell: sysctl kernel.randomize_va_space | awk '{print $3}' | grep 2
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_5_3
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_5_3_status: Compliant
    when: ea_rhel7cis_rule_1_5_3.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_5_3_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.5.3"] }}'
    when: ea_rhel7cis_rule_1_5_3.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.5.3","description":"Ensure address space layout randomization (ASLR) is enabled","before":eb_rhel7cis_rule_1_5_3.stdout,"after":ea_rhel7cis_rule_1_5_3.stdout,"mode":mode_rhel7cis_rule_1_5_3,"status":cis_noncompliant_1_5_3_status}] }}'
  when:
    - (rhel7cis_rule_1_5_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_5_3|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.5.3
#*********************************************************************************
- name: "EVIDENCE | 1.5.4 | BEFORE | Ensure prelink is disabled"
  block:
  - name: Initialize facts for 1.5.4
    set_fact:
      mode_rhel7cis_rule_1_5_4: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_5_4|bool) else 'check_only'}}"
      cis_noncompliant_1_5_4_status: Unknown
  - name: "EVIDENCE | 1.5.4 | BEFORE | Ensure prelink is disabled"
    command: rpm -q prelink
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_5_4
  when:
    - (rhel7cis_rule_1_5_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_5_4|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.5.4

- name: "SCORED | 1.5.4 | PATCH | Ensure prelink is disabled"
  command: prelink -ua
  register:  rhel7cis_rule_1_5_4a_out
  when:
      - prelink_installed.rc == 0
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_5_4|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.4

- name: Display Output | 1.5.4 | Check Compliant
  block:
    - name: Display Output | 1.5.4 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.5.4 |  prelink is disabled - prelink|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_4a_out.changed}}"
      when:
           rhel7cis_rule_1_5_4a_out.changed
    - name: Display Output | 1.5.4 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.5.4 |  prelink is disabled - prelink|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_4a_out.changed}}"
      when:
           not  rhel7cis_rule_1_5_4a_out.changed
  when:
      - prelink_installed.rc == 0
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_5_4|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.4
      - customcheck

- name: "SCORED | 1.5.4 | PATCH | Ensure prelink is disabled"
  yum:
    name: prelink
    state: absent
  register:  rhel7cis_rule_1_5_4b_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_5_4|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.4

- name: Display Output | 1.5.4 | Check Compliant
  block:
    - name: Display Output | 1.5.4 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.5.4 |  prelink is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_4b_out.changed}}"
      when:
           rhel7cis_rule_1_5_4b_out.changed
    - name: Display Output | 1.5.4 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.5.4 |  prelink is disabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_5_4b_out.changed}}"
      when:
           not  rhel7cis_rule_1_5_4b_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_5_4|bool)
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.4
      - customcheck

- name: "EVIDENCE | 1.5.4 | AFTER | Ensure prelink is disabled"
  block:
  - name: "EVIDENCE | 1.5.4 | AFTER | Ensure prelink is disabled"
    command: rpm -q prelink
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_5_4
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_5_4_status: Compliant
    when: ea_rhel7cis_rule_1_5_4.rc|int != 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_5_4_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.5.4"] }}'
    when: ea_rhel7cis_rule_1_5_4.rc|int == 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.5.4","description":"Ensure prelink is disabled","before":eb_rhel7cis_rule_1_5_4.stdout,"after":ea_rhel7cis_rule_1_5_4.stdout,"mode":mode_rhel7cis_rule_1_5_4,"status":cis_noncompliant_1_5_4_status}] }}'
  when:
    - (rhel7cis_rule_1_5_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_5_4|bool)
  tags:
    - level1
    - scored
    - patch
    - rule_1.5.4
#*********************************************************************************
- name: "EVIDENCE | 1.6.1.1 | BEFORE | Ensure SELinux is not disabled in bootloader configuration"
  block:
  - name: Initialize facts for 1.6.1.1
    set_fact:
      mode_rhel7cis_rule_1_6_1_1: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_6_1_1|bool) else 'check_only'}}"
      cis_noncompliant_1_6_1_1_status: Unknown
  - name: "EVIDENCE | 1.6.1.1 | BEFORE | Ensure SELinux is not disabled in bootloader configuration"
    shell: grep -E '^\s*linux' /boot/grub2/grub.cfg 2>&1; grep -E "^\s*linux.*(selinux|enforcing)=0" /boot/grub2/grub.cfg
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_6_1_1
  when:
    - (rhel7cis_rule_1_6_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_1|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.1.1

- name: "SCORED | 1.6.1.1 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
  replace:
      dest: /etc/default/grub
      regexp: '(selinux|enforcing)\s*=\s*0\s*'
      follow: yes
  register: selinux_grub_patch
  ignore_errors: yes
  notify: generate new grub config
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_1|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.1.1

- name: Display Output | 1.6.1.1 | Check Compliant
  block:
    - name: Display Output | 1.6.1.1 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.6.1.1  |  SELinux is not disabled in bootloader configuration|{{ansible_hostname}}|CHANGE_REQUIRED|{{selinux_grub_patch.changed}}"
      when:
           selinux_grub_patch.changed
    - name: Display Output | 1.6.1.1 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.6.1.1  |  SELinux is not disabled in bootloader configuration|{{ansible_hostname}}|CHANGE_REQUIRED|{{selinux_grub_patch.changed}}"
      when:
           not  selinux_grub_patch.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_1|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.1.1
      - customcheck

- name: "EVIDENCE | 1.6.1.1 | AFTER | Ensure SELinux is not disabled in bootloader configuration"
  block:
  - name: "EVIDENCE | 1.6.1.1 | AFTER | Ensure SELinux is not disabled in bootloader configuration"
    shell: grep -E '^\s*linux' /boot/grub2/grub.cfg 2>&1; grep -E '^\s*linux.*(selinux|enforcing)=0' /boot/grub2/grub.cfg
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_6_1_1
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_6_1_1_status: Compliant
    when: ea_rhel7cis_rule_1_6_1_1.rc|int != 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_6_1_1_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.6.1.1"] }}'
    when: ea_rhel7cis_rule_1_6_1_1.rc|int == 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.6.1.1","description":"Ensure SELinux is not disabled in bootloader configuration","before":eb_rhel7cis_rule_1_6_1_1.stdout,"after":ea_rhel7cis_rule_1_6_1_1.stdout,"mode":mode_rhel7cis_rule_1_6_1_1,"status":cis_noncompliant_1_6_1_1_status}] }}'
  when:
    - (rhel7cis_rule_1_6_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_1|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.1.1
#*********************************************************************************
- name: "EVIDENCE | 1.6.1.2 | BEFORE | Ensure the SELinux state is enforcing"
  block:
  - name: Initialize facts for 1.6.1.2
    set_fact:
      mode_rhel7cis_rule_1_6_1_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_6_1_2|bool) else 'check_only'}}"
      cis_noncompliant_1_6_1_2_status: Unknown
  - name: "EVIDENCE | 1.6.1.2 | BEFORE | Ensure the SELinux state is enforcing"
    shell: getenforce|grep Enforcing
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_6_1_2
  when:
    - (rhel7cis_rule_1_6_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_2|bool)
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.6.1.2

- name: "SCORED | 1.6.1.2 | PATCH | Ensure the SELinux state is enforcing"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel7cis_selinux_pol }}"
      state: enforcing
  register:  rhel7cis_rule_1_6_1_2_out
  when:
      - not rhel7cis_selinux_disable
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_2|bool)
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.2

- name: Display Output | 1.6.1.2 | Check Compliant
  block:
    - name: Display Output | 1.6.1.2 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.6.1.2 |  SELinux state is enforcing|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_6_1_2_out.changed}}"
      when:
           rhel7cis_rule_1_6_1_2_out.changed
    - name: Display Output | 1.6.1.2 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.6.1.2 |  SELinux state is enforcing|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_6_1_2_out.changed}}"
      when:
           not  rhel7cis_rule_1_6_1_2_out.changed
  when:
      - not rhel7cis_selinux_disable
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_2|bool)
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.2
      - customcheck

- name: "EVIDENCE | 1.6.1.2 | AFTER | Ensure the SELinux state is enforcing"
  block:
  - name: "EVIDENCE | 1.6.1.2 | AFTER | Ensure the SELinux state is enforcing"
    shell: getenforce|grep Enforcing
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_6_1_2
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_6_1_2_status: Compliant
    when: ea_rhel7cis_rule_1_6_1_2.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_6_1_2_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.6.1.2"] }}'
    when: ea_rhel7cis_rule_1_6_1_2.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.6.1.2","description":"Ensure the SELinux state is enforcing","before":eb_rhel7cis_rule_1_6_1_2.stdout,"after":ea_rhel7cis_rule_1_6_1_2.stdout,"mode":mode_rhel7cis_rule_1_6_1_2,"status":cis_noncompliant_1_6_1_2_status}] }}'
  when:
    - (rhel7cis_rule_1_6_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_2|bool)
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.6.1.2
#*********************************************************************************
- name: "EVIDENCE | 1.6.1.3 | BEFORE | Ensure SELinux policy is configured"
  block:
  - name: Initialize facts for 1.6.1.3
    set_fact:
      mode_rhel7cis_rule_1_6_1_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_6_1_3|bool) else 'check_only'}}"
      cis_noncompliant_1_6_1_3_status: Unknown
  - name: "EVIDENCE | 1.6.1.3 | BEFORE | Ensure SELinux policy is configured"
    shell: grep SELINUXTYPE={{ rhel7cis_selinux_pol }} /etc/selinux/config
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_6_1_3
  when:
    - (rhel7cis_rule_1_6_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_3|bool)
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.6.1.3

- name: "SCORED | 1.6.1.3 | PATCH | Ensure SELinux policy is configured"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel7cis_selinux_pol }}"
      state: enforcing
  register:  rhel7cis_rule_1_6_1_3_out
  when:
      - not rhel7cis_selinux_disable
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_3|bool)
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.3

- name: Display Output | 1.6.1.3 | Check Compliant
  block:
    - name: Display Output | 1.6.1.3 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.6.1.3 |  SELinux policy is configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_6_1_3_out.changed}}"
      when:
           rhel7cis_rule_1_6_1_3_out.changed
    - name: Display Output | 1.6.1.3 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.6.1.3 |  SELinux policy is configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_6_1_3_out.changed}}"
      when:
           not  rhel7cis_rule_1_6_1_3_out.changed
  when:
      - not rhel7cis_selinux_disable
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_3|bool)
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.3
      - customcheck

- name: "EVIDENCE | 1.6.1.3 | AFTER | Ensure SELinux policy is configured"
  block:
  - name: "EVIDENCE | 1.6.1.3 | AFTER | Ensure SELinux policy is configured"
    shell: grep SELINUXTYPE={{ rhel7cis_selinux_pol }} /etc/selinux/config
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_6_1_3
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_6_1_3_status: Compliant
    when: ea_rhel7cis_rule_1_6_1_3.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_6_1_3_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.6.1.3"] }}'
    when: ea_rhel7cis_rule_1_6_1_3.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.6.1.3","description":"Ensure SELinux policy is configured","before":eb_rhel7cis_rule_1_6_1_3.stdout,"after":ea_rhel7cis_rule_1_6_1_3.stdout,"mode":mode_rhel7cis_rule_1_6_1_3,"status":cis_noncompliant_1_6_1_3_status}] }}'
  when:
    - (rhel7cis_rule_1_6_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_3|bool)
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.6.1.3
#*********************************************************************************
- name: "EVIDENCE | 1.6.1.4 | BEFORE | Ensure SETroubleshoot is not installed"
  block:
  - name: Initialize facts for 1.6.1.4
    set_fact:
      mode_rhel7cis_rule_1_6_1_4: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_6_1_4|bool) else 'check_only'}}"
      cis_noncompliant_1_6_1_4_status: Unknown
  - name: "EVIDENCE | 1.6.1.4 | BEFORE | Ensure SETroubleshoot is not installed"
    shell: rpm -q setroubleshoot
    check_mode: no
    failed_when: no
    changed_when: no
    args:
      warn: false
    register: eb_rhel7cis_rule_1_6_1_4
  when:
    - (rhel7cis_rule_1_6_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_4|bool)
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.6.1.4

- name: "SCORED | 1.6.1.4 | PATCH | Ensure SETroubleshoot is not installed"
  yum:
      name: setroubleshoot
      state: absent
  register:  rhel7cis_rule_1_6_1_4_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_4|bool)
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.4

- name: Display Output | 1.6.1.4 | Check Compliant
  block:
    - name: Display Output | 1.6.1.4 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.6.1.4 |  Ensure SETroubleshoot is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_6_1_4_out.changed}}"
      when:
           rhel7cis_rule_1_6_1_4_out.changed
    - name: Display Output | 1.6.1.4 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.6.1.4 |  Ensure SETroubleshoot is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_6_1_4_out.changed}}"
      when:
           not  rhel7cis_rule_1_6_1_4_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_4|bool)
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.4
      - customcheck

- name: "EVIDENCE | 1.6.1.4 | AFTER | Ensure SETroubleshoot is not installed"
  block:
  - name: "EVIDENCE | 1.6.1.4 | AFTER | Ensure SETroubleshoot is not installed"
    shell: rpm -q setroubleshoot
    check_mode: no
    failed_when: no
    changed_when: no
    args:
      warn: false
    register: ea_rhel7cis_rule_1_6_1_4
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_6_1_4_status: Compliant
    when: ea_rhel7cis_rule_1_6_1_4.rc|int != 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_6_1_4_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.6.1.4"] }}'
    when: ea_rhel7cis_rule_1_6_1_4.rc|int == 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.6.1.4","description":"Ensure SETroubleshoot is not installed","before":eb_rhel7cis_rule_1_6_1_4.stdout,"after":ea_rhel7cis_rule_1_6_1_4.stdout,"mode":mode_rhel7cis_rule_1_6_1_4,"status":cis_noncompliant_1_6_1_4_status}] }}'
  when:
    - (rhel7cis_rule_1_6_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_4|bool)
  tags:
    - level2
    - scored
    - selinux
    - patch
    - rule_1.6.1.4
#*********************************************************************************
- name: "EVIDENCE | 1.6.1.5 | BEFORE | Ensure the MCS Translation Service (mcstrans) is not installed"
  block:
  - name: Initialize facts for 1.6.1.5
    set_fact:
      mode_rhel7cis_rule_1_6_1_5: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_6_1_5|bool) else 'check_only'}}"
      cis_noncompliant_1_6_1_5_status: Unknown
  - name: "EVIDENCE | 1.6.1.5 | BEFORE | Ensure the MCS Translation Service (mcstrans) is not installed"
    shell: rpm -q mcstrans
    check_mode: no
    failed_when: no
    changed_when: no
    args:
      warn: false
    register: eb_rhel7cis_rule_1_6_1_5
  when:
    - (rhel7cis_rule_1_6_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_5|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.1.5

- name: "SCORED | 1.6.1.5 | PATCH | Ensure the MCS Translation Service (mcstrans) is not installed"
  yum:
      name: mcstrans
      state: absent
  register:  rhel7cis_rule_1_6_1_5_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_5|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.1.5

- name: Display Output | 1.6.1.5 | Check Compliant
  block:
    - name: Display Output | 1.6.1.5 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.6.1.5 |  the MCS Translation Service (mcstrans) is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_6_1_5_out.changed}}"
      when:
           rhel7cis_rule_1_6_1_5_out.changed
    - name: Display Output | 1.6.1.5 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.6.1.5 |  the MCS Translation Service (mcstrans) is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_6_1_5_out.changed}}"
      when:
           not  rhel7cis_rule_1_6_1_5_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_5|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.1.5
      - customcheck

- name: "EVIDENCE | 1.6.1.5 | AFTER | Ensure the MCS Translation Service (mcstrans) is not installed"
  block:
  - name: "EVIDENCE | 1.6.1.5 | AFTER | Ensure the MCS Translation Service (mcstrans) is not installed"
    shell: rpm -q mcstrans
    check_mode: no
    failed_when: no
    changed_when: no
    args:
      warn: false
    register: ea_rhel7cis_rule_1_6_1_5
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_6_1_5_status: Compliant
    when: ea_rhel7cis_rule_1_6_1_5.rc|int != 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_6_1_5_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.6.1.5"] }}'
    when: ea_rhel7cis_rule_1_6_1_5.rc|int == 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.6.1.5","description":"Ensure the MCS Translation Service (mcstrans) is not installed","before":eb_rhel7cis_rule_1_6_1_5.stdout,"after":ea_rhel7cis_rule_1_6_1_5.stdout,"mode":mode_rhel7cis_rule_1_6_1_5,"status":cis_noncompliant_1_6_1_5_status}] }}'
  when:
    - (rhel7cis_rule_1_6_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_1_5|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.1.5
#*********************************************************************************
- name: "EVIDENCE | 1.6.2 | BEFORE | Ensure SELinux is installed"
  block:
  - name: Initialize facts for 1.6.2
    set_fact:
      mode_rhel7cis_rule_1_6_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_6_2|bool) else 'check_only'}}"
      cis_noncompliant_1_6_2_status: Unknown
  - name: "EVIDENCE | 1.6.2 | BEFORE | Ensure SELinux is installed"
    shell: rpm -q libselinux
    check_mode: no
    failed_when: no
    changed_when: no
    args:
      warn: false
    register: eb_rhel7cis_rule_1_6_2
  when:
    - (rhel7cis_rule_1_6_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_2|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.2

- name: "SCORED | 1.6.2 | PATCH | Ensure SELinux is installed"
  yum:
      name: libselinux
      state: present
  register:  rhel7cis_rule_1_6_2_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_2|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.2

- name: Display Output | 1.6.2 | Check Compliant
  block:
    - name: Display Output | 1.6.2 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.6.2 |  SELinux is installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_6_2_out.changed}}"
      when:
           rhel7cis_rule_1_6_2_out.changed
    - name: Display Output | 1.6.2 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.6.2 |  SELinux is installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_6_2_out.changed}}"
      when:
           not  rhel7cis_rule_1_6_2_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_6_2|bool)
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.2
      - customcheck

- name: "EVIDENCE | 1.6.2 | AFTER | Ensure SELinux is installed"
  block:
  - name: "EVIDENCE | 1.6.2 | AFTER | Ensure SELinux is installed"
    shell: rpm -q libselinux
    check_mode: no
    failed_when: no
    changed_when: no
    args:
      warn: false
    register: ea_rhel7cis_rule_1_6_2
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_6_2_status: Compliant
    when: ea_rhel7cis_rule_1_6_2.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_6_2_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.6.2"] }}'
    when: ea_rhel7cis_rule_1_6_2.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.6.2","description":"Ensure SELinux is installed","before":eb_rhel7cis_rule_1_6_2.stdout,"after":ea_rhel7cis_rule_1_6_2.stdout,"mode":mode_rhel7cis_rule_1_6_2,"status":cis_noncompliant_1_6_2_status}] }}'
  when:
    - (rhel7cis_rule_1_6_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_6_2|bool)
  tags:
    - level2
    - scored
    - patch
    - rule_1.6.2
#*********************************************************************************
- name: "EVIDENCE | 1.7.1.1 | BEFORE | Ensure message of the day is configured properly"
  block:
  - name: Initialize facts for 1.7.1.1
    set_fact:
      mode_rhel7cis_rule_1_7_1_1: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_7_1_1|bool) else 'check_only'}}"
      cis_noncompliant_1_7_1_1_status: Unknown
  - name: "EVIDENCE | 1.7.1.1 | BEFORE | Ensure message of the day is configured properly"
    shell: cat /etc/motd; egrep '(\\v|\\r|\\m|\\s)' /etc/motd
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_7_1_1
  when:
    - (rhel7cis_rule_1_7_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_1|bool)
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.1

- name: "SCORED | 1.7.1.1 | PATCH | Ensure message of the day is configured properly"
  template:
      src: etc/motd.j2
      dest: /etc/motd
  register:  rhel7cis_rule_1_7_1_1_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_1|bool)
  tags:
      - level1
      - banner
      - patch
      - rule_1.7.1.1

- name: Display Output | 1.7.1.1 | Check Compliant
  block:
    - name: Display Output | 1.7.1.1 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.7.1.1 | message of the day is configured properly |{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_1_out.changed}}"
      when:
           rhel7cis_rule_1_7_1_1_out.changed
    - name: Display Output | 1.7.1.1 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.7.1.1 | message of the day is configured properly |{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_1_out.changed}}"
      when:
           not  rhel7cis_rule_1_7_1_1_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_1|bool)
  tags:
      - level1
      - banner
      - patch
      - rule_1.7.1.1
      - customcheck

- name: "EVIDENCE | 1.7.1.1 | AFTER | Ensure message of the day is configured properly"
  block:
  - name: "EVIDENCE | 1.7.1.1 | AFTER | Ensure message of the day is configured properly"
    shell: cat /etc/motd; egrep '(\\v|\\r|\\m|\\s)' /etc/motd
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_7_1_1
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_7_1_1_status: Compliant
    when: ea_rhel7cis_rule_1_7_1_1.rc|int == 1
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_7_1_1_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.7.1.1"] }}'
    when: ea_rhel7cis_rule_1_7_1_1.rc|int != 1
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.7.1.1","description":"Ensure message of the day is configured properly","before":eb_rhel7cis_rule_1_7_1_1.stdout,"after":ea_rhel7cis_rule_1_7_1_1.stdout,"mode":mode_rhel7cis_rule_1_7_1_1,"status":cis_noncompliant_1_7_1_1_status}] }}'
  when:
    - (rhel7cis_rule_1_7_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_1|bool)
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.1
#*********************************************************************************
- name: "EVIDENCE | 1.7.1.2 | BEFORE | Ensure local login warning banner is configured properly"
  block:
  - name: Initialize facts for 1.7.1.2
    set_fact:
      mode_rhel7cis_rule_1_7_1_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_7_1_2|bool) else 'check_only'}}"
      cis_noncompliant_1_7_1_2_status: Unknown
  - name: "EVIDENCE | 1.7.1.2 | BEFORE | Ensure local login warning banner is configured properly"
    shell: cat /etc/issue; egrep '(\\v|\\r|\\m|\\s)' /etc/issue
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_7_1_2
  when:
    - (rhel7cis_rule_1_7_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_2|bool)
  tags:
    - level1
    - patch
    - rule_1.7.1.2

- name: "NOTSCORED | 1.7.1.2 | PATCH | Ensure local login warning banner is configured properly"
  template:
      src: etc/issue.j2
      dest: /etc/issue
  register:  rhel7cis_rule_1_7_1_2_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_2|bool)
  tags:
      - level1
      - patch
      - rule_1.7.1.2

- name: Display Output | 1.7.1.2 | Check Compliant
  block:
    - name: Display Output | 1.7.1.2 | When Not Compliant
      debug:
          msg="NOT__COMPLIANT|CIS_RESULT| 1.7.1.2 | local login warning banner is configured properly|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_2_out.changed}}"
      when:
           rhel7cis_rule_1_7_1_2_out.changed
    - name: Display Output | 1.7.1.2 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.7.1.2 | local login warning banner is configured properly|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_2_out.changed}}"
      when:
           not  rhel7cis_rule_1_7_1_2_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_2|bool)
  tags:
      - level1
      - patch
      - rule_1.7.1.2
      - customcheck

- name: "EVIDENCE | 1.7.1.2 | AFTER | Ensure local login warning banner is configured properly"
  block:
  - name: "EVIDENCE | 1.7.1.2 | AFTER | Ensure local login warning banner is configured properly"
    shell: cat /etc/issue; egrep '(\\v|\\r|\\m|\\s)' /etc/issue
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_7_1_2
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_7_1_2_status: Compliant
    when: ea_rhel7cis_rule_1_7_1_2.rc|int == 1
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_7_1_2_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.7.1.2"] }}'
    when: ea_rhel7cis_rule_1_7_1_2.rc|int != 1
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.7.1.2","description":"Ensure local login warning banner is configured properly","before":eb_rhel7cis_rule_1_7_1_2.stdout,"after":ea_rhel7cis_rule_1_7_1_2.stdout,"mode":mode_rhel7cis_rule_1_7_1_2,"status":cis_noncompliant_1_7_1_2_status}] }}'
  when:
    - (rhel7cis_rule_1_7_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_2|bool)
  tags:
    - level1
    - patch
    - rule_1.7.1.2
#*********************************************************************************
- name: "EVIDENCE | 1.7.1.3 | BEFORE | Ensure remote login warning banner is configured properly"
  block:
  - name: Initialize facts for 1.7.1.3
    set_fact:
      mode_rhel7cis_rule_1_7_1_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_7_1_3|bool) else 'check_only'}}"
      cis_noncompliant_1_7_1_3_status: Unknown
  - name: "EVIDENCE | 1.7.1.3 | BEFORE | Ensure remote login warning banner is configured properly"
    shell: cat /etc/issue.net; egrep '(\\v|\\r|\\m|\\s)' /etc/issue.net
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_7_1_3
  when:
    - (rhel7cis_rule_1_7_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_3|bool)
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.3

- name: "NOTSCORED | 1.7.1.3 | PATCH | Ensure remote login warning banner is configured properly"
  template:
      src: etc/issue.net.j2
      dest: /etc/issue.net
  register:  rhel7cis_rule_1_7_1_3_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_3|bool)
  tags:
      - level1
      - banner
      - patch
      - rule_1.7.1.3

- name: Display Output | 1.7.1.3 | Check Compliant
  block:
    - name: Display Output | 1.7.1.3 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.7.1.3 | remote login warning banner is configured properly|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_3_out.changed}}"
      when:
           rhel7cis_rule_1_7_1_3_out.changed
    - name: Display Output | 1.7.1.3 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.7.1.3 | remote login warning banner is configured properly|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_3_out.changed}}"
      when:
           not  rhel7cis_rule_1_7_1_3_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_3|bool)
  tags:
      - level1
      - banner
      - patch
      - rule_1.7.1.3
      - customcheck

- name: "EVIDENCE | 1.7.1.3 | AFTER | Ensure remote login warning banner is configured properly"
  block:
  - name: "EVIDENCE | 1.7.1.3 | AFTER | Ensure remote login warning banner is configured properly"
    shell: cat /etc/issue.net; egrep '(\\v|\\r|\\m|\\s)' /etc/issue.net
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_7_1_3
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_7_1_3_status: Compliant
    when: ea_rhel7cis_rule_1_7_1_3.rc|int == 1
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_7_1_3_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.7.1.3"] }}'
    when: ea_rhel7cis_rule_1_7_1_3.rc|int != 1
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.7.1.3","description":"Ensure remote login warning banner is configured properly","before":eb_rhel7cis_rule_1_7_1_3.stdout,"after":ea_rhel7cis_rule_1_7_1_3.stdout,"mode":mode_rhel7cis_rule_1_7_1_3,"status":cis_noncompliant_1_7_1_3_status}] }}'
  when:
    - (rhel7cis_rule_1_7_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_3|bool)
  tags:
    - level1
    - banner
    - patch
    - rule_1.7.1.3
#*********************************************************************************
- name: "EVIDENCE | 1.7.1.4 | BEFORE | Ensure permissions on /etc/motd are configured"
  block:
  - name: Initialize facts for 1.7.1.4
    set_fact:
      mode_rhel7cis_rule_1_7_1_4: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_7_1_4|bool) else 'check_only'}}"
      cis_noncompliant_1_7_1_4_status: Unknown
  - name: "EVIDENCE | 1.7.1.4 | BEFORE | Ensure permissions on /etc/motd are configured"
    shell: stat -L -c "%a %u %g" /etc/motd | egrep "644 0 0"
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_7_1_4
  when:
    - (rhel7cis_rule_1_7_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_4|bool)
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.4

- name: "NOTSCORED | 1.7.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
      dest: /etc/motd
      state: file
      owner: root
      group: root
      mode: 0644
  register:  rhel7cis_rule_1_7_1_4_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_4|bool)
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.4

- name: Display Output | 1.7.1.4 | Check Compliant
  block:
    - name: Display Output | 1.7.1.4 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.7.1.4 | permissions on /etc/motd are configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_4_out.changed}}"
      when:
           rhel7cis_rule_1_7_1_4_out.changed
    - name: Display Output | 1.7.1.4 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.7.1.4 | permissions on /etc/motd are configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_4_out.changed}}"
      when:
           not  rhel7cis_rule_1_7_1_4_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_4|bool)
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.4
      - customcheck

- name: "EVIDENCE | 1.7.1.4 | AFTER | Ensure permissions on /etc/motd are configured"
  block:
  - name: "EVIDENCE | 1.7.1.4 | AFTER | Ensure permissions on /etc/motd are configured"
    shell: stat -L -c "%a %u %g" /etc/motd | egrep "644 0 0"
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_7_1_4
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_7_1_4_status: Compliant
    when: ea_rhel7cis_rule_1_7_1_4.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_7_1_4_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.7.1.4"] }}'
    when: ea_rhel7cis_rule_1_7_1_4.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.7.1.4","description":"Ensure permissions on /etc/motd are configured","before":eb_rhel7cis_rule_1_7_1_4.stdout,"after":ea_rhel7cis_rule_1_7_1_4.stdout,"mode":mode_rhel7cis_rule_1_7_1_4,"status":cis_noncompliant_1_7_1_4_status}] }}'
  when:
    - (rhel7cis_rule_1_7_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_4|bool)
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.4
#*********************************************************************************
- name: "EVIDENCE | 1.7.1.5 | BEFORE | Ensure permissions on /etc/issue are configured"
  block:
  - name: Initialize facts for 1.7.1.5
    set_fact:
      mode_rhel7cis_rule_1_7_1_5: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_7_1_5|bool) else 'check_only'}}"
      cis_noncompliant_1_7_1_5_status: Unknown
  - name: "EVIDENCE | 1.7.1.5 | BEFORE | Ensure permissions on /etc/issue are configured"
    shell: stat -L -c "%a %u %g" /etc/issue | egrep "644 0 0"
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_7_1_5
  when:
    - (rhel7cis_rule_1_7_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_5|bool)
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.5

- name: "SCORED | 1.7.1.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
      dest: /etc/issue
      state: file
      owner: root
      group: root
      mode: 0644
  register:  rhel7cis_rule_1_7_1_5_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_5|bool)
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.5

- name: Display Output | 1.7.1.5 | Check Compliant
  block:
    - name: Display Output | 1.7.1.5 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.7.1.5 | permissions on /etc/issue are configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_5_out.changed}}"
      when:
           rhel7cis_rule_1_7_1_5_out.changed
    - name: Display Output | 1.7.1.5 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.7.1.5 | permissions on /etc/issue are configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_5_out.changed}}"
      when:
           not  rhel7cis_rule_1_7_1_5_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_5|bool)
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.5
      - customcheck

- name: "EVIDENCE | 1.7.1.5 | AFTER | Ensure permissions on /etc/issue are configured"
  block:
  - name: "EVIDENCE | 1.7.1.5 | AFTER | Ensure permissions on /etc/issue are configured"
    shell: stat -L -c "%a %u %g" /etc/issue | egrep "644 0 0"
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_7_1_5
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_7_1_5_status: Compliant
    when: ea_rhel7cis_rule_1_7_1_5.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_7_1_5_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.7.1.5"] }}'
    when: ea_rhel7cis_rule_1_7_1_5.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.7.1.5","description":"Ensure permissions on /etc/issue are configured","before":eb_rhel7cis_rule_1_7_1_5.stdout,"after":ea_rhel7cis_rule_1_7_1_5.stdout,"mode":mode_rhel7cis_rule_1_7_1_5,"status":cis_noncompliant_1_7_1_5_status}] }}'
  when:
    - (rhel7cis_rule_1_7_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_5|bool)
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.5
#*********************************************************************************
- name: "EVIDENCE | 1.7.1.6 | BEFORE | Ensure permissions on /etc/issue.net are configured"
  block:
  - name: Initialize facts for 1.7.1.6
    set_fact:
      mode_rhel7cis_rule_1_7_1_6: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_7_1_6|bool) else 'check_only'}}"
      cis_noncompliant_1_7_1_6_status: Unknown
  - name: "EVIDENCE | 1.7.1.6 | BEFORE | Ensure permissions on /etc/issue.net are configured"
    shell: stat -L -c "%a %u %g" /etc/issue.net | egrep "644 0 0"
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_7_1_6
  when:
    - (rhel7cis_rule_1_7_1_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_6|bool)
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.6

- name: "NOTSCORED | 1.7.1.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
      dest: /etc/issue.net
      state: file
      owner: root
      group: root
      mode: 0644
  register:  rhel7cis_rule_1_7_1_6_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_6|bool)
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.6

- name: Display Output | 1.7.1.6 | Check Compliant
  block:
    - name: Display Output | 1.7.1.6 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.7.1.6 | permissions on /etc/issue.net are configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_6_out.changed}}"
      when:
           rhel7cis_rule_1_7_1_6_out.changed
    - name: Display Output | 1.7.1.6 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.7.1.6 | permissions on /etc/issue.net are configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_1_6_out.changed}}"
      when:
           not  rhel7cis_rule_1_7_1_6_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_6|bool)
  tags:
      - level1
      - perms
      - patch
      - rule_1.7.1.6
      - customcheck

- name: "EVIDENCE | 1.7.1.6 | AFTER | Ensure permissions on /etc/issue.net are configured"
  block:
  - name: "EVIDENCE | 1.7.1.6 | AFTER | Ensure permissions on /etc/issue.net are configured"
    shell: stat -L -c "%a %u %g" /etc/issue.net | egrep "644 0 0"
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_7_1_6
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_7_1_6_status: Compliant
    when: ea_rhel7cis_rule_1_7_1_6.rc|int == 0
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_7_1_6_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.7.1.6"] }}'
    when: ea_rhel7cis_rule_1_7_1_6.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.7.1.6","description":"Ensure permissions on /etc/issue.net are configured","before":eb_rhel7cis_rule_1_7_1_6.stdout,"after":ea_rhel7cis_rule_1_7_1_6.stdout,"mode":mode_rhel7cis_rule_1_7_1_6,"status":cis_noncompliant_1_7_1_6_status}] }}'
  when:
    - (rhel7cis_rule_1_7_1_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_1_6|bool)
  tags:
    - level1
    - perms
    - patch
    - rule_1.7.1.6
#*********************************************************************************
- name: "EVIDENCE | 1.7.2 | BEFORE | Ensure GDM login banner is configured"
  block:
  - name: Initialize facts for 1.7.2
    set_fact:
      mode_rhel7cis_rule_1_7_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_7_2|bool) else 'check_only'}}"
      cis_noncompliant_1_7_2_status: Unknown
  - name: "EVIDENCE | 1.7.2 | BEFORE | Ensure GDM login banner is configured"
    shell: cat /etc/dconf/profile/gdm /etc/dconf/db/gdm.d/01-banner-message 2>&1
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_7_2
  when:
    - (rhel7cis_rule_1_7_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_2|bool)
  tags:
    - level1
    - patch
    - rule_1.7.2

- name: "SCORED | 1.7.2 | PATCH | Ensure GDM login banner is configured"
  lineinfile:
      dest: "{{ item.file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
      create: yes
      owner: root
      group: root
      mode: 0644
  register:  rhel7cis_rule_1_7_2_out
  with_items:
      - { file: '/etc/dconf/profile/gdm', regexp:  'user-db', line: 'user-db:user' }
      - { file: '/etc/dconf/profile/gdm', regexp:  'system-db', line: 'system-db:gdm' }
      - { file: '/etc/dconf/profile/gdm', regexp:  'file-db', line: 'file-db:/usr/share/gdm/greeter-dconf-defaults' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  'banner-message-enable', line: 'banner-message-enable=true' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  'banner-message-text', line: "banner-message-text='{{ rhel7cis_warning_banner_no_newline }}' " }
  when:
      - rhel7cis_gui|bool
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_2|bool)
  tags:
      - level1
      - patch
      - rule_1.7.2

- name: Display Output | 1.7.2 | Check  Compliant
  block:
  - name: Display Output | 1.7.2 | When Not Compliant
    debug:
        msg="NOT_COMPLIANT|CIS_RESULT| 1.7.2 | GDM login banner is configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_2_out.changed}}"
    when:
         rhel7cis_rule_1_7_2_out.changed
  - name: Display Output | 1.7.2 | When Compliant
    debug:
        msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.7.2 | GDM login banner is configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_7_2_out.changed}}"
    when:
         not  rhel7cis_rule_1_7_2_out.changed
  when:
      - rhel7cis_gui|bool
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_7_2|bool)
  tags:
      - level1
      - patch
      - rule_1.7.2
      - customcheck

- name: "EVIDENCE | 1.7.2 | AFTER | Ensure GDM login banner is configured"
  block:
  - name: "EVIDENCE | 1.7.2 | AFTER | Ensure GDM login banner is configured"
    lineinfile:
      dest: "{{ item.file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
      create: yes
      owner: root
      group: root
      mode: 0644
    with_items:
      - { file: '/etc/dconf/profile/gdm', regexp:  'user-db', line: 'user-db:user' }
      - { file: '/etc/dconf/profile/gdm', regexp:  'system-db', line: 'system-db:gdm' }
      - { file: '/etc/dconf/profile/gdm', regexp:  'file-db', line: 'file-db:/usr/share/gdm/greeter-dconf-defaults' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  'banner-message-enable', line: 'banner-message-enable=true' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp:  'banner-message-text', line: "banner-message-text='{{ rhel7cis_warning_banner_no_newline }}' " }
    check_mode: yes
    failed_when: no
    register: ea_rhel7cis_rule_1_7_2
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_7_2_status: Compliant
    when: (not rhel7cis_gui|bool) or (not ea_rhel7cis_rule_1_7_2.changed)
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_7_2_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.7.2"] }}'
    when: rhel7cis_gui|bool and ea_rhel7cis_rule_1_7_2.changed
  - shell: cat /etc/dconf/profile/gdm /etc/dconf/db/gdm.d/01-banner-message 2>&1
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_7_2
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.7.2","description":"Ensure GDM login banner is configured","before":eb_rhel7cis_rule_1_7_2.stdout,"after":ea_rhel7cis_rule_1_7_2.stdout,"mode":mode_rhel7cis_rule_1_7_2,"status":cis_noncompliant_1_7_2_status}] }}'
  when:
    - (rhel7cis_rule_1_7_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_7_2|bool)
  tags:
    - level1
    - patch
    - rule_1.7.2
#*********************************************************************************
- name: "EVIDENCE | 1.8 | BEFORE | Ensure updates, patches, and additional security software are installed"
  block:
  - name: Initialize facts for 1.8
    set_fact:
      mode_rhel7cis_rule_1_8: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_1_8|bool) else 'check_only'}}"
      cis_noncompliant_1_8_status: Unknown
  - name: "EVIDENCE | 1.8 | BEFORE | Ensure updates, patches, and additional security software are installed"
    shell: yum check-update
    args:
      warn: false
    check_mode: no
    failed_when: no
    changed_when: no
    register: eb_rhel7cis_rule_1_8
  when:
    - (rhel7cis_rule_1_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_8|bool)
  tags:
    - level1
    - patch
    - rule_1.8

- name: "NOTSCORED | 1.8 | PATCH | Ensure updates, patches, and additional security software are installed"
  yum:
      name: "*"
      state: latest
  register:  rhel7cis_rule_1_8_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_8|bool)
  tags:
      - level1
      - patch
      - rule_1.8
      - skip_ansible_lint

- name: Display Output | 1.8 | Check Compliant
  block:
    - name: Display Output | 1.8 | When Not Compliant
      debug:
          msg="NOT_COMPLIANT|CIS_RESULT| 1.8 | updates, patches, and additional security software are installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_8_out.changed}}"
      when:
           rhel7cis_rule_1_8_out.changed
    - name: Display Output | 1.8 | When Compliant
      debug:
          msg="SUCCESS_COMPLIANT|CIS_RESULT| 1.8 | updates, patches, and additional security software are installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_1_8_out.changed}}"
      when:
           not  rhel7cis_rule_1_8_out.changed
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_1_8|bool)
  tags:
      - level1
      - patch
      - rule_1.8
      - skip_ansible_lint
      - customcheck

- name: "EVIDENCE | 1.8 | AFTER | Ensure updates, patches, and additional security software are installed"
  block:
  - name: "EVIDENCE | 1.8 | AFTER | Ensure updates, patches, and additional security software are installed"
    shell: yum check-update
    args:
      warn: false
    check_mode: no
    failed_when: no
    changed_when: no
    register: ea_rhel7cis_rule_1_8
  - name: Set status when compliant
    set_fact:
      cis_noncompliant_1_8_status: Compliant
    when: ea_rhel7cis_rule_1_8.rc|int == 0 # man yum: 'Returns 0 if no packages are available for update.'
  - name: Set status when not compliant
    set_fact:
      cis_noncompliant_1_8_status: NonCompliant
      cis_noncompliant_status: true
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["1.8"] }}'
    when: ea_rhel7cis_rule_1_8.rc|int != 0
  - name: Update cis_evidence
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"1.8","description":"Ensure updates, patches, and additional security software are installed","before":eb_rhel7cis_rule_1_8.stdout,"after":ea_rhel7cis_rule_1_8.stdout,"mode":mode_rhel7cis_rule_1_8,"status":cis_noncompliant_1_8_status}] }}'
  when:
    - (rhel7cis_rule_1_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_1_8|bool)
  tags:
    - level1
    - patch
    - rule_1.8
#*********************************************************************************
