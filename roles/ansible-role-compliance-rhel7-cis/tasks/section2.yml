- name: "EVIDENCE | 2.1.1 | BEFORE | Ensure chargen services are not enabled"
  block:
  - name: Initialize facts for 2.1.1
    set_fact:
      cis_noncompliant_2_1_1_status: Unknown
      mode_rhel7cis_rule_2_1_1: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_1_1|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.1.1 | BEFORE | Ensure chargen services are not enabled"
    shell: ls /etc/xinetd.d/chargen-dgram 2>&1;ls /etc/xinetd.d/chargen-stream 2>&1;chkconfig --list | grep -A20 "xinetd based services" | grep chargen 2>&1;if [ $? -ne 0 ]; then chkconfig --list chargen-dgram;chkconfig --list chargen-stream;fi;true
    register: eb_rhel7cis_rule_2_1_1
  when:
      - (rhel7cis_rule_2_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_1|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.1
  check_mode: no

- name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-dgram,chargen-stream"
  block:
      - name: "SCORED | 2.1.1 | PATCH | Check chargen services are not enabled | chargen-dgram"
        stat:
            path: /etc/xinetd.d/chargen-dgram
        register: chargen_dgram_service

      - name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-dgram"
        command: chkconfig chargen-dgram off || true
        notify: restart xinetd
        when: chargen_dgram_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_1|bool))
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.1 | PATCH | Check chargen services are not enabled | chargen-dgram"
        #shell: chkconfig --list 2>/dev/null | grep "chargen-dgram:" | sed "s/\(^\schargen-dgram:\s*\)//";true
        shell: chkconfig --list "chargen-dgram" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: chargen_dgram_service.stat.exists
        tags:
          - skip_ansible_lint
        register: chargen_dgram_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_1_chargen_dgram_status: NonCompliant
        when: chargen_dgram_service.stat.exists and chargen_dgram_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_1_chargen_dgram_status: Compliant
        when: not chargen_dgram_service.stat.exists or chargen_dgram_output.stdout=="off" or chargen_dgram_output.stdout==""

      - name: Display Output SCORED | 2.1.1 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.1 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.1|chargen-dgram services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{chargen_dgram_service.stat.exists}}"
            when: cis_noncompliant_2_1_1_chargen_dgram_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.1 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.1|chargen-dgram services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{chargen_dgram_service.stat.exists}}"
            when: cis_noncompliant_2_1_1_chargen_dgram_status=="Compliant"
        tags:
            - customcheck
        check_mode: no

      - name: "SCORED | 2.1.1 | PATCH | Check chargen services are not enabled | chargen-stream"
        stat:
            path: /etc/xinetd.d/chargen-stream
        register: chargen_stream_service

      - name: "SCORED | 2.1.1 | PATCH | Ensure chargen services are not enabled | chargen-stream"
        command: chkconfig chargen-stream off || true
        notify: restart xinetd
        when: chargen_stream_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_1|bool))
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.1 | PATCH | Check chargen services are not enabled | chargen-stream"
        #shell: chkconfig --list 2>/dev/null | grep "chargen-stream:" | sed "s/\(^\schargen-stream:\s*\)//";true
        shell: chkconfig --list "chargen-stream" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: chargen_dgram_service.stat.exists
        tags:
          - skip_ansible_lint
        register: chargen_stream_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_1_chargen_stream_status: NonCompliant
        when: chargen_stream_service.stat.exists and chargen_stream_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_1_chargen_stream_status: Compliant
        when: not chargen_stream_service.stat.exists or chargen_stream_output.stdout=="off" or chargen_stream_output.stdout==""

      - name: Display Output SCORED | 2.1.1 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.1 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.1|chargen-stream services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{chargen_stream_service.stat.exists}}"
            when: cis_noncompliant_2_1_1_chargen_stream_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.1 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.1|chargen-stream services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{chargen_stream_service.stat.exists}}"
            when: cis_noncompliant_2_1_1_chargen_stream_status=="Compliant"
        tags:
            - customcheck
        check_mode: no

      - name: Combined chargen_dgram_status and chargen_stream_status Compliant
        set_fact:
          cis_noncompliant_2_1_1_status: Compliant
        when: cis_noncompliant_2_1_1_chargen_dgram_status=="Compliant" and cis_noncompliant_2_1_1_chargen_stream_status=="Compliant"
      - name: Combined chargen_dgram_status and chargen_stream_status NonCompliant
        set_fact:
          cis_noncompliant_2_1_1_status: NonCompliant
          cis_noncompliant_status: true
          cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.1.1"] }}'
        when: not(cis_noncompliant_2_1_1_chargen_dgram_status=="Compliant") or not(cis_noncompliant_2_1_1_chargen_stream_status=="Compliant")
      - name: Debug chargen_dgram_status and chargen_stream_status
        debug:
          msg: "cis_noncompliant_2_1_1_chargen_dgram_status={{ cis_noncompliant_2_1_1_chargen_dgram_status }} and cis_noncompliant_2_1_1_chargen_stream_status={{ cis_noncompliant_2_1_1_chargen_stream_status }}"
  when:
      - (rhel7cis_rule_2_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_1|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.1

- name: "EVIDENCE | 2.1.1 | AFTER | Ensure chargen services are not enabled"
  block:
  - name: "EVIDENCE | 2.1.1 | AFTER | Ensure chargen services are not enabled"
    shell: ls /etc/xinetd.d/chargen-dgram 2>&1;ls /etc/xinetd.d/chargen-stream 2>&1;chkconfig --list | grep -A20 "xinetd based services" | grep chargen 2>&1;if [ $? -ne 0 ]; then chkconfig --list chargen-dgram;chkconfig --list chargen-stream;fi;true
    register: ea_rhel7cis_rule_2_1_1
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.1.1","description":"Ensure chargen services are not enabled","before":eb_rhel7cis_rule_2_1_1.stdout,"after":ea_rhel7cis_rule_2_1_1.stdout,"mode":mode_rhel7cis_rule_2_1_1,"status":cis_noncompliant_2_1_1_status}] }}'
    when: eb_rhel7cis_rule_2_1_1.stdout is defined and ea_rhel7cis_rule_2_1_1.stdout is defined
  when:
      - (rhel7cis_rule_2_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_1|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.1
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 2.1.2 | BEFORE | Ensure daytime services are not enabled"
  block:
  - name: Initialize facts for 2.1.2
    set_fact:
      cis_noncompliant_2_1_2_status: Unknown
      mode_rhel7cis_rule_2_1_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_1_2|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.1.2 | BEFORE | Ensure daytime services are not enabled"
    shell: ls /etc/xinetd.d/daytime-dgram 2>&1;ls /etc/xinetd.d/daytime-stream 2>&1;chkconfig --list | grep -A20 "xinetd based services" | grep daytime 2>&1;if [ $? -ne 0 ]; then chkconfig --list daytime-dgram;chkconfig --list daytime-stream;fi;true
    register: eb_rhel7cis_rule_2_1_2
  when:
      - (rhel7cis_rule_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_2|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.2
  check_mode: no

- name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-dgram,daytime-stream"
  block:
      - name: "SCORED | 2.1.2 | PATCH | Check daytime services are not enabled | daytime-dgram"
        stat:
            path: /etc/xinetd.d/daytime-dgram
        register: daytime_dgram_service

      - name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-dgram"
        command: chkconfig daytime-dgram off || true
        notify: restart xinetd
        when: daytime_dgram_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_2|bool))
        tags:
          - skip_ansible_lint

      - name: "SCORED | 2.1.2 | PATCH | Check daytime services are not enabled | daytime-dgram"
        #shell: chkconfig --list 2>/dev/null | grep "daytime-dgram:" | sed "s/\(^\sdaytime-dgram:\s*\)//";true
        shell: chkconfig --list "daytime-dgram" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: daytime_dgram_service.stat.exists
        tags:
          - skip_ansible_lint
        register: daytime_dgram_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_2_daytime_dgram_status: NonCompliant
        when: daytime_dgram_service.stat.exists and daytime_dgram_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_2_daytime_dgram_status: Compliant
        when: not daytime_dgram_service.stat.exists or daytime_dgram_output.stdout=="off" or daytime_dgram_output.stdout==""

      - name: Display Output SCORED | 2.1.2 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.2 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.2|daytime-dgram services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{daytime_dgram_service.stat.exists}}"
            when: cis_noncompliant_2_1_2_daytime_dgram_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.2 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.2|daytime-dgram services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{daytime_dgram_service.stat.exists}}"
            when: cis_noncompliant_2_1_2_daytime_dgram_status=="Compliant"
        tags:
            - customcheck
        check_mode: no

      - name: "SCORED | 2.1.2 | PATCH | Check daytime services are not enabled | daytime-stream"
        stat:
            path: /etc/xinetd.d/daytime-stream
        register: daytime_stream_service

      - name: "SCORED | 2.1.2 | PATCH | Ensure daytime services are not enabled | daytime-stream"
        command: chkconfig daytime-stream off || true
        notify: restart xinetd
        when: daytime_stream_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_2|bool))
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.2 | PATCH | Check daytime services are not enabled | daytime-stream"
        #shell: chkconfig --list 2>/dev/null | grep "daytime-stream:" | sed "s/\(^\sdaytime-stream:\s*\)//";true
        shell: chkconfig --list "daytime-stream" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: daytime_dgram_service.stat.exists
        tags:
          - skip_ansible_lint
        register: daytime_stream_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_2_daytime_stream_status: NonCompliant
        when: daytime_stream_service.stat.exists and daytime_stream_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_2_daytime_stream_status: Compliant
        when: not daytime_stream_service.stat.exists or daytime_stream_output.stdout=="off" or daytime_stream_output.stdout==""

      - name: Display Output SCORED | 2.1.2 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.2 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.2|daytime-stream services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{daytime_stream_service.stat.exists}}"
            when: cis_noncompliant_2_1_2_daytime_stream_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.2 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.2|daytime-stream services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{daytime_stream_service.stat.exists}}"
            when: cis_noncompliant_2_1_2_daytime_stream_status=="Compliant"
        tags:
            - customcheck
        check_mode: no

      - name: Combined daytime_dgram_status and daytime_stream_status Compliant
        set_fact:
          cis_noncompliant_2_1_2_status: Compliant
        when: cis_noncompliant_2_1_2_daytime_dgram_status=="Compliant" and cis_noncompliant_2_1_2_daytime_stream_status=="Compliant"
      - name: Combined daytime_dgram_status and daytime_stream_status NonCompliant
        set_fact:
          cis_noncompliant_2_1_2_status: NonCompliant
          cis_noncompliant_status: true
          cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.1.2"] }}'
        when: not(cis_noncompliant_2_1_2_daytime_dgram_status=="Compliant") or not(cis_noncompliant_2_1_2_daytime_stream_status=="Compliant")
      - name: Debug daytime_dgram_status and daytime_stream_status
        debug:
          msg: "cis_noncompliant_2_1_2_daytime_dgram_status={{ cis_noncompliant_2_1_2_daytime_dgram_status }} and cis_noncompliant_2_1_2_daytime_stream_status={{ cis_noncompliant_2_1_2_daytime_stream_status }}"
  when:
      - (rhel7cis_rule_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_2|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.2

- name: "EVIDENCE | 2.1.2 | AFTER | Ensure daytime services are not enabled"
  block:
  - name: "EVIDENCE | 2.1.2 | AFTER | Ensure daytime services are not enabled"
    shell: ls /etc/xinetd.d/daytime-dgram 2>&1;ls /etc/xinetd.d/daytime-stream 2>&1;chkconfig --list | grep -A20 "xinetd based services" | grep daytime 2>&1;if [ $? -ne 0 ]; then chkconfig --list daytime-dgram;chkconfig --list daytime-stream;fi;true
    register: ea_rhel7cis_rule_2_1_2
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.1.2","description":"Ensure daytime services are not enabled","before":eb_rhel7cis_rule_2_1_2.stdout,"after":ea_rhel7cis_rule_2_1_2.stdout,"mode":mode_rhel7cis_rule_2_1_2,"status":cis_noncompliant_2_1_2_status}] }}'
    when: eb_rhel7cis_rule_2_1_2.stdout is defined and ea_rhel7cis_rule_2_1_2.stdout is defined
  when:
      - (rhel7cis_rule_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_2|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.2
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 2.1.3 | BEFORE | Ensure discard services are not enabled"
  block:
  - name: Initialize facts for 2.1.3
    set_fact:
      cis_noncompliant_2_1_3_status: Unknown
      mode_rhel7cis_rule_2_1_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_1_3|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.1.3 | BEFORE | Ensure discard services are not enabled"
    shell: ls /etc/xinetd.d/discard-dgram 2>&1;ls /etc/xinetd.d/discard-stream 2>&1;chkconfig --list | grep -A20 "xinetd based services" | grep discard 2>&1;if [ $? -ne 0 ]; then chkconfig --list discard-dgram;chkconfig --list discard-stream;fi;true
    register: eb_rhel7cis_rule_2_1_3
  when:
      - (rhel7cis_rule_2_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_3|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.3
  check_mode: no

- name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-dgram,discard-stream"
  block:
      - name: "SCORED | 2.1.3 | PATCH | Check discard services are not enabled | discard-dgram"
        stat:
            path: /etc/xinetd.d/discard-dgram
        register: discard_dgram_service

      - name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-dgram"
        command: chkconfig discard-dgram off || true
        notify: restart xinetd
        when: discard_dgram_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_3|bool))
        tags:
          - skip_ansible_lint

      - name: "SCORED | 2.1.3 | PATCH | Check discard services are not enabled | discard-dgram"
        #shell: chkconfig --list 2>/dev/null | grep "discard-dgram:" | sed "s/\(^\sdiscard-dgram:\s*\)//";true
        shell: chkconfig --list "discard-dgram" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: discard_dgram_service.stat.exists
        tags:
          - skip_ansible_lint
        register: discard_dgram_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_3_discard_dgram_status: NonCompliant
        when: discard_dgram_service.stat.exists and discard_dgram_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_3_discard_dgram_status: Compliant
        when: not discard_dgram_service.stat.exists or discard_dgram_output.stdout=="off" or discard_dgram_output.stdout==""

      - name: Display Output SCORED | 2.1.3 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.3 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.3|discard-dgram services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{discard_dgram_service.stat.exists}}"
            when: cis_noncompliant_2_1_3_discard_dgram_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.3 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.3|discard-dgram services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{discard_dgram_service.stat.exists}}"
            when: cis_noncompliant_2_1_3_discard_dgram_status=="Compliant"
        tags:
            - customcheck
        check_mode: no

      - name: "SCORED | 2.1.3 | PATCH | Check discard services are not enabled | discard-stream"
        stat:
            path: /etc/xinetd.d/discard-stream
        register: discard_stream_service

      - name: "SCORED | 2.1.3 | PATCH | Ensure discard services are not enabled | discard-stream"
        command: chkconfig discard-stream off || true
        notify: restart xinetd
        when: discard_stream_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_3|bool))
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.3 | PATCH | Check discard services are not enabled | discard-stream"
        #shell: chkconfig --list 2>/dev/null | grep "discard-stream:" | sed "s/\(^\sdiscard-stream:\s*\)//";true
        shell: chkconfig --list "discard-stream" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: discard_dgram_service.stat.exists
        tags:
          - skip_ansible_lint
        register: discard_stream_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_3_discard_stream_status: NonCompliant
        when: discard_stream_service.stat.exists and discard_stream_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_3_discard_stream_status: Compliant
        when: not discard_stream_service.stat.exists or discard_stream_output.stdout=="off" or discard_stream_output.stdout==""

      - name: Display Output SCORED | 2.1.3 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.3 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.3|discard-stream services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{discard_stream_service.stat.exists}}"
            when: cis_noncompliant_2_1_3_discard_stream_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.3 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.3|discard-stream services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{discard_stream_service.stat.exists}}"
            when: cis_noncompliant_2_1_3_discard_stream_status=="Compliant"
        tags:
            - customcheck
        check_mode: no

      - name: Combined discard_dgram_status and discard_stream_status Compliant
        set_fact:
          cis_noncompliant_2_1_3_status: Compliant
        when: cis_noncompliant_2_1_3_discard_dgram_status=="Compliant" and cis_noncompliant_2_1_3_discard_stream_status=="Compliant"
      - name: Combined discard_dgram_status and discard_stream_status NonCompliant
        set_fact:
          cis_noncompliant_2_1_3_status: NonCompliant
          cis_noncompliant_status: true
          cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.1.3"] }}'
        when: not(cis_noncompliant_2_1_3_discard_dgram_status=="Compliant") or not(cis_noncompliant_2_1_3_discard_stream_status=="Compliant")
      - name: Debug discard_dgram_status and discard_stream_status
        debug:
          msg: "cis_noncompliant_2_1_3_discard_dgram_status={{ cis_noncompliant_2_1_3_discard_dgram_status }} and cis_noncompliant_2_1_3_discard_stream_status={{ cis_noncompliant_2_1_3_discard_stream_status }}"
  when:
      - (rhel7cis_rule_2_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_3|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.3

- name: "EVIDENCE | 2.1.3 | AFTER | Ensure discard services are not enabled"
  block:
  - name: "EVIDENCE | 2.1.3 | AFTER | Ensure discard services are not enabled"
    shell: ls /etc/xinetd.d/discard-dgram 2>&1;ls /etc/xinetd.d/discard-stream 2>&1;chkconfig --list | grep -A20 "xinetd based services" | grep discard 2>&1;if [ $? -ne 0 ]; then chkconfig --list discard-dgram;chkconfig --list discard-stream;fi;true
    register: ea_rhel7cis_rule_2_1_3
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.1.3","description":"Ensure discard services are not enabled","before":eb_rhel7cis_rule_2_1_3.stdout,"after":ea_rhel7cis_rule_2_1_3.stdout,"mode":mode_rhel7cis_rule_2_1_3,"status":cis_noncompliant_2_1_3_status}] }}'
    when: eb_rhel7cis_rule_2_1_3.stdout is defined and ea_rhel7cis_rule_2_1_3.stdout is defined
  when:
      - (rhel7cis_rule_2_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_3|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.3
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 2.1.4 | BEFORE | Ensure echo services are not enabled"
  block:
  - name: Initialize facts for 2.1.4
    set_fact:
      cis_noncompliant_2_1_4_status: Unknown
      mode_rhel7cis_rule_2_1_4: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_1_4|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.1.4 | BEFORE | Ensure echo services are not enabled"
    shell: ls /etc/xinetd.d/echo-dgram 2>&1;ls /etc/xinetd.d/echo-stream 2>&1;chkconfig --list | grep -A20 "xinetd based services" | grep echo 2>&1;if [ $? -ne 0 ]; then chkconfig --list echo-dgram;chkconfig --list echo-stream;fi;true
    register: eb_rhel7cis_rule_2_1_4
  when:
      - (rhel7cis_rule_2_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_4|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.4
  check_mode: no

- name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-dgram,echo-stream"
  block:
      - name: "SCORED | 2.1.4 | PATCH | Check echo services are not enabled | echo-dgram"
        stat:
            path: /etc/xinetd.d/echo-dgram
        register: echo_dgram_service

      - name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-dgram"
        command: chkconfig echo-dgram off || true
        notify: restart xinetd
        when: echo_dgram_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_4|bool))
        tags:
          - skip_ansible_lint

      - name: "SCORED | 2.1.4 | PATCH | Check echo services are not enabled | echo-dgram"
        #shell: chkconfig --list 2>/dev/null | grep "echo-dgram:" | sed "s/\(^\secho-dgram:\s*\)//";true
        shell: chkconfig --list "echo-dgram" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: echo_dgram_service.stat.exists
        tags:
          - skip_ansible_lint
        register: echo_dgram_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_4_echo_dgram_status: NonCompliant
        when: echo_dgram_service.stat.exists and echo_dgram_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_4_echo_dgram_status: Compliant
        when: not echo_dgram_service.stat.exists or echo_dgram_output.stdout=="off" or echo_dgram_output.stdout==""

      - name: Display Output SCORED | 2.1.4 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.4 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.4|echo-dgram services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{echo_dgram_service.stat.exists}}"
            when: cis_noncompliant_2_1_4_echo_dgram_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.4 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.4|echo-dgram services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{echo_dgram_service.stat.exists}}"
            when: cis_noncompliant_2_1_4_echo_dgram_status=="Compliant"
        tags:
            - customcheck
        check_mode: no

      - name: "SCORED | 2.1.4 | PATCH | Check echo services are not enabled | echo-stream"
        stat:
            path: /etc/xinetd.d/echo-stream
        register: echo_stream_service

      - name: "SCORED | 2.1.4 | PATCH | Ensure echo services are not enabled | echo-stream"
        command: chkconfig echo-stream off || true
        notify: restart xinetd
        when: echo_stream_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_4|bool))
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.4 | PATCH | Check echo services are not enabled | echo-stream"
        #shell: chkconfig --list 2>/dev/null | grep "echo-stream:" | sed "s/\(^\secho-stream:\s*\)//";true
        shell: chkconfig --list "echo-stream" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: echo_dgram_service.stat.exists
        tags:
          - skip_ansible_lint
        register: echo_stream_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_4_echo_stream_status: NonCompliant
        when: echo_stream_service.stat.exists and echo_stream_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_4_echo_stream_status: Compliant
        when: not echo_stream_service.stat.exists or echo_stream_output.stdout=="off" or echo_stream_output.stdout==""

      - name: Display Output SCORED | 2.1.4 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.4 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.4|echo-stream services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{echo_stream_service.stat.exists}}"
            when: cis_noncompliant_2_1_4_echo_stream_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.4 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.4|echo-stream services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{echo_stream_service.stat.exists}}"
            when: cis_noncompliant_2_1_4_echo_stream_status=="Compliant"
        tags:
            - customcheck
        check_mode: no

      - name: Combined echo_dgram_status and echo_stream_status Compliant
        set_fact:
          cis_noncompliant_2_1_4_status: Compliant
        when: cis_noncompliant_2_1_4_echo_dgram_status=="Compliant" and cis_noncompliant_2_1_4_echo_stream_status=="Compliant"
      - name: Combined echo_dgram_status and echo_stream_status NonCompliant
        set_fact:
          cis_noncompliant_2_1_4_status: NonCompliant
          cis_noncompliant_status: true
          cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.1.4"] }}'
        when: not(cis_noncompliant_2_1_4_echo_dgram_status=="Compliant") or not(cis_noncompliant_2_1_4_echo_stream_status=="Compliant")
      - name: Debug echo_dgram_status and echo_stream_status
        debug:
          msg: "cis_noncompliant_2_1_4_echo_dgram_status={{ cis_noncompliant_2_1_4_echo_dgram_status }} and cis_noncompliant_2_1_4_echo_stream_status={{ cis_noncompliant_2_1_4_echo_stream_status }}"
  when:
      - (rhel7cis_rule_2_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_4|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.4

- name: "EVIDENCE | 2.1.4 | AFTER | Ensure echo services are not enabled"
  block:
  - name: "EVIDENCE | 2.1.4 | AFTER | Ensure echo services are not enabled"
    shell: ls /etc/xinetd.d/echo-dgram 2>&1;ls /etc/xinetd.d/echo-stream 2>&1;chkconfig --list | grep -A20 "xinetd based services" | grep echo 2>&1;if [ $? -ne 0 ]; then chkconfig --list echo-dgram;chkconfig --list echo-stream;fi;true
    register: ea_rhel7cis_rule_2_1_4
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.1.4","description":"Ensure echo services are not enabled","before":eb_rhel7cis_rule_2_1_4.stdout,"after":ea_rhel7cis_rule_2_1_4.stdout,"mode":mode_rhel7cis_rule_2_1_4,"status":cis_noncompliant_2_1_4_status}] }}'
    when: eb_rhel7cis_rule_2_1_4.stdout is defined and ea_rhel7cis_rule_2_1_4.stdout is defined
  when:
      - (rhel7cis_rule_2_1_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_4|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.4
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 2.1.5 | BEFORE | Ensure time services are not enabled"
  block:
  - name: Initialize facts for 2.1.5
    set_fact:
      cis_noncompliant_2_1_5_status: Unknown
      mode_rhel7cis_rule_2_1_5: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_1_5|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.1.5 | BEFORE | Ensure time services are not enabled"
    shell: ls /etc/xinetd.d/time-dgram 2>&1;ls /etc/xinetd.d/time-stream 2>&1;chkconfig --list 2>/dev/null | grep -A20 "xinetd based services" | grep "\stime" 2>&1;if [ $? -ne 0 ]; then chkconfig --list time-dgram;chkconfig --list time-stream;fi;true
    register: eb_rhel7cis_rule_2_1_5
  when:
      - (rhel7cis_rule_2_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_5|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.5
  check_mode: no

- name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-dgram,time-stream"
  block:
      - name: "SCORED | 2.1.5 | PATCH | Check time services are not enabled | time-dgram"
        stat:
            path: /etc/xinetd.d/time-dgram
        register: time_dgram_service

      - name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-dgram"
        command: chkconfig time-dgram off || true
        notify: restart xinetd
        when: time_dgram_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_5|bool))
        tags:
          - skip_ansible_lint

      - name: "SCORED | 2.1.5 | PATCH | Check time services are not enabled | time-dgram"
        #shell: chkconfig --list 2>/dev/null | grep "\stime-dgram:" | sed "s/\(^\stime-dgram:\s*\)//";true
        shell: chkconfig --list "time-dgram" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: time_dgram_service.stat.exists
        tags:
          - skip_ansible_lint
        register: time_dgram_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_5_time_dgram_status: NonCompliant
        when: time_dgram_service.stat.exists and time_dgram_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_5_time_dgram_status: Compliant
        when: not time_dgram_service.stat.exists or time_dgram_output.stdout=="off" or time_dgram_output.stdout==""

      - name: Display Output SCORED | 2.1.5 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.5 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.5|time-dgram services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{time_dgram_service.stat.exists}}"
            when: cis_noncompliant_2_1_5_time_dgram_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.5 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.5|time-dgram services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{time_dgram_service.stat.exists}}"
            when: cis_noncompliant_2_1_5_time_dgram_status=="Compliant"
        tags:
            - customcheck
        check_mode: no

      - name: "SCORED | 2.1.5 | PATCH | Check time services are not enabled | time-stream"
        stat:
            path: /etc/xinetd.d/time-stream
        register: time_stream_service

      - name: "SCORED | 2.1.5 | PATCH | Ensure time services are not enabled | time-stream"
        command: chkconfig time-stream off || true
        notify: restart xinetd
        when: time_stream_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_5|bool))
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.5 | PATCH | Check time services are not enabled | time-stream"
        #shell: chkconfig --list 2>/dev/null | grep "\stime-stream:" | sed "s/\(^\stime-stream:\s*\)//";true
        shell: chkconfig --list "time-stream" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: time_dgram_service.stat.exists
        tags:
          - skip_ansible_lint
        register: time_stream_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_5_time_stream_status: NonCompliant
        when: time_stream_service.stat.exists and time_stream_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_5_time_stream_status: Compliant
        when: not time_stream_service.stat.exists or time_stream_output.stdout=="off" or time_stream_output.stdout==""

      - name: Display Output SCORED | 2.1.5 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.5 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.5|time-stream services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{time_stream_service.stat.exists}}"
            when: cis_noncompliant_2_1_5_time_stream_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.5 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.5|time-stream services are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{time_stream_service.stat.exists}}"
            when: cis_noncompliant_2_1_5_time_stream_status=="Compliant"
        tags:
            - customcheck
        check_mode: no

      - name: Combined time_dgram_status and time_stream_status Compliant
        set_fact:
          cis_noncompliant_2_1_5_status: Compliant
        when: cis_noncompliant_2_1_5_time_dgram_status=="Compliant" and cis_noncompliant_2_1_5_time_stream_status=="Compliant"
      - name: Combined time_dgram_status and time_stream_status NonCompliant
        set_fact:
          cis_noncompliant_2_1_5_status: NonCompliant
          cis_noncompliant_status: true
          cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.1.5"] }}'
        when: not(cis_noncompliant_2_1_5_time_dgram_status=="Compliant") or not(cis_noncompliant_2_1_5_time_stream_status=="Compliant")
      - name: Debug time_dgram_status and time_stream_status
        debug:
          msg: "cis_noncompliant_2_1_5_time_dgram_status={{ cis_noncompliant_2_1_5_time_dgram_status }} and cis_noncompliant_2_1_5_time_stream_status={{ cis_noncompliant_2_1_5_time_stream_status }}"
  when:
      - (rhel7cis_rule_2_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_5|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.5

- name: "EVIDENCE | 2.1.5 | AFTER | Ensure time services are not enabled"
  block:
  - name: "EVIDENCE | 2.1.5 | AFTER | Ensure time services are not enabled"
    shell: ls /etc/xinetd.d/time-dgram 2>&1;ls /etc/xinetd.d/time-stream 2>&1;chkconfig --list 2>/dev/null | grep -A20 "xinetd based services" | grep "\stime" 2>&1;if [ $? -ne 0 ]; then chkconfig --list time-dgram;chkconfig --list time-stream;fi;true
    register: ea_rhel7cis_rule_2_1_5
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.1.5","description":"Ensure time services are not enabled","before":eb_rhel7cis_rule_2_1_5.stdout,"after":ea_rhel7cis_rule_2_1_5.stdout,"mode":mode_rhel7cis_rule_2_1_5,"status":cis_noncompliant_2_1_5_status}] }}'
    when: eb_rhel7cis_rule_2_1_5.stdout is defined and ea_rhel7cis_rule_2_1_5.stdout is defined
  when:
      - (rhel7cis_rule_2_1_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_5|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.5
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_1_6: true
  when: (rhel7cis_tftp_server|bool == false) and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.1.6 | BEFORE | Ensure tftp server is not enabled"
  block:
  - name: Initialize facts for 2.1.6
    set_fact:
      cis_noncompliant_2_1_6_status: Unknown
      mode_rhel7cis_rule_2_1_6: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_1_6|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.1.6 | BEFORE | Ensure tftp server is not enabled"
    shell: ls /etc/xinetd.d/tftp 2>&1;chkconfig --list 2>/dev/null | grep -A20 "xinetd based services" | grep "\stftp" 2>&1;if [ $? -ne 0 ]; then chkconfig --list tftp;fi;true
    register: eb_rhel7cis_rule_2_1_6
  when:
      - (rhel7cis_rule_2_1_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_6|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.6
  check_mode: no

- name: "SCORED | 2.1.6 | PATCH | Ensure tftp server is not enabled"
  block:
      - name: "SCORED | 2.1.6 | PATCH | Check tftp server is not enabled"
        stat:
            path: /etc/xinetd.d/tftp
        register: tftp_service

      - name: "SCORED | 2.1.6 | PATCH | Ensure tftp server is not enabled"
        shell: |
          sed -i "s/\(.*disable.*= \)no/\\1yes/" /etc/xinetd.d/tftp;chkconfig tftp off;true
        args:
          warn: no
        when: not(xinetd_service_status.stdout == "loaded") and tftp_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_6|bool))
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.6 | PATCH | Ensure tftp server is not enabled"
        shell: |
          sed -i "s/\(.*disable.*= \)no/\\1yes/" /etc/xinetd.d/tftp;chkconfig tftp off;true
        notify: restart xinetd
        args:
          warn: no
        when: (xinetd_service_status.stdout == "loaded") and tftp_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_6|bool))
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.6 | PATCH | Check tftp server is not enabled"
        #shell: chkconfig --list 2>/dev/null | grep "\stftp:" | sed "s/\(^\stftp:\s*\)//";true
        shell: chkconfig --list "tftp" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: tftp_service.stat.exists
        tags:
          - skip_ansible_lint
        register: tftp_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_6_status: NonCompliant
          cis_noncompliant_status: true
          cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.1.6"] }}'
        when: tftp_service.stat.exists and tftp_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_6_status: Compliant
        when: not tftp_service.stat.exists or tftp_output.stdout=="off" or tftp_output.stdout==""

      - name: Display Output SCORED | 2.1.6 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.6 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.6|tftp server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{tftp_service.stat.exists}}"
            when: cis_noncompliant_2_1_6_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.6 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.6|tftp server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{tftp_service.stat.exists}}"
            when: cis_noncompliant_2_1_6_status=="Compliant"
        tags:
            - customcheck
        check_mode: no
  when:
      - (rhel7cis_rule_2_1_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_6|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.6

- name: "EVIDENCE | 2.1.6 | AFTER | Ensure tftp server is not enabled"
  block:
  - name: "EVIDENCE | 2.1.6 | AFTER | Ensure tftp server is not enabled"
    shell: ls /etc/xinetd.d/tftp 2>&1;chkconfig --list 2>/dev/null | grep -A20 "xinetd based services" | grep "\stftp" 2>&1;if [ $? -ne 0 ]; then chkconfig --list tftp;fi;true
    register: ea_rhel7cis_rule_2_1_6
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.1.6","description":"Ensure tftp server is not enabled","before":eb_rhel7cis_rule_2_1_6.stdout,"after":ea_rhel7cis_rule_2_1_6.stdout,"mode":mode_rhel7cis_rule_2_1_6,"status":cis_noncompliant_2_1_6_status}] }}'
    when: eb_rhel7cis_rule_2_1_6.stdout is defined and ea_rhel7cis_rule_2_1_6.stdout is defined
  when:
      - (rhel7cis_rule_2_1_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_6|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.6
  check_mode: no
#*********************************************************************************
# Did not find tcpmux-server in rhel7 cis 2.0.0 benchmark, so added it in from 1.0.0 (if required)
- set_fact:
      fix_rhel7cis_rule_2_1_18: true
  when: (rhel7cis_tcpmux_server|bool == false) and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.1.18 | BEFORE | Ensure tcpmux server is not enabled"
  block:
  - name: Initialize facts for 2.1.18
    set_fact:
      cis_noncompliant_2_1_18_status: Unknown
      mode_rhel7cis_rule_2_1_18: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_1_18|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.1.18 | BEFORE | Ensure tcpmux server is not enabled"
    shell: ls /etc/xinetd.d/tcpmux-server 2>&1;chkconfig --list 2>/dev/null | grep -A20 "xinetd based services" | grep "\stcpmux-server" 2>&1;if [ $? -ne 0 ]; then chkconfig --list tcpmux-server;fi;true
    register: eb_rhel7cis_rule_2_1_18
  when:
      - (rhel7cis_rule_2_1_18|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_18|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.18
  check_mode: no

- name: "SCORED | 2.1.18 | PATCH | Ensure tcpmux server is not enabled"
  block:
      - name: "SCORED | 2.1.18 | PATCH | Check tcpmux server is not enabled"
        stat:
            path: /etc/xinetd.d/tcpmux-server
        register: tcpmux_service

      - name: "SCORED | 2.1.18 | PATCH | Ensure tcpmux server is not enabled"
        shell: |
          #sed -i "s/\(.*disable.*= \)no/\\1yes/" /etc/xinetd.d/tcpmux-server
          chkconfig tcpmux-server off;true
        when: not(xinetd_service_status.stdout == "loaded") and tcpmux_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_18|bool))
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.18 | PATCH | Ensure tcpmux server is not enabled"
        shell: |
          #sed -i "s/\(.*disable.*= \)no/\\1yes/" /etc/xinetd.d/tcpmux-server
          chkconfig tcpmux-server off;true
        notify: restart xinetd
        when: (xinetd_service_status.stdout == "loaded") and tcpmux_service.stat.exists and ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_18|bool))
        tags:
            - skip_ansible_lint

      - name: "SCORED | 2.1.18 | PATCH | Check tcpmux server is not enabled"
        #shell: chkconfig --list 2>/dev/null | grep "\stcpmux-server:" | sed "s/\(^\stcpmux-server:\s*\)//";true
        shell: chkconfig --list "tcpmux-server" 2>/dev/null | sed "s/[^\t ]*[\t ]*//"
        when: tcpmux_service.stat.exists
        tags:
          - skip_ansible_lint
        register: tcpmux_output
        check_mode: no
      - set_fact:
          cis_noncompliant_2_1_18_status: NonCompliant
          cis_noncompliant_status: true
          cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.1.18"] }}'
        when: tcpmux_service.stat.exists and tcpmux_output.stdout=="on"
      - set_fact:
          cis_noncompliant_2_1_18_status: Compliant
        when: not tcpmux_service.stat.exists or tcpmux_output.stdout=="off" or tcpmux_output.stdout==""

      - name: Display Output SCORED | 2.1.18 | Check Compliant
        block:
          - name: Display Output SCORED | 2.1.18 | When Not Compliant
            debug:
                msg="NOT_COMPLIANT|CIS_RESULT| 2.1.18|tcpmux server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{tcpmux_service.stat.exists}}"
            when: cis_noncompliant_2_1_18_status=="NonCompliant"
          - name: Display Output SCORED | 2.1.18 | When Compliant
            debug:
                msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.18|tcpmux server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|{{tcpmux_service.stat.exists}}"
            when: cis_noncompliant_2_1_18_status=="Compliant"
        tags:
            - customcheck
        check_mode: no
  when:
      - (rhel7cis_rule_2_1_18|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_18|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.18

- name: "EVIDENCE | 2.1.18 | AFTER | Ensure tcpmux server is not enabled"
  block:
  - name: "EVIDENCE | 2.1.18 | AFTER | Ensure tcpmux server is not enabled"
    shell: ls /etc/xinetd.d/tcpmux-server 2>&1;chkconfig --list 2>/dev/null | grep -A20 "xinetd based services" | grep "\stcpmux-server" 2>&1;if [ $? -ne 0 ]; then chkconfig --list tcpmux-server;fi;true
    register: ea_rhel7cis_rule_2_1_18
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.1.18","description":"Ensure tcpmux server is not enabled","before":eb_rhel7cis_rule_2_1_18.stdout,"after":ea_rhel7cis_rule_2_1_18.stdout,"mode":mode_rhel7cis_rule_2_1_18,"status":cis_noncompliant_2_1_18_status}] }}'
    when: eb_rhel7cis_rule_2_1_18.stdout is defined and ea_rhel7cis_rule_2_1_18.stdout is defined
  when:
      - (rhel7cis_rule_2_1_18|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_18|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.18
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_1_7: true
  when:
      - (xinetd_service_status.stdout == "loaded" and not rhel7cis_xinetd_required) and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.1.7 | BEFORE | Ensure xinetd is not enabled"
  block:
  - name: Initialize facts for 2.1.7
    set_fact:
      cis_noncompliant_2_1_7_status: Unknown
      mode_rhel7cis_rule_2_1_7: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_1_7|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.1.7 | BEFORE | Ensure xinetd is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled xinetd 2>&1;echo -n "status=";systemctl status xinetd 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_1_7
  when:
      - (rhel7cis_rule_2_1_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_7|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.7
      - customcheck
  check_mode: no

- name: "SCORED | 2.1.7 | PATCH | Ensure xinetd is not enabled"
  service:
      name: xinetd
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_1_7_out
  when:
      - (rhel7cis_rule_2_1_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_7|bool)
      - xinetd_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - services
      - scored
      - rule_2.1.7
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_7|bool)) }}"

- name: Display Output SCORED | 2.1.7 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.1.7 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.1.7 |xinetd is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_1_7_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.1.7"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - xinetd_service_status.stdout == "loaded"
          - rhel7cis_rule_2_1_7_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_1_7|bool))
          - not(rhel7cis_rule_2_1_7_out.msg is defined and rhel7cis_rule_2_1_7_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.1.7 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.1.7 |xinetd is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_1_7_status: Compliant
      when:
          - xinetd_service_status.stdout != "loaded" or not rhel7cis_rule_2_1_7_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_7|bool) or (rhel7cis_rule_2_1_7_out.changed and rhel7cis_rule_2_1_7_out.msg is defined and rhel7cis_rule_2_1_7_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_1_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_7|bool)
  tags:
      - level1
      - services
      - patch
      - scored
      - rule_2.1.7
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.1.7 | AFTER | Ensure xinetd is not enabled"
  block:
  - name: "EVIDENCE | 2.1.7 | AFTER | Ensure xinetd is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled xinetd 2>&1;echo -n "status=";systemctl status xinetd 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_1_7
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.1.7","description":"Ensure xinetd is not enabled","before":eb_rhel7cis_rule_2_1_7.stdout,"after":ea_rhel7cis_rule_2_1_7.stdout,"mode":mode_rhel7cis_rule_2_1_7,"status":cis_noncompliant_2_1_7_status}] }}'
    when: eb_rhel7cis_rule_2_1_7.stdout is defined and ea_rhel7cis_rule_2_1_7.stdout is defined
  when:
      - (rhel7cis_rule_2_1_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_1_7|bool)
  tags:
      - level1
      - scored
      - services
      - patch
      - rule_2.1.7
      - customcheck
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 2.2.1.1 | BEFORE | Ensure time synchronization is in use - service install"
  block:
  - name: Initialize facts for 2.2.1.1
    set_fact:
      cis_noncompliant_2_2_1_1_status: Unknown
      mode_rhel7cis_rule_2_2_1_1: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_1_1|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.1.1 | BEFORE | Ensure time synchronization is in use - service install"
    shell: echo -n "chronyd-is-enabled=";systemctl is-enabled chronyd 2>&1;echo -n "chronyd-status=";systemctl status chronyd 2>&1 | grep Active;echo -n "ntpd-is-enabled=";systemctl is-enabled ntpd 2>&1;echo -n "ntpd-status=";systemctl status ntpd 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_1_1
  when:
      - (rhel7cis_rule_2_2_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
  tags:
      - level1
      - patch
      - rule_2.2.1.1
      - customcheck
  check_mode: no

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service install"
  yum:
      name: "{{ rhel7cis_time_synchronization }}"
      state: present
  when:
      - (rhel7cis_rule_2_2_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
  tags:
      - level1
      - patch
      - rule_2.2.1.1
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)) }}"

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service start"
  service:
      name: "{{ rhel7cis_time_synchronization }}d"
      state: started
      enabled: yes
  register: rhel7cis_rule_2_2_1_1b_out
  when:
      - (rhel7cis_rule_2_2_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
  tags:
      - level1
      - patch
      - rule_2.2.1.1
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)) }}"

- name: Display Output SCORED | 2.2.1.1 (1)| Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.1.1 (1)| When Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.1.1 |Ensure time synchronization is in use - time service start |{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_1b_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_1_1_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.1.1"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - (rhel7cis_rule_2_2_1_1b_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool))) or (rhel7cis_rule_2_2_1_1b_out.changed and rhel7cis_rule_2_2_1_1b_out.msg is defined and rhel7cis_rule_2_2_1_1b_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.1.1 (1)| When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.1.1 (1) |Ensure time synchronization is in use - time service stop |{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_1b_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_1_status: Compliant
      when:
          - not rhel7cis_rule_2_2_1_1b_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
          - not(rhel7cis_rule_2_2_1_1b_out.msg is defined and rhel7cis_rule_2_2_1_1b_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
  tags:
      - level1
      - patch
      - rule_2.2.1.1
      - customcheck
  check_mode: no

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service stop ntp"
  service:
      name: ntpd
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_1_1_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
      - rhel7cis_time_synchronization == "chrony" and ntpd_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.1.1

#- name: Display Output SCORED | 2.2.1.1 | Check Compliant
#  block:
#    - name: Display Output SCORED | 2.2.1.1 | When Compliant
#      debug:
#          msg="NOT_COMPLIANT|CIS_RESULT| 2.2.1.1 |Ensure time synchronization is in use - service stop ntp|{{ansible_hostname}}|CHANGE_REQUIRED|False"
#      when:
#          - rhel7cis_time_synchronization == "chrony" and ntpd_service_status.stdout == "loaded"
#    - name: Display Output SCORED | 2.2.1.1 | When Compliant
#      debug:
#          msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.1.1 |Ensure time synchronization is in use - service stop ntp|{{ansible_hostname}}|CHANGE_REQUIRED|False"
#      when:
#          - rhel7cis_time_synchronization == "chrony" and ntpd_service_status.stdout != "loaded"
#  when:
#      - (rhel7cis_rule_2_2_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
#  tags:
#      - level1
#      - patch
#      - rule_2.2.1.1
#      - customcheck
#  check_mode: no

- name: "NOTSCORED | 2.2.1.1 | PATCH | Ensure time synchronization is in use - service stop chrony"
  service:
      name: chronyd
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_1_1_out
  when:
      - (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
      - rhel7cis_time_synchronization == "ntp" and chronyd_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.1.1

#- name: Display Output SCORED | 2.2.1.1 | Check Compliant
#  block:
#    - name: Display Output SCORED | 2.2.1.1 | When Not Compliant
#      debug:
#          msg="NOT_COMPLIANT|CIS_RESULT| 2.2.1.1 |time synchronization is in use - service stop chrony|{{ansible_hostname}}|CHANGE_REQUIRED|False"
#      when:
#          - rhel7cis_time_synchronization == "ntp" and chronyd_service_status.stdout == "loaded"
#    - name: Display Output SCORED | 2.2.1.1 | When Compliant
#      debug:
#          msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.1.1 |time synchronization is in use - service stop chrony|{{ansible_hostname}}|CHANGE_REQUIRED|False"
#      when:
#          - rhel7cis_time_synchronization == "ntp" and chronyd_service_status.stdout != "loaded"
#  when:
#      - (rhel7cis_rule_2_2_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
#  tags:
#      - level1
#      - patch
#      - rule_2.2.1.1
#      - customcheck
#  check_mode: no

- name: "EVIDENCE | 2.2.1.1 | AFTER | Ensure time synchronization is in use - service install"
  block:
  - name: "EVIDENCE | 2.2.1.1 | AFTER | Ensure time synchronization is in use - service install"
    shell: echo -n "chronyd-is-enabled=";systemctl is-enabled chronyd 2>&1;echo -n "chronyd-status=";systemctl status chronyd 2>&1 | grep Active;echo -n "ntpd-is-enabled=";systemctl is-enabled ntpd 2>&1;echo -n "ntpd-status=";systemctl status ntpd 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_1_1
  - name: Save evidence 2.2.1.1
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.1.1","description":"Ensure time synchronization is in use - service install","before":eb_rhel7cis_rule_2_2_1_1.stdout,"after":ea_rhel7cis_rule_2_2_1_1.stdout,"mode":mode_rhel7cis_rule_2_2_1_1,"status":cis_noncompliant_2_2_1_1_status,"overrides":{"rhel7cis_time_synchronization":rhel7cis_time_synchronization}}] }}'
    when: eb_rhel7cis_rule_2_2_1_1.stdout is defined and ea_rhel7cis_rule_2_2_1_1.stdout is defined
  when:
      - (rhel7cis_rule_2_2_1_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
  tags:
      - level1
      - patch
      - rule_2.2.1.1
      - customcheck
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 2.2.1.2 | BEFORE | Ensure ntp is configured"
  block:
  - name: Initialize facts for 2.2.1.2
    set_fact:
      cis_noncompliant_2_2_1_2_status: Unknown
      cis_noncompliant_2_2_1_2a_status: Unknown
      cis_noncompliant_2_2_1_2b_status: Unknown
      cis_noncompliant_2_2_1_2c_status: Unknown
      mode_rhel7cis_rule_2_2_1_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_1_2|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.1.2 | BEFORE | Ensure ntp is configured"
    shell: grep "^(server|pool)" /etc/ntp.conf;grep ^OPTIONS /etc/sysconfig/ntpd;grep "^ExecStart" /usr/lib/systemd/system/ntpd.service;true
    register: eb_rhel7cis_rule_2_2_1_2
  when:
      - (rhel7cis_rule_2_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)
  tags:
      - level1
      - patch
      - rule_2.2.1.2
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.1.2 | PATCH | Ensure ntp is configured | modify /etc/ntp.conf"
  template:
      src: ntp.conf.j2
      dest: /etc/ntp.conf
      owner: root
      group: root
      mode: 0644
  ignore_errors: yes
  register:  rhel7cis_rule_2_2_1_2a_out
  when:
      - (rhel7cis_rule_2_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)
      - rhel7cis_time_synchronization == "ntp"
  tags:
      - level1
      - patch
      - rule_2.2.1.2
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)) }}"

- name: Display Output SCORED | 2.2.1.2 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.1.2 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.1.2 | ntp is configured modify /etc/ntp.conf|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_2a_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_2a_status: NonCompliant
      when:
          - (rhel7cis_rule_2_2_1_2a_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool))) or (not(rhel7cis_rule_2_2_1_2a_out.changed) and rhel7cis_rule_2_2_1_2a_out.msg is defined and rhel7cis_rule_2_2_1_2a_out.msg is search("Destination .*does not exist"))
    - block:
        - name: Display Output SCORED | 2.2.1.2 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.1.2 | ntp is configured modify /etc/ntp.conf|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_2a_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_2a_status: Compliant
      when:
          - not rhel7cis_rule_2_2_1_2a_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_1|bool)
          - not(rhel7cis_rule_2_2_1_2a_out.msg is defined and rhel7cis_rule_2_2_1_2a_out.msg is search("Destination .*does not exist"))
  when:
      - (rhel7cis_rule_2_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)
      - rhel7cis_time_synchronization == "ntp"
  tags:
      - level1
      - patch
      - rule_2.2.1.2
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.1.2 | PATCH | Ensure ntp is configured | modify /etc/sysconfig/ntpd"
  lineinfile:
      dest: /etc/sysconfig/ntpd
      regexp: "^(#)?OPTIONS"
      line: "OPTIONS=\"-u ntp:ntp\""
  register:  rhel7cis_rule_2_2_1_2b_out
  ignore_errors: yes
  when:
      - (rhel7cis_rule_2_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)
      - rhel7cis_time_synchronization == "ntp"
  tags:
      - level1
      - patch
      - rule_2.2.1.2
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)) }}"

- name: Display Output SCORED | 2.2.1.2 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.1.2 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.1.2 | ntp is configured modify /etc/sysconfig/ntp|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_2b_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_2b_status: NonCompliant
      when:
          - (rhel7cis_rule_2_2_1_2b_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool))) or (not(rhel7cis_rule_2_2_1_2b_out.changed) and rhel7cis_rule_2_2_1_2b_out.msg is defined and rhel7cis_rule_2_2_1_2b_out.msg is search("Destination .*does not exist"))
    - block:
        - name: Display Output SCORED | 2.2.1.2 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.1.2 | ntp is configured modify /etc/sysconfig/ntp|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_2b_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_2b_status: Compliant
      when:
          - not rhel7cis_rule_2_2_1_2b_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)
          - not(rhel7cis_rule_2_2_1_2b_out.msg is defined and rhel7cis_rule_2_2_1_2b_out.msg is search("Destination .*does not exist"))
  when:
      - (rhel7cis_rule_2_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)
      - rhel7cis_time_synchronization == "ntp"
  tags:
      - level1
      - patch
      - rule_2.2.1.2
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.1.2 | PATCH | Ensure ntp is configured | modify /usr/lib/systemd/system/ntpd.service"
  lineinfile:
      dest: /usr/lib/systemd/system/ntpd.service
      regexp: "^(#)?ExecStart"
      line: "ExecStart=/usr/sbin/ntpd -u ntp:ntp $OPTIONS"
  ignore_errors: yes
  register:  rhel7cis_rule_2_2_1_2c_out
  when:
      - (rhel7cis_rule_2_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)
      - rhel7cis_time_synchronization == "ntp"
  tags:
      - level1
      - patch
      - rule_2.2.1.2
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)) }}"

- name: Display Output SCORED | 2.2.1.2 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.1.2 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.1.2 |ntp is configured modify /usr/lib/systemd/system/ntpd.service|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_2c_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_2c_status: NonCompliant
      when:
          - (rhel7cis_rule_2_2_1_2c_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool))) or (not(rhel7cis_rule_2_2_1_2c_out.changed) and rhel7cis_rule_2_2_1_2c_out.msg is defined and rhel7cis_rule_2_2_1_2c_out.msg is search("Destination .*does not exist"))
    - block:
        - name: Display Output SCORED | 2.2.1.2 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.1.2 |ntp is configured modify /usr/lib/systemd/system/ntpd.service|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_2c_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_2c_status: Compliant
      when:
          - not rhel7cis_rule_2_2_1_2c_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)
          - not(rhel7cis_rule_2_2_1_2c_out.msg is defined and rhel7cis_rule_2_2_1_2c_out.msg is search("Destination .*does not exist"))
  when:
      - (rhel7cis_rule_2_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)
      - rhel7cis_time_synchronization == "ntp"
  tags:
      - level1
      - patch
      - rule_2.2.1.2
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.1.2 | AFTER | Ensure ntp is configured"
  block:
  - name: "EVIDENCE | 2.2.1.2 | AFTER | Ensure ntp is configured"
    set_fact:
      cis_noncompliant_status: true
      cis_noncompliant_2_2_1_2_status: NonCompliant
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.1.2"] }}'
    when:
      - not(cis_noncompliant_2_2_1_2c_status=="Compliant") or not(cis_noncompliant_2_2_1_2b_status=="Compliant") or not(cis_noncompliant_2_2_1_2a_status=="Compliant")
  - name: "set_fact 2.2.1.2 Compliant"
    set_fact:
      cis_noncompliant_2_2_1_2_status: Compliant
    when:
      - cis_noncompliant_2_2_1_2c_status=="Compliant" and cis_noncompliant_2_2_1_2b_status=="Compliant" and cis_noncompliant_2_2_1_2a_status=="Compliant"
  - name: "Collect evidence 2.2.1.2"
    shell: grep "^\(server\|pool\)" /etc/ntp.conf;grep ^OPTIONS /etc/sysconfig/ntpd;grep "^ExecStart" /usr/lib/systemd/system/ntpd.service;true
    register: ea_rhel7cis_rule_2_2_1_2
  - name: "Save evidence 2.2.1.2"
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.1.2","description":"Ensure ntp is configured","before":eb_rhel7cis_rule_2_2_1_2.stdout,"after":ea_rhel7cis_rule_2_2_1_2.stdout,"mode":mode_rhel7cis_rule_2_2_1_2,"status":cis_noncompliant_2_2_1_2_status}] }}'
    when: eb_rhel7cis_rule_2_2_1_2.stdout is defined and ea_rhel7cis_rule_2_2_1_2.stdout is defined
  when:
      - (rhel7cis_rule_2_2_1_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_2|bool)
  tags:
      - level1
      - patch
      - rule_2.2.1.2
      - customcheck
  check_mode: no
#*********************************************************************************
- name: "EVIDENCE | 2.2.1.3 | BEFORE | Ensure chrony is configured"
  block:
  - name: Initialize facts for 2.2.1.3
    set_fact:
      cis_noncompliant_2_2_1_3_status: Unknown
      cis_noncompliant_2_2_1_3a_status: Unknown
      cis_noncompliant_2_2_1_3b_status: Unknown
      mode_rhel7cis_rule_2_2_1_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_1_3|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.1.3 | BEFORE | Ensure chrony is configured"
    shell: grep "^\(server\|pool\)" /etc/chrony.conf;grep ^OPTIONS /etc/sysconfig/chronyd;true
    register: eb_rhel7cis_rule_2_2_1_3
  when:
      - (rhel7cis_rule_2_2_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool)
  tags:
      - level1
      - patch
      - rule_2.2.1.3
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.1.3 | PATCH | Ensure chrony is configured"
  template:
      src: chrony.conf.j2
      dest: /etc/chrony.conf
      owner: root
      group: root
      mode: 0644
  ignore_errors: yes
  register:  rhel7cis_rule_2_2_1_3a_out
  when:
      - (rhel7cis_rule_2_2_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool)
      - rhel7cis_time_synchronization == "chrony"
  tags:
      - level1
      - patch
      - rule_2.2.1.3
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool)) }}"

- name: Display Output SCORED | 2.2.1.3 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.1.3 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.1.3 |chrony is configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_3a_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_3a_status: NonCompliant
      when:
          - (rhel7cis_rule_2_2_1_3a_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool))) or (not(rhel7cis_rule_2_2_1_3a_out.changed) and rhel7cis_rule_2_2_1_3a_out.msg is defined and rhel7cis_rule_2_2_1_3a_out.msg is search("Destination .*does not exist"))
    - block:
        - name: Display Output SCORED | 2.2.1.3 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.1.3 |chrony is configured|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_3a_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_3a_status: Compliant
      when:
          - not rhel7cis_rule_2_2_1_3a_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool)
          - not(rhel7cis_rule_2_2_1_3a_out.msg is defined and rhel7cis_rule_2_2_1_3a_out.msg is search("Destination .*does not exist"))
  when:
      - (rhel7cis_rule_2_2_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool)
      - rhel7cis_time_synchronization == "chrony"
  tags:
      - level1
      - patch
      - rule_2.2.1.3
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.1.3 | PATCH | Ensure chrony is configured | modify /etc/sysconfig/chronyd | 1"
  lineinfile:
      dest: /etc/sysconfig/chronyd
      regexp: "^(#)?OPTIONS"
      line: "OPTIONS=\"-u chrony\""
      state: present
      create: yes
  ignore_errors: yes
  register:  rhel7cis_rule_2_2_1_3b_out
  when:
      - (rhel7cis_rule_2_2_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool)
      - rhel7cis_time_synchronization == "chrony"
  tags:
      - level1
      - patch
      - rule_2.2.1.3
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool)) }}"

- name: Display Output SCORED | 2.2.1.3 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.1.3 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.1.3 |chrony is configured modify /etc/sysconfig/chronyd|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_3b_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_3b_status: NonCompliant
      when:
          - (rhel7cis_rule_2_2_1_3b_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool))) or (not(rhel7cis_rule_2_2_1_3b_out.changed) and rhel7cis_rule_2_2_1_3b_out.msg is defined and rhel7cis_rule_2_2_1_3b_out.msg is search("Destination .*does not exist"))
    - block:
        - name: Display Output SCORED | 2.2.1.3 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.1.3 |chrony is configured modify /etc/sysconfig/chronyd|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_1_3b_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_1_3b_status: Compliant
      when:
          - not rhel7cis_rule_2_2_1_3b_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool)
          - not(rhel7cis_rule_2_2_1_3b_out.msg is defined and rhel7cis_rule_2_2_1_3b_out.msg is search("Destination .*does not exist"))
  when:
      - (rhel7cis_rule_2_2_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool)
      - rhel7cis_time_synchronization == "chrony"
  tags:
      - level1
      - patch
      - rule_2.2.1.3
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.1.3 | AFTER | Ensure chrony is configured"
  block:
  - name: "set_fact 2.2.1.3 NonCompliant"
    set_fact:
      cis_noncompliant_status: true
      cis_noncompliant_2_2_1_3_status: NonCompliant
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.1.3"] }}'
    when:
      - not(cis_noncompliant_2_2_1_3b_status=="Compliant") or not(cis_noncompliant_2_2_1_3a_status=="Compliant")
  - name: "set_fact 2.2.1.3 Compliant"
    set_fact:
      cis_noncompliant_2_2_1_3_status: Compliant
    when:
      - cis_noncompliant_2_2_1_3b_status=="Compliant" and cis_noncompliant_2_2_1_3a_status=="Compliant"
  - name: "EVIDENCE | 2.2.1.3 | AFTER | Ensure chrony is configured"
    shell: grep "^\(server\|pool\)" /etc/chrony.conf;grep ^OPTIONS /etc/sysconfig/chronyd;true
    register: ea_rhel7cis_rule_2_2_1_3
  - name: "Save evidence 2.2.1.3"
    set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.1.3","description":"Ensure chrony is configured","before":eb_rhel7cis_rule_2_2_1_3.stdout,"after":ea_rhel7cis_rule_2_2_1_3.stdout,"mode":mode_rhel7cis_rule_2_2_1_3,"status":cis_noncompliant_2_2_1_3_status}] }}'
    when: eb_rhel7cis_rule_2_2_1_3.stdout is defined and ea_rhel7cis_rule_2_2_1_3.stdout is defined
  when:
      - (rhel7cis_rule_2_2_1_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_1_3|bool)
  tags:
      - level1
      - patch
      - rule_2.2.1.3
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_2: true
  when:
      - not rhel7cis_xwindows_required and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.2 | BEFORE | Ensure X Window System is not installed"
  block:
  - name: Initialize facts for 2.2.2
    set_fact:
      cis_noncompliant_2_2_2_status: Unknown
      mode_rhel7cis_rule_2_2_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_2|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.2 | BEFORE | Ensure X Window System is not installed"
    shell: echo "rpm -qa xorg-x11*|wc -l";(rpm -qa xorg-x11*|wc -l) || true
    args:
      warn: no
    register: eb_rhel7cis_rule_2_2_2
  when:
      - (rhel7cis_rule_2_2_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_2|bool)
  tags:
      - level1
      - patch
      - rule_2.2.2
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.2 | PATCH | Ensure X Window System is not installed"
  yum:
      name: ["@X Window System","xorg-x11*"]
      state: absent
  register:  rhel7cis_rule_2_2_2_out
  when:
      - (rhel7cis_rule_2_2_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_2|bool)
  tags:
      - level1
      - scored
      - xwindows
      - patch
      - rule_2.2.2
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_2|bool)) }}"

- name: Display Output SCORED | 2.2.2 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.2 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.2 |X Window System is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_2_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_2_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.2"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rhel7cis_rule_2_2_2_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_2|bool))
    - block:
        - name: Display Output SCORED | 2.2.2 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.2 |X Window System is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_2_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_2_status: Compliant
      when:
          - not rhel7cis_rule_2_2_2_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_2|bool)
  when:
      - (rhel7cis_rule_2_2_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_2|bool)
  tags:
      - level1
      - scored
      - xwindows
      - patch
      - rule_2.2.2
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.2 | AFTER | Ensure X Window System is not installed"
  block:
  - name: "EVIDENCE | 2.2.2 | AFTER | Ensure X Window System is not installed"
    shell: echo "rpm -qa xorg-x11*|wc -l";(rpm -qa xorg-x11*|wc -l) || true
    args:
      warn: no
    register: ea_rhel7cis_rule_2_2_2
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.2","description":"Ensure X Window System is not installed","before":eb_rhel7cis_rule_2_2_2.stdout,"after":ea_rhel7cis_rule_2_2_2.stdout,"mode":mode_rhel7cis_rule_2_2_2,"status":cis_noncompliant_2_2_2_status}] }}'
    when: eb_rhel7cis_rule_2_2_2.stdout is defined and ea_rhel7cis_rule_2_2_2.stdout is defined
  when:
      - (rhel7cis_rule_2_2_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_2|bool)
  tags:
      - level1
      - patch
      - rule_2.2.2
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_3: true
  when:
      - (rhel7cis_avahi_server == false) and (avahi_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.3 | BEFORE | Ensure Avahi Server is not enabled"
  block:
  - name: Initialize facts for 2.2.3
    set_fact:
      cis_noncompliant_2_2_3_status: Unknown
      mode_rhel7cis_rule_2_2_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_3|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.3 | BEFORE | Ensure Avahi Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled avahi-daemon 2>&1;echo -n "status=";systemctl status avahi-daemon 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_3
  when:
      - (rhel7cis_rule_2_2_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_3|bool)
  tags:
      - level1
      - scored
      - avahi
      - services
      - patch
      - rule_2.2.3
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.3 | PATCH | Ensure Avahi Server is not enabled"
  service:
      name: avahi-daemon
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_3_out
  when:
      - (rhel7cis_rule_2_2_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_3|bool)
      - avahi_service_status.stdout == "loaded"
  tags:
      - level1
      - scored
      - avahi
      - services
      - patch
      - rule_2.2.3
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_3|bool)) }}"

- name: Display Output SCORED | 2.2.3 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.3 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.3 |Avahi Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_3_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.3"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - avahi_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_3_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_3|bool))
          - not(rhel7cis_rule_2_2_3_out.msg is defined and rhel7cis_rule_2_2_3_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.3 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.3 |Avahi Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_3_status: Compliant
      when:
          - avahi_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_3_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_3|bool) or (rhel7cis_rule_2_2_3_out.changed and rhel7cis_rule_2_2_3_out.msg is defined and rhel7cis_rule_2_2_3_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_3|bool)
  tags:
      - level1
      - scored
      - avahi
      - services
      - patch
      - rule_2.2.3
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.3 | AFTER | Ensure Avahi Server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.3 | AFTER | Ensure Avahi Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled avahi-daemon 2>&1;echo -n "status=";systemctl status avahi-daemon 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_3
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.3","description":"Ensure Avahi Server is not enabled","before":eb_rhel7cis_rule_2_2_3.stdout,"after":ea_rhel7cis_rule_2_2_3.stdout,"mode":mode_rhel7cis_rule_2_2_3,"status":cis_noncompliant_2_2_3_status}] }}'
    when: eb_rhel7cis_rule_2_2_3.stdout is defined and ea_rhel7cis_rule_2_2_3.stdout is defined
  when:
      - (rhel7cis_rule_2_2_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_3|bool)
  tags:
      - level1
      - scored
      - avahi
      - services
      - patch
      - rule_2.2.3
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_4: true
  when:
      - (rhel7cis_cups_server == false and cups_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.4 | BEFORE | Ensure CUPS is not enabled"
  block:
  - name: Initialize facts for 2.2.4
    set_fact:
      cis_noncompliant_2_2_4_status: Unknown
      mode_rhel7cis_rule_2_2_4: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_4|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.4 | BEFORE | Ensure CUPS is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled cups 2>&1;echo -n "status=";systemctl status cups 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_4
  when:
      - (rhel7cis_rule_2_2_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_4|bool)
  tags:
      - level1
      - scored
      - cups
      - services
      - patch
      - rule_2.2.4
      - customcheck
  check_mode: no

- name: check cups_service_status
  debug:
    msg: "{{ cups_service_status.stdout }}"

- name: "SCORED | 2.2.4 | PATCH | Ensure CUPS is not enabled"
  service:
      name: cups
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_4_out
  when:
      - (rhel7cis_rule_2_2_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_4|bool)
      - cups_service_status.stdout == "loaded"
  tags:
      - level1
      - scored
      - cups
      - services
      - patch
      - rule_2.2.4
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_4|bool)) }}"

- name: Display Output SCORED | 2.2.4 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.4 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.4 |CUPS is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_4_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.4"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - cups_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_4_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_4|bool))
          - not(rhel7cis_rule_2_2_4_out.msg is defined and rhel7cis_rule_2_2_4_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.4 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.4 |CUPS is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_4_status: Compliant
      when:
          - cups_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_4_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_4|bool) or (rhel7cis_rule_2_2_4_out.changed and rhel7cis_rule_2_2_4_out.msg is defined and rhel7cis_rule_2_2_4_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_4|bool)
  tags:
      - level1
      - scored
      - cups
      - services
      - patch
      - rule_2.2.4
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.4 | AFTER | Ensure CUPS is not enabled"
  block:
  - name: "EVIDENCE | 2.2.4 | AFTER | Ensure CUPS is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled cups 2>&1;echo -n "status=";systemctl status cups 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_4
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.4","description":"Ensure CUPS is not enabled","before":eb_rhel7cis_rule_2_2_4.stdout,"after":ea_rhel7cis_rule_2_2_4.stdout,"mode":mode_rhel7cis_rule_2_2_4,"status":cis_noncompliant_2_2_4_status}] }}'
    when: eb_rhel7cis_rule_2_2_4.stdout is defined and ea_rhel7cis_rule_2_2_4.stdout is defined
  when:
      - (rhel7cis_rule_2_2_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_4|bool)
  tags:
      - level1
      - scored
      - cups
      - services
      - patch
      - rule_2.2.4
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_5: true
  when:
      - (rhel7cis_dhcp_server == false and dhcpd_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.5 | BEFORE | Ensure DHCP Server is not enabled"
  block:
  - name: Initialize facts for 2.2.5
    set_fact:
      cis_noncompliant_2_2_5_status: Unknown
      mode_rhel7cis_rule_2_2_5: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_5|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.5 | BEFORE | Ensure DHCP Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled dhcpd 2>&1;echo -n "status=";systemctl status dhcpd 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_5
  when:
      - (rhel7cis_rule_2_2_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_5|bool)
  tags:
      - level1
      - scored
      - dhcp
      - services
      - patch
      - rule_2.2.5
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.5 | PATCH | Ensure DHCP Server is not enabled"
  service:
      name: dhcpd
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_5_out
  when:
      - (rhel7cis_rule_2_2_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_5|bool)
      - dhcpd_service_status.stdout == "loaded"
  tags:
      - level1
      - scored
      - dhcp
      - services
      - patch
      - rule_2.2.5
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_5|bool)) }}"

- name: Display Output SCORED | 2.2.5 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.5 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.5 |DHCP Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_5_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.5"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - dhcpd_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_5_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_5|bool))
          - not(rhel7cis_rule_2_2_5_out.msg is defined and rhel7cis_rule_2_2_5_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.5 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.5 |DHCP Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_5_status: Compliant
      when:
          - dhcpd_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_5_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_5|bool) or (rhel7cis_rule_2_2_5_out.changed and rhel7cis_rule_2_2_5_out.msg is defined and rhel7cis_rule_2_2_5_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_5|bool)
  tags:
      - level1
      - scored
      - dhcp
      - services
      - patch
      - rule_2.2.5
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.5 | AFTER | Ensure DHCP Server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.5 | AFTER | Ensure DHCP Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled dhcpd 2>&1;echo -n "status=";systemctl status dhcpd 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_5
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.5","description":"Ensure DHCP Server is not enabled","before":eb_rhel7cis_rule_2_2_5.stdout,"after":ea_rhel7cis_rule_2_2_5.stdout,"mode":mode_rhel7cis_rule_2_2_5,"status":cis_noncompliant_2_2_5_status}] }}'
    when: eb_rhel7cis_rule_2_2_5.stdout is defined and ea_rhel7cis_rule_2_2_5.stdout is defined
  when:
      - (rhel7cis_rule_2_2_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_5|bool)
  tags:
      - level1
      - scored
      - dhcp
      - services
      - patch
      - rule_2.2.5
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_6: true
  when:
      - (rhel7cis_ldap_server == false and slapd_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.6 | BEFORE | Ensure LDAP server is not enabled"
  block:
  - name: Initialize facts for 2.2.6
    set_fact:
      cis_noncompliant_2_2_6_status: Unknown
      mode_rhel7cis_rule_2_2_6: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_6|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.6 | BEFORE | Ensure LDAP server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled slapd 2>&1;echo -n "status=";systemctl status slapd 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_6
  when:
      - (rhel7cis_rule_2_2_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_6|bool)
  tags:
      - level1
      - scored
      - ldap
      - services
      - patch
      - rule_2.2.6
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.6 | PATCH | Ensure LDAP server is not enabled"
  service:
      name: slapd
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_6_out
  when:
      - (rhel7cis_rule_2_2_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_6|bool)
      - slapd_service_status.stdout == "loaded"
  tags:
      - level1
      - scored
      - ldap
      - services
      - patch
      - rule_2.2.6
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_6|bool)) }}"

- name: Display Output SCORED | 2.2.6 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.6 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.6 |LDAP server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_6_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.6"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - slapd_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_6_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_6|bool))
          - not(rhel7cis_rule_2_2_6_out.msg is defined and rhel7cis_rule_2_2_6_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.6 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.6 |LDAP server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_6_status: Compliant
      when:
          - slapd_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_6_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_6|bool) or (rhel7cis_rule_2_2_6_out.changed and rhel7cis_rule_2_2_6_out.msg is defined and rhel7cis_rule_2_2_6_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_6|bool)
  tags:
      - level1
      - scored
      - ldap
      - services
      - patch
      - rule_2.2.6
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.6 | AFTER | Ensure LDAP server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.6 | AFTER | Ensure LDAP server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled slapd 2>&1;echo -n "status=";systemctl status slapd 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_6
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.6","description":"Ensure LDAP server is not enabled","before":eb_rhel7cis_rule_2_2_6.stdout,"after":ea_rhel7cis_rule_2_2_6.stdout,"mode":mode_rhel7cis_rule_2_2_6,"status":cis_noncompliant_2_2_6_status}] }}'
    when: eb_rhel7cis_rule_2_2_6.stdout is defined and ea_rhel7cis_rule_2_2_6.stdout is defined
  when:
      - (rhel7cis_rule_2_2_6|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_6|bool)
  tags:
      - level1
      - scored
      - ldap
      - services
      - patch
      - rule_2.2.6
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_7: true 
  when:
      - (rhel7cis_nfs_rpc_server == false and nfs_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.7 | BEFORE | Ensure NFS and RPC are not enabled"
  block:
  - name: Initialize facts for 2.2.7
    set_fact:
      cis_noncompliant_2_2_7_nfs_status: Unknown
      cis_noncompliant_2_2_7_rpc_status: Unknown
      cis_noncompliant_2_2_7_status: Unknown
      mode_rhel7cis_rule_2_2_7: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_7|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.7 | BEFORE | Ensure NFS and RPC are not enabled"
    shell: echo -n "nfs-is-enabled=";systemctl is-enabled nfs 2>&1;echo -n "nfs-status=";systemctl status nfs 2>&1 | grep Active;echo -n "rpcbind-is-enabled=";systemctl is-enabled rpcbind 2>&1;echo -n "rpcbind-status=";systemctl status rpcbind 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_7
  when:
      - (rhel7cis_rule_2_2_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool)
  tags:
      - level1
      - scored
      - nfs
      - rpc
      - services
      - patch
      - rule_2.2.7
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.7 | PATCH | Ensure NFS and RPC are not enabled"
  service:
      name: nfs
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_7_out
  when:
      - (rhel7cis_rule_2_2_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool)
      - nfs_service_status.stdout == "loaded"
  tags:
      - level1
      - scored
      - nfs
      - rpc
      - services
      - patch
      - rule_2.2.7
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool)) }}"

- name: Display Output SCORED | 2.2.7 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.7 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.7 |NFS and RPC are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_7_nfs_status: NonCompliant
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - nfs_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_7_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool))
          - not(rhel7cis_rule_2_2_7_out.msg is defined and rhel7cis_rule_2_2_7_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.7 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.7 |NFS and RPC are not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_7_nfs_status: Compliant
      when:
          - nfs_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_7_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool) or (rhel7cis_rule_2_2_7_out.changed and rhel7cis_rule_2_2_7_out.msg is defined and rhel7cis_rule_2_2_5_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool)
  tags:
      - level1
      - scored
      - nfs
      - rpc
      - services
      - patch
      - rule_2.2.7
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.7 | PATCH | Ensure RPC is not enabled"
  service:
      name: rpcbind
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_7_out
  when:
      - (rhel7cis_rule_2_2_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool)
      - rpcbind_service_status.stdout == "loaded"
  tags:
      - level1
      - scored
      - nfs
      - rpc
      - services
      - patch
      - rule_2.2.7
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool)) }}"

- name: Display Output SCORED | 2.2.7 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.7 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.7 |RPC is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_7_rpc_status: NonCompliant
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rpcbind_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_7_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool))
          - not(rhel7cis_rule_2_2_7_out.msg is defined and rhel7cis_rule_2_2_7_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.7 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.7 |RPC is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_7_rpc_status: Compliant
      when:
          - rpcbind_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_7_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool) or (rhel7cis_rule_2_2_7_out.changed and rhel7cis_rule_2_2_7_out.msg is defined and rhel7cis_rule_2_2_7_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool)
  tags:
      - level1
      - scored
      - nfs
      - rpc
      - services
      - patch
      - rule_2.2.7
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.7 | AFTER | Ensure NFS and RPC are not enabled"
  block:
  - set_fact:
      cis_noncompliant_status: true
      cis_noncompliant_2_2_7_status: NonCompliant
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.7"] }}'
    when: not(cis_noncompliant_2_2_7_nfs_status=="Compliant") or not(cis_noncompliant_2_2_7_rpc_status=="Compliant")
  - set_fact:
      cis_noncompliant_2_2_7_status: Compliant
    when: cis_noncompliant_2_2_7_nfs_status=="Compliant" and cis_noncompliant_2_2_7_rpc_status=="Compliant"
  - name: "EVIDENCE | 2.2.7 | AFTER | Ensure NFS and RPC are not enabled"
    shell: echo -n "nfs-is-enabled=";systemctl is-enabled nfs 2>&1;echo -n "nfs-status=";systemctl status nfs 2>&1 | grep Active;echo -n "rpcbind-is-enabled=";systemctl is-enabled rpcbind 2>&1;echo -n "rpcbind-status=";systemctl status rpcbind 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_7
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.7","description":"Ensure NFS and RPC are not enabled","before":eb_rhel7cis_rule_2_2_7.stdout,"after":ea_rhel7cis_rule_2_2_7.stdout,"mode":mode_rhel7cis_rule_2_2_7,"status":cis_noncompliant_2_2_7_status}] }}'
    when: eb_rhel7cis_rule_2_2_7.stdout is defined and ea_rhel7cis_rule_2_2_7.stdout is defined
  when:
      - (rhel7cis_rule_2_2_7|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_7|bool)
  tags:
      - level1
      - scored
      - nfs
      - rpc
      - services
      - patch
      - rule_2.2.7
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_8: true
  when:
      - (rhel7cis_named_server == false and named_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.8 | BEFORE | Ensure DNS Server is not enabled"
  block:
  - name: Initialize facts for 2.2.8
    set_fact:
      cis_noncompliant_2_2_8_status: Unknown
      mode_rhel7cis_rule_2_2_8: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_8|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.8 | BEFORE | Ensure DNS Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled named 2>&1;echo -n "status=";systemctl status named 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_8
  when:
      - (rhel7cis_rule_2_2_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_8|bool)
  tags:
      - level1
      - patch
      - rule_2.2.8
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.8 | PATCH | Ensure DNS Server is not enabled"
  service:
      name: named
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_8_out
  when:
      - (rhel7cis_rule_2_2_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_8|bool)
      - named_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.8
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_8|bool)) }}"

- name: Display Output SCORED | 2.2.8 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.8 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.8 |DNS Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_8_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.8"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - named_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_8_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_8|bool))
          - not(rhel7cis_rule_2_2_8_out.msg is defined and rhel7cis_rule_2_2_8_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.8 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.8 |DNS Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_8_status: Compliant
      when:
          - named_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_8_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_8|bool) or (rhel7cis_rule_2_2_8_out.changed and rhel7cis_rule_2_2_8_out.msg is defined and rhel7cis_rule_2_2_8_out.msg is search("Service.*not found on host, assuming it will exist on full run")) 
  when:
      - (rhel7cis_rule_2_2_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_8|bool)
  tags:
      - level1
      - patch
      - rule_2.2.8
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.8 | AFTER | Ensure DNS Server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.8 | AFTER | Ensure DNS Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled named 2>&1;echo -n "status=";systemctl status named 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_8
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.8","description":"Ensure DNS Server is not enabled","before":eb_rhel7cis_rule_2_2_8.stdout,"after":ea_rhel7cis_rule_2_2_8.stdout,"mode":mode_rhel7cis_rule_2_2_8,"status":cis_noncompliant_2_2_8_status}] }}'
    when: eb_rhel7cis_rule_2_2_8.stdout is defined and ea_rhel7cis_rule_2_2_8.stdout is defined
  when:
      - (rhel7cis_rule_2_2_8|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_8|bool)
  tags:
      - level1
      - patch
      - rule_2.2.8
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_9: true
  when:
      - (rhel7cis_vsftpd_server == false and vsftpd_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.9 | BEFORE | Ensure FTP Server is not enabled"
  block:
  - name: Initialize facts for 2.2.9
    set_fact:
      cis_noncompliant_2_2_9_status: Unknown
      mode_rhel7cis_rule_2_2_9: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_9|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.9 | BEFORE | Ensure FTP Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled vsftpd 2>&1;echo -n "status=";systemctl status vsftpd 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_9
  when:
      - (rhel7cis_rule_2_2_9|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_9|bool)
  tags:
      - level1
      - patch
      - rule_2.2.9
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.9 | PATCH | Ensure FTP Server is not enabled"
  service:
      name: vsftpd
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_9_out
  when:
      - (rhel7cis_rule_2_2_9|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_9|bool)
      - vsftpd_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.9
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_9|bool)) }}"

- name: Display Output SCORED | 2.2.9 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.9 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.9 |FTP Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_9_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.9"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - vsftpd_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_9_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_9|bool))
          - not(rhel7cis_rule_2_2_9_out.msg is defined and rhel7cis_rule_2_2_9_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.9 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.9 |FTP Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_9_status: Compliant
      when:
          - vsftpd_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_9_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_9|bool) or (rhel7cis_rule_2_2_9_out.changed and rhel7cis_rule_2_2_9_out.msg is defined and rhel7cis_rule_2_2_9_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_9|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_9|bool)
  tags:
      - level1
      - patch
      - rule_2.2.9
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.9 | AFTER | Ensure FTP Server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.9 | AFTER | Ensure FTP Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled vsftpd 2>&1;echo -n "status=";systemctl status vsftpd 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_9
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.9","description":"Ensure FTP Server is not enabled","before":eb_rhel7cis_rule_2_2_9.stdout,"after":ea_rhel7cis_rule_2_2_9.stdout,"mode":mode_rhel7cis_rule_2_2_9,"status":cis_noncompliant_2_2_9_status}] }}'
    when: eb_rhel7cis_rule_2_2_9.stdout is defined and ea_rhel7cis_rule_2_2_9.stdout is defined
  when:
      - (rhel7cis_rule_2_2_9|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_9|bool)
  tags:
      - level1
      - patch
      - rule_2.2.9
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_10: true
  when:
      - (rhel7cis_httpd_server == false and httpd_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.10 | BEFORE | Ensure HTTP server is not enabled"
  block:
  - name: Initialize facts for 2.2.10
    set_fact:
      cis_noncompliant_2_2_10_status: Unknown
      mode_rhel7cis_rule_2_2_10: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_10|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.10 | BEFORE | Ensure HTTP server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled httpd 2>&1;echo -n "status=";systemctl status httpd 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_10
  when:
      - (rhel7cis_rule_2_2_10|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_10|bool)
  tags:
      - level1
      - patch
      - rule_2.2.10
  check_mode: no

- name: "SCORED | 2.2.10 | PATCH | Ensure HTTP server is not enabled"
  service:
      name: httpd
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_10_out
  when:
      - (rhel7cis_rule_2_2_10|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_10|bool)
      - httpd_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.10
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_10|bool)) }}"

- name: Display Output SCORED | 2.2.10 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.10 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.10 |HTTP server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_10_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.10"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - httpd_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_10_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_10|bool))
          - not(rhel7cis_rule_2_2_10_out.msg is defined and rhel7cis_rule_2_2_10_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.10 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.10 |HTTP server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_10_status: Compliant
      when:
          - httpd_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_10_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_10|bool) or (rhel7cis_rule_2_2_10_out.changed and rhel7cis_rule_2_2_10_out.msg is defined and rhel7cis_rule_2_2_10_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_10|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_10|bool)
  tags:
      - level1
      - patch
      - rule_2.2.10
  check_mode: no

- name: "EVIDENCE | 2.2.10 | AFTER | Ensure HTTP server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.10 | AFTER | Ensure HTTP server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled httpd 2>&1;echo -n "status=";systemctl status httpd 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_10
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.10","description":"Ensure HTTP server is not enabled","before":eb_rhel7cis_rule_2_2_10.stdout,"after":ea_rhel7cis_rule_2_2_10.stdout,"mode":mode_rhel7cis_rule_2_2_10,"status":cis_noncompliant_2_2_10_status}] }}'
    when: eb_rhel7cis_rule_2_2_10.stdout is defined and ea_rhel7cis_rule_2_2_10.stdout is defined
  when:
      - (rhel7cis_rule_2_2_10|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_10|bool)
  tags:
      - level1
      - patch
      - rule_2.2.10
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_11: true
  when:
      - (rhel7cis_dovecot_server == false and dovecot_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.11 | BEFORE | Ensure IMAP and POP3 server is not enabled"
  block:
  - name: Initialize facts for 2.2.11
    set_fact:
      cis_noncompliant_2_2_11_status: Unknown
      mode_rhel7cis_rule_2_2_11: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_11|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.11 | BEFORE | Ensure IMAP and POP3 server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled dovecot 2>&1;echo -n "status=";systemctl status dovecot 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_11
  when:
      - (rhel7cis_rule_2_2_11|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_11|bool)
  tags:
      - level1
      - patch
      - rule_2.2.11
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.11 | PATCH | Ensure IMAP and POP3 server is not enabled"
  service:
      name: dovecot
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_11_out
  when:
      - (rhel7cis_rule_2_2_11|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_11|bool)
      - dovecot_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.11
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_11|bool)) }}"

- name: Display Output SCORED | 2.2.11 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.11 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.11 |IMAP and POP3 server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_11_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.11"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - dovecot_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_11_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_11|bool))
          - not(rhel7cis_rule_2_2_11_out.msg is defined and rhel7cis_rule_2_2_11_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.11 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.11 |IMAP and POP3 server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_11_status: Compliant
      when:
          - dovecot_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_11_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_11|bool) or (rhel7cis_rule_2_2_11_out.changed and rhel7cis_rule_2_2_11_out.msg is defined and rhel7cis_rule_2_2_11_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_11|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_11|bool)
  tags:
      - level1
      - patch
      - rule_2.2.11
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.11 | AFTER | Ensure IMAP and POP3 server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.11 | AFTER | Ensure IMAP and POP3 server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled dovecot 2>&1;echo -n "status=";systemctl status dovecot 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_11
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.11","description":"Ensure IMAP and POP3 server is not enabled","before":eb_rhel7cis_rule_2_2_11.stdout,"after":ea_rhel7cis_rule_2_2_11.stdout,"mode":mode_rhel7cis_rule_2_2_11,"status":cis_noncompliant_2_2_11_status}] }}'
    when: eb_rhel7cis_rule_2_2_11.stdout is defined and ea_rhel7cis_rule_2_2_11.stdout is defined
  when:
      - (rhel7cis_rule_2_2_11|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_11|bool)
  tags:
      - level1
      - patch
      - rule_2.2.11
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_12: true
  when:
      - (rhel7cis_smb_server == false and smb_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.12 | BEFORE | Ensure Samba is not enabled"
  block:
  - name: Initialize facts for 2.2.12
    set_fact:
      cis_noncompliant_2_2_12_status: Unknown
      mode_rhel7cis_rule_2_2_12: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_12|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.12 | BEFORE | Ensure Samba is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled smb 2>&1;echo -n "status=";systemctl status smb 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_12
  when:
      - (rhel7cis_rule_2_2_12|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_12|bool)
  tags:
      - level1
      - patch
      - rule_2.2.12
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.12 | PATCH | Ensure Samba is not enabled"
  service:
      name: smb
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_12_out
  when:
      - (rhel7cis_rule_2_2_12|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_12|bool)
      - smb_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.12
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_12|bool)) }}"

- name: Display Output SCORED | 2.2.12 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.12 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.12 |Samba is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_12_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.12"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - smb_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_12_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_12|bool))
          - not(rhel7cis_rule_2_2_12_out.msg is defined and rhel7cis_rule_2_2_12_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.12 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.12 |Samba is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_12_status: Compliant
      when:
          - smb_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_12_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_12|bool) or (rhel7cis_rule_2_2_12_out.changed and rhel7cis_rule_2_2_12_out.msg is defined and rhel7cis_rule_2_2_12_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_12|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_12|bool)
  tags:
      - level1
      - patch
      - rule_2.2.12
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.12 | AFTER | Ensure Samba is not enabled"
  block:
  - name: "EVIDENCE | 2.2.12 | AFTER | Ensure Samba is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled smb 2>&1;echo -n "status=";systemctl status smb 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_12
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.12","description":"Ensure Samba is not enabled","before":eb_rhel7cis_rule_2_2_12.stdout,"after":ea_rhel7cis_rule_2_2_12.stdout,"mode":mode_rhel7cis_rule_2_2_12,"status":cis_noncompliant_2_2_12_status}] }}'
    when: eb_rhel7cis_rule_2_2_12.stdout is defined and ea_rhel7cis_rule_2_2_12.stdout is defined
  when:
      - (rhel7cis_rule_2_2_12|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_12|bool)
  tags:
      - level1
      - patch
      - rule_2.2.12
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_13: true
  when:
      - (rhel7cis_smb_server == false and smb_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.13 | BEFORE | Ensure HTTP Proxy Server is not enabled"
  block:
  - name: Initialize facts for 2.2.13
    set_fact:
      cis_noncompliant_2_2_13_status: Unknown
      mode_rhel7cis_rule_2_2_13: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_13|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.13 | BEFORE | Ensure HTTP Proxy Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled squid 2>&1;echo -n "status=";systemctl status squid 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_13
  when:
      - (rhel7cis_rule_2_2_13|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_13|bool)
  tags:
      - level1
      - patch
      - rule_2.2.13
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.13 | PATCH | Ensure HTTP Proxy Server is not enabled"
  service:
      name: squid
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_13_out
  when:
      - (rhel7cis_rule_2_2_13|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_13|bool)
      - smb_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.13
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_13|bool)) }}"

- name: Display Output SCORED | 2.2.13 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.13 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.13 |HTTP Proxy Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_13_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.13"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - smb_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_13_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_13|bool))
          - not(rhel7cis_rule_2_2_13_out.msg is defined and rhel7cis_rule_2_2_13_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.13 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.13 |HTTP Proxy Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_13_status: Compliant
      when:
          - smb_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_13_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_13|bool) or (rhel7cis_rule_2_2_13_out.changed and rhel7cis_rule_2_2_13_out.msg is defined and rhel7cis_rule_2_2_13_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_13|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_13|bool)
  tags:
      - level1
      - patch
      - rule_2.2.13
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.13 | AFTER | Ensure HTTP Proxy Server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.13 | AFTER | Ensure HTTP Proxy Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled squid 2>&1;echo -n "status=";systemctl status squid 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_13
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.13","description":"Ensure HTTP Proxy Server is not enabled","before":eb_rhel7cis_rule_2_2_13.stdout,"after":ea_rhel7cis_rule_2_2_13.stdout,"mode":mode_rhel7cis_rule_2_2_13,"status":cis_noncompliant_2_2_13_status}] }}'
    when: eb_rhel7cis_rule_2_2_13.stdout is defined and ea_rhel7cis_rule_2_2_13.stdout is defined
  when:
      - (rhel7cis_rule_2_2_13|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_13|bool)
  tags:
      - level1
      - patch
      - rule_2.2.13
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_14: true
  when:
      - (rhel7cis_snmp_server == false and snmpd_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.14 | BEFORE | Ensure SNMP Server is not enabled"
  block:
  - name: Initialize facts for 2.2.14
    set_fact:
      cis_noncompliant_2_2_14_status: Unknown
      mode_rhel7cis_rule_2_2_14: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_14|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.14 | BEFORE | Ensure SNMP Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled snmpd 2>&1;echo -n "status=";systemctl status snmpd 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_14
  when:
      - (rhel7cis_rule_2_2_14|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_14|bool)
  tags:
      - level1
      - patch
      - rule_2.2.14
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.14 | PATCH | Ensure SNMP Server is not enabled"
  service:
      name: snmpd
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_14_out
  when:
      - (rhel7cis_rule_2_2_14|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_14|bool)
      - snmpd_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.14
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_14|bool)) }}"

- name: Display Output SCORED | 2.2.14 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.14 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.14 |SNMP Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_14_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.14"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - snmpd_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_14_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_14|bool))
          - not(rhel7cis_rule_2_2_14_out.msg is defined and rhel7cis_rule_2_2_14_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.14 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.14 |SNMP Server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_14_status: Compliant
      when:
          - snmpd_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_14_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_14|bool) or (rhel7cis_rule_2_2_14_out.changed and rhel7cis_rule_2_2_14_out.msg is defined and rhel7cis_rule_2_2_14_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_14|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_14|bool)
  tags:
      - level1
      - patch
      - rule_2.2.14
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.14 | AFTER | Ensure SNMP Server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.14 | AFTER | Ensure SNMP Server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled snmpd 2>&1;echo -n "status=";systemctl status snmpd 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_14
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.14","description":"Ensure SNMP Server is not enabled","before":eb_rhel7cis_rule_2_2_14.stdout,"after":ea_rhel7cis_rule_2_2_14.stdout,"mode":mode_rhel7cis_rule_2_2_14,"status":cis_noncompliant_2_2_14_status}] }}'
    when: eb_rhel7cis_rule_2_2_14.stdout is defined and ea_rhel7cis_rule_2_2_14.stdout is defined
  when:
      - (rhel7cis_rule_2_2_14|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_14|bool)
  tags:
      - level1
      - patch
      - rule_2.2.14
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_15: true
  when:
      - (rhel7cis_is_mail_server == false) and (postfix_installed.rc == 0) and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.15 | BEFORE | Ensure mail transfer agent is configured for local-only mode"
  block:
  - name: Initialize facts for 2.2.15
    set_fact:
      cis_noncompliant_2_2_15_status: Unknown
      mode_rhel7cis_rule_2_2_15: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_15|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.15 | BEFORE | Ensure mail transfer agent is configured for local-only mode"
    shell: yum -y install net-tools >/dev/null 2>&1;netstat -an | grep LIST | grep ":25[[:space:]]";true
    #shell: yum -y install net-tools >/dev/null 2>&1;netstat -an | grep LIST | grep ":25[[:space:]]" | grep -v 127.0.0.1 | grep -v "::1:25";true
    args:
      warn: no
    register: eb_rhel7cis_rule_2_2_15
  when:
      - (rhel7cis_rule_2_2_15|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_15|bool)
  tags:
      - level1
      - patch
      - rule_2.2.15
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.15 | PATCH | Ensure mail transfer agent is configured for local-only mode"
  block:
    - name: "SCORED | 2.2.15 | PATCH | Ensure mail transfer agent is configured for local-only mode"
      lineinfile:
        dest: /etc/postfix/main.cf
        regexp: "^(#)?inet_interfaces"
        line: "inet_interfaces = localhost"
      register:  rhel7cis_rule_2_2_15_out
    - name: Restart postfix service if active
      shell: |
        systemctl status postfix | grep "Active: active";if [ $? -eq 0 ]; then systemctl restart postfix; fi
  when:
      - (rhel7cis_rule_2_2_15|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_15|bool)
      #- rhel7cis_is_mail_server == false and postfix_installed.rc == 0
  tags:
      - level1
      - patch
      - rule_2.2.15
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_15|bool)) }}"

- name: Display Output SCORED | 2.2.15 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.15 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.15 |mail transfer agent is configured for local-only mode|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_15_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_15_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.15"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rhel7cis_rule_2_2_15_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_15|bool))
    - block:
        - name: Display Output SCORED | 2.2.15 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.15 |mail transfer agent is configured for local-only mode|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_2_15_out.changed}}"
        - set_fact:
            cis_noncompliant_2_2_15_status: Compliant
      when:
          - not rhel7cis_rule_2_2_15_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_15|bool)
  when:
      - (rhel7cis_rule_2_2_15|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_15|bool)
      #- rhel7cis_is_mail_server == false and postfix_installed.rc == 0
  tags:
      - level1
      - patch
      - rule_2.2.15
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.15 | AFTER | Ensure mail transfer agent is configured for local-only mode"
  block:
  - name: "EVIDENCE | 2.2.15 | AFTER | Ensure mail transfer agent is configured for local-only mode"
    shell: netstat -an | grep LIST | grep ":25[[:space:]]";true
    register: ea_rhel7cis_rule_2_2_15
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.15","description":"Ensure mail transfer agent is configured for local-only mode","before":eb_rhel7cis_rule_2_2_15.stdout,"after":ea_rhel7cis_rule_2_2_15.stdout,"mode":mode_rhel7cis_rule_2_2_15,"status":cis_noncompliant_2_2_15_status}] }}'
    when: eb_rhel7cis_rule_2_2_15.stdout is defined and ea_rhel7cis_rule_2_2_15.stdout is defined
  when:
      - (rhel7cis_rule_2_2_15|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_15|bool)
  tags:
      - level1
      - patch
      - rule_2.2.15
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_16: true
  when:
      - (rhel7cis_nis_server == false and ypserv_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.16 | BEFORE | Ensure NIS Service is not enabled"
  block:
  - name: Initialize facts for 2.2.16
    set_fact:
      cis_noncompliant_2_2_16_status: Unknown
      mode_rhel7cis_rule_2_2_16: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_16|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.16 | BEFORE | Ensure NIS Service is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled ypserv 2>&1;echo -n "status=";systemctl status ypserv 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_16
  when:
      - (rhel7cis_rule_2_2_16|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_16|bool)
  tags:
      - level1
      - patch
      - rule_2.2.16
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.16 | PATCH | Ensure NIS Service is not enabled"
  service:
      name: ypserv
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_16_out
  when:
      - (rhel7cis_rule_2_2_16|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_16|bool)
      - ypserv_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.16
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_16|bool)) }}"

- name: Display Output SCORED | 2.2.16 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.16 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.16 |NIS Service is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_16_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.16"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - ypserv_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_16_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_16|bool))
          - not(rhel7cis_rule_2_2_16_out.msg is defined and rhel7cis_rule_2_2_16_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.16 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.16 |rsh server is not enabled - rlogin|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_16_status: Compliant
      when:
          - ypserv_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_16_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_16|bool) or (rhel7cis_rule_2_2_16_out.changed and rhel7cis_rule_2_2_16_out.msg is defined and rhel7cis_rule_2_2_16_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_16|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_16|bool)
  tags:
      - level1
      - patch
      - rule_2.2.16
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.16 | AFTER | Ensure NIS Service is not enabled"
  block:
  - name: "EVIDENCE | 2.2.16 | AFTER | Ensure NIS Service is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled ypserv 2>&1;echo -n "status=";systemctl status ypserv 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_16
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.16","description":"Ensure NIS Server is not enabled","before":eb_rhel7cis_rule_2_2_16.stdout,"after":ea_rhel7cis_rule_2_2_16.stdout,"mode":mode_rhel7cis_rule_2_2_16,"status":cis_noncompliant_2_2_16_status}] }}'
    when: eb_rhel7cis_rule_2_2_16.stdout is defined and ea_rhel7cis_rule_2_2_16.stdout is defined
  when:
      - (rhel7cis_rule_2_2_16|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_16|bool)
  tags:
      - level1
      - patch
      - rule_2.2.16
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_17: true
  when:
      - (rhel7cis_rsh_server == false and rsh_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.17 | BEFORE | Ensure rsh server is not enabled | rsh & rlogin & rexec"
  block:
  - name: Initialize facts for 2.2.17
    set_fact:
      cis_noncompliant_2_2_17_rsh_status: Unknown
      cis_noncompliant_2_2_17_rlogin_status: Unknown
      cis_noncompliant_2_2_17_rexec_status: Unknown
      cis_noncompliant_2_2_17_status: Unknown
      mode_rhel7cis_rule_2_2_17: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_17|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.17 | BEFORE | Ensure rsh server is not enabled | rsh & rlogin & rexec"
    shell: echo -n "rsh.socket-is-enabled=";systemctl is-enabled rsh.socket 2>&1;echo -n "rsh.socket-status=";systemctl status rsh.socket 2>&1 | grep Active; echo -n "rlogin.socket-is-enabled=";systemctl is-enabled rlogin.socket 2>&1;echo -n "rlogin.socket-status=";systemctl status rlogin.socket 2>&1 | grep Active; echo -n "rexec.socket-is-enabled=";systemctl is-enabled rexec.socket 2>&1;echo -n "rexec.socket-status=";systemctl status rexec.socket 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_17
  when:
      - (rhel7cis_rule_2_2_17|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)
  tags:
      - level1
      - patch
      - rule_2.2.17
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.17 | PATCH | Ensure rsh server is not enabled | rsh"
  service:
      name: rsh.socket
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_17_out
  when:
      - (rhel7cis_rule_2_2_17|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)
      - rsh_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.17
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)) }}"

- name: Display Output SCORED | 2.2.17 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.17 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.17 |rsh server is not enabled - rsh|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_17_rsh_status: NonCompliant
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rsh_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_17_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool))
          - not(rhel7cis_rule_2_2_17_out.msg is defined and rhel7cis_rule_2_2_17_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.17 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.17 |rsh server is not enabled - rsh|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_17_rsh_status: Compliant
      when:
          - rsh_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_17_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool) or (rhel7cis_rule_2_2_17_out.changed and rhel7cis_rule_2_2_17_out.msg is defined and rhel7cis_rule_2_2_17_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_17|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)
  tags:
      - level1
      - patch
      - rule_2.2.17
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.17 | PATCH | Ensure rsh server is not enabled | rlogin"
  service:
      name: rlogin.socket
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_17_out
  when:
      - (rhel7cis_rule_2_2_17|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)
      - rlogin_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.17
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)) }}"

- name: Display Output SCORED | 2.2.17 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.17 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.17 |rsh server is not enabled - rlogin|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_17_rlogin_status: NonCompliant
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rlogin_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_17_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool))
    - block:
        - name: Display Output SCORED | 2.2.17 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.17 |rsh server is not enabled - rlogin|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_17_rlogin_status: Compliant
      when:
          - rlogin_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_17_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool) or (rhel7cis_rule_2_2_17_out.changed and rhel7cis_rule_2_2_17_out.msg is defined and rhel7cis_rule_2_2_17_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_17|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)
  tags:
      - level1
      - patch
      - rule_2.2.17
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.17 | PATCH | Ensure rsh server is not enabled | rexec"
  service:
      name: rexec.socket
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_17_out
  when:
      - (rhel7cis_rule_2_2_17|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)
      - rexec_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.17
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)) }}"

- name: Display Output SCORED | 2.2.17 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.17 | When NotCompliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.17 |rsh server is not enabled - rexec |{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_17_rexec_status: NonCompliant
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rexec_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_17_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool))
          - not(rhel7cis_rule_2_2_17_out.msg is defined and rhel7cis_rule_2_2_17_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.17 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.17 |rsh server is not enabled - rexec |{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_17_rexec_status: Compliant
      when:
          - rexec_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_17_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool) or (rhel7cis_rule_2_2_17_out.changed and rhel7cis_rule_2_2_17_out.msg is defined and rhel7cis_rule_2_2_17_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_17|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)
  tags:
      - level1
      - patch
      - rule_2.2.17
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.17 | AFTER | Ensure rsh server is not enabled | rsh & rlogin & rexec"
  block:
  - set_fact:
      cis_noncompliant_status: true
      cis_noncompliant_2_2_17_status: NonCompliant
      cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.17"] }}'
    when: not(cis_noncompliant_2_2_17_rsh_status=="Compliant") or not(cis_noncompliant_2_2_17_rlogin_status=="Compliant") or not(cis_noncompliant_2_2_17_rexec_status=="Compliant")
  - set_fact:
      cis_noncompliant_2_2_17_status: Compliant
    when: cis_noncompliant_2_2_17_rsh_status=="Compliant" and cis_noncompliant_2_2_17_rlogin_status=="Compliant" and cis_noncompliant_2_2_17_rexec_status=="Compliant"
  - name: "EVIDENCE | 2.2.17 | AFTER | Ensure rsh server is not enabled | rsh & rlogin & rexec"
    shell: echo -n "rsh.socket-is-enabled=";systemctl is-enabled rsh.socket 2>&1;echo -n "rsh.socket-status=";systemctl status rsh.socket 2>&1 | grep Active; echo -n "rlogin.socket-is-enabled=";systemctl is-enabled rlogin.socket 2>&1;echo -n "rlogin.socket-status=";systemctl status rlogin.socket 2>&1 | grep Active; echo -n "rexec.socket-is-enabled=";systemctl is-enabled rexec.socket 2>&1;echo -n "rexec.socket-status=";systemctl status rexec.socket 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_17
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.17","description":"Ensure rsh server is not enabled | rsh & rlogin & rexec","before":eb_rhel7cis_rule_2_2_17.stdout,"after":ea_rhel7cis_rule_2_2_17.stdout,"mode":mode_rhel7cis_rule_2_2_17,"status":cis_noncompliant_2_2_17_status}] }}'
    when: eb_rhel7cis_rule_2_2_17.stdout is defined and ea_rhel7cis_rule_2_2_17.stdout is defined
  when:
      - (rhel7cis_rule_2_2_17|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_17|bool)
  tags:
      - level1
      - patch
      - rule_2.2.17
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_19: true
  when:
      - (rhel7cis_telnet_server == false and telnet_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.19 | BEFORE | Ensure telnet server is not enabled"
  block:
  - name: Initialize facts for 2.2.19
    set_fact:
      cis_noncompliant_2_2_19_status: Unknown
      mode_rhel7cis_rule_2_2_19: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_19|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.19 | BEFORE | Ensure telnet server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled telnet.socket 2>&1;echo -n "status=";systemctl status telnet.socket 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_19
  when:
      - (rhel7cis_rule_2_2_19|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_19|bool)
  tags:
      - level1
      - patch
      - rule_2.2.19
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.19 | PATCH | Ensure telnet server is not enabled"
  service:
      name: telnet.socket
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_19_out
  when:
      - (rhel7cis_rule_2_2_19|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_19|bool)
      - telnet_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.19
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_19|bool)) }}"

- name: Display Output SCORED | 2.2.19 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.19 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.19 |telnet server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_19_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.19"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - telnet_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_19_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_19|bool))
          - not(rhel7cis_rule_2_2_19_out.msg is defined and rhel7cis_rule_2_2_19_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.19 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.19 |telnet server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_19_status: Compliant
      when:
          - telnet_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_19_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_19|bool) or (rhel7cis_rule_2_2_19_out.changed and rhel7cis_rule_2_2_19_out.msg is defined and rhel7cis_rule_2_2_19_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_19|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_19|bool)
  tags:
      - level1
      - patch
      - rule_2.2.19
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.19 | AFTER | Ensure telnet server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.19 | AFTER | Ensure telnet server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled telnet.socket 2>&1;echo -n "status=";systemctl status telnet.socket 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_19
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.19","description":"Ensure telnet server is not enabled","before":eb_rhel7cis_rule_2_2_19.stdout,"after":ea_rhel7cis_rule_2_2_19.stdout,"mode":mode_rhel7cis_rule_2_2_19,"status":cis_noncompliant_2_2_19_status}] }}'
    when: eb_rhel7cis_rule_2_2_19.stdout is defined and ea_rhel7cis_rule_2_2_19.stdout is defined
  when:
      - (rhel7cis_rule_2_2_19|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_19|bool)
  tags:
      - level1
      - patch
      - rule_2.2.19
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_20: true
  when:
      - (rhel7cis_tftp_server == false and tftp_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.20 | BEFORE | Ensure tftp server is not enabled"
  block:
  - name: Initialize facts for 2.2.20
    set_fact:
      cis_noncompliant_2_2_20_status: Unknown
      mode_rhel7cis_rule_2_2_20: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_20|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.20 | BEFORE | Ensure tftp server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled tftp.socket 2>&1;echo -n "status=";systemctl status tftp.socket 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_20
  when:
      - (rhel7cis_rule_2_2_20|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_20|bool)
  tags:
      - level1
      - patch
      - rule_2.2.20
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.20 | PATCH | Ensure tftp server is not enabled"
  service:
      name: tftp.socket
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_20_out
  when:
      - (rhel7cis_rule_2_2_20|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_20|bool)
      - tftp_service_status.stdout == "loaded"
  tags:
      - level1
      - scored
      - insecure_services
      - tftp
      - patch
      - rule_2.2.20
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_20|bool)) }}"

- name: Display Output SCORED | 2.2.20 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.20 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.20 |tftp server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_20_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.20"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - tftp_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_20_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_20|bool))
          - not(rhel7cis_rule_2_2_20_out.msg is defined and rhel7cis_rule_2_2_20_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.20 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.20 |tftp server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_20_status: Compliant
      when:
          - tftp_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_20_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_20|bool) or (rhel7cis_rule_2_2_20_out.changed and rhel7cis_rule_2_2_20_out.msg is defined and rhel7cis_rule_2_2_20_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_20|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_20|bool)
  tags:
      - level1
      - scored
      - insecure_services
      - tftp
      - patch
      - rule_2.2.20
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.20 | AFTER | Ensure tftp server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.20 | AFTER | Ensure tftp server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled tftp.socket 2>&1;echo -n "status=";systemctl status tftp.socket 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_20
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.20","description":"Ensure tftp server is not enabled","before":eb_rhel7cis_rule_2_2_20.stdout,"after":ea_rhel7cis_rule_2_2_20.stdout,"mode":mode_rhel7cis_rule_2_2_20,"status":cis_noncompliant_2_2_20_status}] }}'
    when: eb_rhel7cis_rule_2_2_20.stdout is defined and ea_rhel7cis_rule_2_2_20.stdout is defined
  when:
      - (rhel7cis_rule_2_2_20|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_20|bool)
  tags:
      - level1
      - patch
      - rule_2.2.20
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_21: true
  when:
      - (rhel7cis_rsyncd_server == false and rsyncd_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.21 | BEFORE | Ensure rsync service is not enabled"
  block:
  - name: Initialize facts for 2.2.21
    set_fact:
      cis_noncompliant_2_2_21_status: Unknown
      mode_rhel7cis_rule_2_2_21: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_21|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.21 | BEFORE | Ensure rsync service is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled rsyncd 2>&1;echo -n "status=";systemctl status rsyncd 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_21
  when:
      - (rhel7cis_rule_2_2_21|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_21|bool)
  tags:
      - level1
      - patch
      - rule_2.2.21
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.21 | PATCH | Ensure rsync service is not enabled"
  service:
      name: rsyncd
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_21_out
  when:
      - (rhel7cis_rule_2_2_21|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_21|bool)
      - rsyncd_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.21
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_21|bool)) }}"

- name: Display Output SCORED | 2.2.21 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.21 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.21 |rsync service is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_21_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.21"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rsyncd_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_21_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_21|bool))
          - not(rhel7cis_rule_2_2_21_out.msg is defined and rhel7cis_rule_2_2_21_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.21 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.21 |rsync service is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_21_status: Compliant
      when:
          - rsyncd_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_21_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_21|bool) or (rhel7cis_rule_2_2_21_out.changed and rhel7cis_rule_2_2_21_out.msg is defined and rhel7cis_rule_2_2_21_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_21|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_21|bool)
  tags:
      - level1
      - patch
      - rule_2.2.21
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.21 | AFTER | Ensure rsync service is not enabled"
  block:
  - name: "EVIDENCE | 2.2.21 | AFTER | Ensure rsync service is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled rsyncd 2>&1;echo -n "status=";systemctl status rsyncd 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_21
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.21","description":"Ensure rsync service is not enabled","before":eb_rhel7cis_rule_2_2_21.stdout,"after":ea_rhel7cis_rule_2_2_21.stdout,"mode":mode_rhel7cis_rule_2_2_21,"status":cis_noncompliant_2_2_21_status}] }}'
    when: eb_rhel7cis_rule_2_2_21.stdout is defined and ea_rhel7cis_rule_2_2_21.stdout is defined
  when:
      - (rhel7cis_rule_2_2_21|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_21|bool)
  tags:
      - level1
      - patch
      - rule_2.2.21
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_2_18: true
  when:
      - (rhel7cis_ntalk_server == false and ntalk_service_status.stdout == "loaded") and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.2.18 | BEFORE | Ensure talk server is not enabled"
  block:
  - name: Initialize facts for 2.2.18
    set_fact:
      cis_noncompliant_2_2_18_status: Unknown
      mode_rhel7cis_rule_2_2_18: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_2_18|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.2.18 | BEFORE | Ensure talk server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled ntalk 2>&1;echo -n "status=";systemctl status ntalk 2>&1 | grep Active;true
    register: eb_rhel7cis_rule_2_2_18
  when:
      - (rhel7cis_rule_2_2_18|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_18|bool)
  tags:
      - level1
      - patch
      - rule_2.2.18
      - customcheck
  check_mode: no

- name: "SCORED | 2.2.18 | PATCH | Ensure talk server is not enabled"
  service:
      name: ntalk
      state: stopped
      enabled: no
  ignore_errors: yes
  register: rhel7cis_rule_2_2_18_out
  when:
      - (rhel7cis_rule_2_2_18|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_18|bool)
      - ntalk_service_status.stdout == "loaded"
  tags:
      - level1
      - patch
      - rule_2.2.18
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_18|bool)) }}"

- name: Display Output SCORED | 2.2.18 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.2.18 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.2.18 | talk server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_2_18_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.2.18"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - ntalk_service_status.stdout == "loaded"
          - rhel7cis_rule_2_2_18_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_2_18|bool))
          - not(rhel7cis_rule_2_2_18_out.msg is defined and rhel7cis_rule_2_2_18_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
    - block:
        - name: Display Output SCORED | 2.2.18 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.2.18 | talk server is not enabled|{{ansible_hostname}}|CHANGE_REQUIRED|False"
        - set_fact:
            cis_noncompliant_2_2_18_status: Compliant
      when:
          - ntalk_service_status.stdout != "loaded" or not rhel7cis_rule_2_2_18_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_18|bool) or (rhel7cis_rule_2_2_18_out.changed and rhel7cis_rule_2_2_18_out.msg is defined and rhel7cis_rule_2_2_18_out.msg is search("Service.*not found on host, assuming it will exist on full run"))
  when:
      - (rhel7cis_rule_2_2_18|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_18|bool)
  tags:
      - level1
      - patch
      - rule_2.2.18
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.2.18 | AFTER | Ensure talk server is not enabled"
  block:
  - name: "EVIDENCE | 2.2.18 | AFTER | Ensure talk server is not enabled"
    shell: echo -n "is-enabled=";systemctl is-enabled ntalk 2>&1;echo -n "status=";systemctl status ntalk 2>&1 | grep Active;true
    register: ea_rhel7cis_rule_2_2_18
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.2.18","description":"Ensure talk server is not enabled","before":eb_rhel7cis_rule_2_2_18.stdout,"after":ea_rhel7cis_rule_2_2_18.stdout,"mode":mode_rhel7cis_rule_2_2_18,"status":cis_noncompliant_2_2_18_status}] }}'
    when: eb_rhel7cis_rule_2_2_18.stdout is defined and ea_rhel7cis_rule_2_2_18.stdout is defined
  when:
      - (rhel7cis_rule_2_2_18|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_2_18|bool)
  tags:
      - level1
      - patch
      - rule_2.2.18
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_3_1: true
  when:
      - rhel7cis_ypbind_required == false and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.3.1 | BEFORE | Ensure NIS Client is not installed"
  block:
  - name: Initialize facts for 2.3.1
    set_fact:
      cis_noncompliant_2_3_1_status: Unknown
      mode_rhel7cis_rule_2_3_1: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_3_1|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.3.1 | BEFORE | Ensure NIS Client is not installed"
    shell: rpm -q ypbind 2>&1 || true
    args:
      warn: no
    register: eb_rhel7cis_rule_2_3_1
  when:
      - (rhel7cis_rule_2_3_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_1|bool)
  tags:
      - level1
      - patch
      - rule_2.3.1
      - customcheck
  check_mode: no

- name: "SCORED | 2.3.1 | PATCH | Ensure NIS Client is not installed"
  yum:
      name: ypbind
      state: absent
  register:  rhel7cis_rule_2_3_1_out
  when:
      - (rhel7cis_rule_2_3_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_1|bool)
      #- rhel7cis_ypbind_required == false
  tags:
      - level1
      - patch
      - rule_2.3.1
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_3_1|bool)) }}"

- name: Display Output SCORED | 2.3.1 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.3.1 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.3.1 | NIS Client is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_3_1_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_3_1_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.3.1"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rhel7cis_rule_2_3_1_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_3_1|bool))
    - block:
        - name: Display Output SCORED | 2.3.1 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.3.1 | NIS Client is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_3_1_out.changed}}"
        - set_fact:
            cis_noncompliant_2_3_1_status: Compliant
      when:
          - not rhel7cis_rule_2_3_1_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_1|bool)
  when:
      - (rhel7cis_rule_2_3_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_1|bool)
      #- rhel7cis_ypbind_required == false
  tags:
      - level1
      - patch
      - rule_2.3.1
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.3.1 | AFTER | Ensure NIS Client is not installed"
  block:
  - name: "EVIDENCE | 2.3.1 | AFTER | Ensure NIS Client is not installed"
    shell: rpm -q ypbind 2>&1 || true
    args:
      warn: no
    register: ea_rhel7cis_rule_2_3_1
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.3.1","description":"Ensure NIS Client is not installed","before":eb_rhel7cis_rule_2_3_1.stdout,"after":ea_rhel7cis_rule_2_3_1.stdout,"mode":mode_rhel7cis_rule_2_3_1,"status":cis_noncompliant_2_3_1_status}] }}'
    when: eb_rhel7cis_rule_2_3_1.stdout is defined and ea_rhel7cis_rule_2_3_1.stdout is defined
  when:
      - (rhel7cis_rule_2_3_1|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_1|bool)
  tags:
      - level1
      - patch
      - rule_2.3.1
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_3_2: true
  when:
      - rhel7cis_rsh_required == false and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.3.2 | BEFORE | Ensure rsh client is not installed"
  block:
  - name: Initialize facts for 2.3.2
    set_fact:
      cis_noncompliant_2_3_2_status: Unknown
      mode_rhel7cis_rule_2_3_2: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_3_2|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.3.2 | BEFORE | Ensure rsh client is not installed"
    shell: rpm -q rsh || true
    args:
      warn: no
    register: eb_rhel7cis_rule_2_3_2
  when:
      - (rhel7cis_rule_2_3_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_2|bool)
  tags:
      - level1
      - patch
      - rule_2.3.2
      - customcheck
  check_mode: no

- name: "SCORED | 2.3.2 | PATCH | Ensure rsh client is not installed"
  yum:
      name: rsh
      state: absent
  register:  rhel7cis_rule_2_3_2_out
  when:
      - (rhel7cis_rule_2_3_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_2|bool)
      #- rhel7cis_rsh_required == false
  tags:
      - level1
      - patch
      - rule_2.3.2
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_3_2|bool)) }}"

- name: Display Output SCORED | 2.3.2 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.3.2 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.3.2 |rsh client is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_3_2_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_3_2_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.3.2"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rhel7cis_rule_2_3_2_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_3_2|bool))
    - block:
        - name: Display Output SCORED | 2.3.2 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.3.2 |rsh client is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_3_2_out.changed}}"
        - set_fact:
            cis_noncompliant_2_3_2_status: Compliant
      when:
          - not rhel7cis_rule_2_3_2_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_2|bool)
  when:
      - (rhel7cis_rule_2_3_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_2|bool)
      #- rhel7cis_rsh_required == false
  tags:
      - level1
      - patch
      - rule_2.3.2
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.3.2 | AFTER | Ensure rsh client is not installed"
  block:
  - name: "EVIDENCE | 2.3.2 | AFTER | Ensure rsh client is not installed"
    shell: rpm -q rsh || true
    args:
      warn: no
    register: ea_rhel7cis_rule_2_3_2
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.3.2","description":"Ensure rsh client is not installed","before":eb_rhel7cis_rule_2_3_2.stdout,"after":ea_rhel7cis_rule_2_3_2.stdout,"mode":mode_rhel7cis_rule_2_3_2,"status":cis_noncompliant_2_3_2_status}] }}'
    when: eb_rhel7cis_rule_2_3_2.stdout is defined and ea_rhel7cis_rule_2_3_2.stdout is defined
  when:
      - (rhel7cis_rule_2_3_2|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_2|bool)
  tags:
      - level1
      - patch
      - rule_2.3.2
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_3_3: true
  when:
      - rhel7cis_talk_required == false and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.3.3 | BEFORE | Ensure talk client is not installed"
  block:
  - name: Initialize facts for 2.3.3
    set_fact:
      cis_noncompliant_2_3_3_status: Unknown
      mode_rhel7cis_rule_2_3_3: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_3_3|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.3.3 | BEFORE | Ensure talk client is not installed"
    shell: rpm -q talk || true
    args:
      warn: no
    register: eb_rhel7cis_rule_2_3_3
  when:
      - (rhel7cis_rule_2_3_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_3|bool)
  tags:
      - level1
      - patch
      - rule_2.3.3
      - customcheck
  check_mode: no

- name: "SCORED | 2.3.3 | PATCH | Ensure talk client is not installed"
  yum:
      name: talk
      state: absent
  register:  rhel7cis_rule_2_3_3_out
  when:
      - (rhel7cis_rule_2_3_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_3|bool)
      #- rhel7cis_talk_required == false
  tags:
      - level1
      - patch
      - rule_2.3.3
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_3_3|bool)) }}"

- name: Display Output SCORED | 2.3.3 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.3.3 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.3.3 |talk client is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_3_3_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_3_3_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.3.3"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rhel7cis_rule_2_3_3_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_3_3|bool))
    - block:
        - name: Display Output SCORED | 2.3.3 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.3.3 |talk client is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_3_3_out.changed}}"
        - set_fact:
            cis_noncompliant_2_3_3_status: Compliant
      when:
          - not rhel7cis_rule_2_3_3_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_3|bool)
  when:
      - (rhel7cis_rule_2_3_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_3|bool)
      #- rhel7cis_talk_required == false
  tags:
      - level1
      - patch
      - rule_2.3.3
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.3.3 | AFTER | Ensure talk client is not installed"
  block:
  - name: "EVIDENCE | 2.3.3 | AFTER | Ensure talk client is not installed"
    shell: rpm -q talk || true
    args:
      warn: no
    register: ea_rhel7cis_rule_2_3_3
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.3.3","description":"Ensure talk client is not installed","before":eb_rhel7cis_rule_2_3_3.stdout,"after":ea_rhel7cis_rule_2_3_3.stdout,"mode":mode_rhel7cis_rule_2_3_3,"status":cis_noncompliant_2_3_3_status}] }}'
    when: eb_rhel7cis_rule_2_3_3.stdout is defined and ea_rhel7cis_rule_2_3_3.stdout is defined
  when:
      - (rhel7cis_rule_2_3_3|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_3|bool)
  tags:
      - level1
      - patch
      - rule_2.3.3
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_3_4: true
  when:
      - rhel7cis_telnet_required == false and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.3.4 | BEFORE | Ensure telnet client is not installed"
  block:
  - name: Initialize facts for 2.3.4
    set_fact:
      cis_noncompliant_2_3_4_status: Unknown
      mode_rhel7cis_rule_2_3_4: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_3_4|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.3.4 | BEFORE | Ensure telnet client is not installed"
    shell: rpm -q telnet || true
    args:
      warn: no
    register: eb_rhel7cis_rule_2_3_4
  when:
      - (rhel7cis_rule_2_3_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_4|bool)
  tags:
      - level1
      - patch
      - rule_2.3.4
      - customcheck
  check_mode: no

- name: "SCORED | 2.3.4 | PATCH | Ensure telnet client is not installed"
  yum:
      name: telnet
      state: absent
  register:  rhel7cis_rule_2_3_4_out
  when:
      - (rhel7cis_rule_2_3_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_4|bool)
      #- rhel7cis_telnet_required == false
  tags:
      - level1
      - patch
      - rule_2.3.4
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_3_4|bool)) }}"

- name: Display Output SCORED | 2.3.4 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.3.4 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.3.4 |Ensure telnet client is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_3_4_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_3_4_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.3.4"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rhel7cis_rule_2_3_4_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_3_4|bool))
    - block:
        - name: Display Output SCORED | 2.3.4 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.3.4 |Ensure telnet client is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_3_4_out.changed}}"
        - set_fact:
            cis_noncompliant_2_3_4_status: Compliant
      when:
          - not rhel7cis_rule_2_3_4_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_4|bool)
  when:
      - (rhel7cis_rule_2_3_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_4|bool)
      #- rhel7cis_telnet_required == false
  tags:
      - level1
      - patch
      - rule_2.3.4
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.3.4 | AFTER | Ensure telnet client is not installed"
  block:
  - name: "EVIDENCE | 2.3.4 | AFTER | Ensure telnet client is not installed"
    shell: rpm -q telnet || true
    args:
      warn: no
    register: ea_rhel7cis_rule_2_3_4
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.3.4","description":"Ensure telnet client is not installed","before":eb_rhel7cis_rule_2_3_4.stdout,"after":ea_rhel7cis_rule_2_3_4.stdout,"mode":mode_rhel7cis_rule_2_3_4,"status":cis_noncompliant_2_3_4_status}] }}'
    when: eb_rhel7cis_rule_2_3_4.stdout is defined and ea_rhel7cis_rule_2_3_4.stdout is defined
  when:
      - (rhel7cis_rule_2_3_4|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_4|bool)
  tags:
      - level1
      - patch
      - rule_2.3.4
      - customcheck
  check_mode: no
#*********************************************************************************
- set_fact:
      fix_rhel7cis_rule_2_3_5: true
  when:
      - rhel7cis_openldap_clients_required == false and (fix_serviceconfig|bool)

- name: "EVIDENCE | 2.3.5 | BEFORE | Ensure LDAP client is not installed"
  block:
  - name: Initialize facts for 2.3.5
    set_fact:
      cis_noncompliant_2_3_5_status: Unknown
      mode_rhel7cis_rule_2_3_5: "{{ 'fix' if (fix_mode|bool or fix_rhel7cis_rule_2_3_5|bool) else 'check_only'}}"
  - name: "EVIDENCE | 2.3.5 | BEFORE | Ensure LDAP client is not installed"
    shell: rpm -q openldap-clients || true
    args:
      warn: no
    register: eb_rhel7cis_rule_2_3_5
  when:
      - (rhel7cis_rule_2_3_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_5|bool)
  tags:
      - level1
      - patch
      - rule_2.3.5
      - customcheck
  check_mode: no

- name: "SCORED | 2.3.5 | PATCH | Ensure LDAP client is not installed"
  yum:
      name: openldap-clients
      state: absent
  register:  rhel7cis_rule_2_3_5_out
  when:
      - (rhel7cis_rule_2_3_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_5|bool)
      #- rhel7cis_openldap_clients_required == false
  tags:
      - level1
      - patch
      - rule_2.3.5
      - customcheck
  check_mode: "{{ not ((fix_mode|bool) or (fix_rhel7cis_rule_2_3_5|bool)) }}"

- name: Display Output SCORED | 2.3.5 | Check Compliant
  block:
    - block:
        - name: Display Output SCORED | 2.3.5 | When Not Compliant
          debug:
            msg="NOT_COMPLIANT|CIS_RESULT| 2.3.5 |LDAP client is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_3_5_out.changed}}"
        - set_fact:
            cis_noncompliant_status: true
            cis_noncompliant_2_3_5_status: NonCompliant
            cis_noncompliant_aggregate: '{{ cis_noncompliant_aggregate + ["2.3.5"] }}'
      when:
          # wanted to be changed but run in check_mode:false means not fixed, it is not made compliant
          - rhel7cis_rule_2_3_5_out.changed and not ((fix_mode|bool) or (fix_rhel7cis_rule_2_3_5|bool))
    - block:
        - name: Display Output SCORED | 2.3.5 | When Compliant
          debug:
            msg="SUCCESS_COMPLIANT|CIS_RESULT| 2.3.5 |LDAP client is not installed|{{ansible_hostname}}|CHANGE_REQUIRED|{{rhel7cis_rule_2_3_5_out.changed}}"
        - set_fact:
            cis_noncompliant_2_3_5_status: Compliant
      when:
          - not rhel7cis_rule_2_3_5_out.changed or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_5|bool)
  when:
      - (rhel7cis_rule_2_3_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_5|bool)
      #- rhel7cis_openldap_clients_required == false
  tags:
      - level1
      - patch
      - rule_2.3.5
      - customcheck
  check_mode: no

- name: "EVIDENCE | 2.3.5 | AFTER | Ensure LDAP client is not installed"
  block:
  - name: "EVIDENCE | 2.3.5 | AFTER | Ensure LDAP client is not installed"
    shell: rpm -q openldap-clients || true
    args:
      warn: no
    register: ea_rhel7cis_rule_2_3_5
  - set_fact:
      cis_evidence: '{{ cis_evidence + [{"id":"2.3.5","description":"Ensure LDAP client is not installed","before":eb_rhel7cis_rule_2_3_5.stdout,"after":ea_rhel7cis_rule_2_3_5.stdout,"mode":mode_rhel7cis_rule_2_3_5,"status":cis_noncompliant_2_3_5_status}] }}'
    when: eb_rhel7cis_rule_2_3_5.stdout is defined and ea_rhel7cis_rule_2_3_5.stdout is defined
  when:
      - (rhel7cis_rule_2_3_5|bool) or (fix_mode|bool) or (fix_rhel7cis_rule_2_3_5|bool)
  tags:
      - level1
      - patch
      - rule_2.3.5
      - customcheck
  check_mode: no
#*********************************************************************************
